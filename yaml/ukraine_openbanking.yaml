openapi: 3.0.1
info:
  title: Openbanking Ukraine
  version: "2.0"
  description: |

    This is a draft yaml document for Openbanking in Ukraine based on Berlin Group specifications.
    
    ## General Remarks on Data Types

    The Berlin Group definition of UTF-8 strings in context of the OpenFinance API has to support at least the following
    characters

    a b c d e f g h i j k l m n o p q r s t u v w x y z
    
    A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
    
    0 1 2 3 4 5 6 7 8 9
    
    / - ? : ( ) . , ' +
    
    Space


externalDocs:
  description: |
    Full Documentation of OpenFinance Access to Account Interoperability Framework
    (General Introduction Paper, Operational Rules, Implementation Guidelines)
  url: https://www.berlin-group.org/openfinance-downloads

servers:
  - url: https://api.testbank.com/openfinance
    description: OpenFinance server
  - url: https://test-api.testbank.com/openfinance
    description: Optional OpenFinance test server

paths:

  #####################################################
  # Payment Information Service
  #####################################################

  /v2/{payment-service}/{payment-product}:
    post:
      summary: Payment initiation request
      description: |
        This method is used to initiate a payment at the ASPSP.

        ## Variants of payment initiation requests

        This method to initiate a payment initiation at the ASPSP can be sent with either a JSON  
        body depending on the payment product in the path.

        There are the following **payment products**:

          - Payment products with payment information in *JSON* format:
            - ***sepa-credit-transfers***
            - ***instant-sepa-credit-transfers***
            - ***target-2-payments***
            - ***cross-border-credit-transfers***

        Furthermore the request body depends on the **payment-service**:
          * ***payments***: A single payment initiation request.
        
          * ***bulk-payments***: A collection of several payment initiation requests.
            In case of a *JSON* there are several JSON payment blocks contained in a joining list.
        
          * ***periodic-payments***:
            Create a standing order initiation resource for recurrent i.e. periodic payments addressable under 
            {paymentId} with all data relevant for the corresponding payment product and the execution of the standing 
            order contained in a JSON body.

        This is the first step in the API to initiate the related recurring/periodic payment.

        ## Single and multilevel SCA Processes

        The payment initiation requests are independent from the need of one or multilevel
        SCA processing, i.e. independent from the number of authorisations needed for the execution of payments.

        But the response messages are specific to either one SCA processing or multilevel SCA processing.

        For payment initiation with multilevel SCA, this specification requires an explicit start of the authorisation,
        i.e. links directly associated with SCA processing like 'scaRedirect' or 'scaOAuth' cannot be contained in the
        response message of a Payment Initiation Request for a payment, where multiple authorisations are needed.
        Also if any data is needed for the next action, like selecting an SCA method is not supported in the response,
        since all starts of the multiple authorisations are fully equal.
        In these cases, first an authorisation sub-resource has to be generated following the 'startAuthorisation' link.
      operationId: initiatePayment
      tags:
        - Payment Initiation Service (PIS)

      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []

      parameters:
      #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/PSU-ID"
        - $ref: "#/components/parameters/PSU-ID-Type"
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
        - $ref: "#/components/parameters/consentId_HEADER_optional"
        - $ref: "#/components/parameters/PSU-IP-Address_mandatory"
        - $ref: "#/components/parameters/TPP-Redirect-URI"
        - $ref: "#/components/parameters/TPP-Nok-Redirect-URI"
        - $ref: "#/components/parameters/TPP-Explicit-Authorisation-Preferred"
        - $ref: "#/components/parameters/TPP-Rejection-NoFunds-Preferred"
        - $ref: "#/components/parameters/TPP-SCA-Approach-Preference"
        - $ref: "#/components/parameters/Client-Notification-URI"
        - $ref: "#/components/parameters/Client-Notification-Content-Preferred"
        - $ref: "#/components/parameters/Client-Brand-Logging-Information"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"

      requestBody:
        $ref: "#/components/requestBodies/paymentInitiation"

      responses:
        '201':
          $ref: "#/components/responses/CREATED_201_PaymentInitiation"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_PIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_PIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_PIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_PIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PIS"

  /v2/{payment-service}/{payment-product}/{paymentId}:
    get:
      summary: Get payment information
      description: Returns the content of a payment object
      operationId: getPaymentInformation
      tags:
        - Payment Initiation Service (PIS)
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      parameters:
      #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
        - $ref: "#/components/parameters/paymentId"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Geo-Location"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
      #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_PaymentInitiationInformation"
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_PIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_PIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_PIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_PIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PIS"


    delete:
      summary: Payment cancellation request
      description: |
        This method initiates the cancellation of a payment.
        Depending on the payment-service, the payment-product and the ASPSP's implementation,
        this TPP call might be sufficient to cancel a payment.
        If an authorisation of the payment cancellation is mandated by the ASPSP,
        a corresponding hyperlink will be contained in the response message.

        Cancels the addressed payment with resource identification paymentId if applicable to the payment-service, 
        payment-product and received in product related timelines (e.g. before end of business day for scheduled 
        payments of the last business day before the scheduled execution day).

        The response to this DELETE command will tell the TPP whether the
          * access method was rejected,
          * access method was successful, or
          * access method is generally applicable, but further authorisation processes are needed.
      operationId: cancelPayment
      tags:
        - Payment Initiation Service (PIS)

      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []

      parameters:
      #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
        - $ref: "#/components/parameters/paymentId"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
        - $ref: "#/components/parameters/PSU-ID"
        - $ref: "#/components/parameters/PSU-ID-Type"
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Geo-Location"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        #other headers
        - $ref: "#/components/parameters/TPP-SCA-Approach-Preference"
        - $ref: "#/components/parameters/TPP-Redirect-URI"
        - $ref: "#/components/parameters/TPP-Nok-Redirect-URI"
        - $ref: "#/components/parameters/TPP-Explicit-Authorisation-Preferred"
        - $ref: "#/components/parameters/Client-Notification-URI"
        - $ref: "#/components/parameters/Client-Notification-Content-Preferred"
        - $ref: "#/components/parameters/Client-Brand-Logging-Information"
      #NO REQUEST BODY

      responses:
        '204':
          $ref: "#/components/responses/NO_CONTENT_204_PaymentInitiationCancel"
          #If the DELETE is sufficient for cancelling the payment
        '202':
          $ref: "#/components/responses/RECEIVED_202_PaymentInitiationCancel"
          #If the DELETE is not sufficient for cancelling the payment since an authorisation of the cancellation by
          # the PSU is needed.

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_PIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_PIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_PIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PIS_CANC"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_PIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PIS"


  /v2/{payment-service}/{payment-product}/{paymentId}/status:
    get:
      summary: Payment initiation status request
      description: Check the transaction status of a payment initiation.
      operationId: getPaymentInitiationStatus
      tags:
        - Payment Initiation Service (PIS)

      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      #In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []

      parameters:
        #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
        - $ref: "#/components/parameters/paymentId"
          #query # NO QUERY PARAMETER
          #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Geo-Location"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
      #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_PaymentInitiationStatus"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_PIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_PIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_PIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_PIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PIS"

  /v2/{payment-service}/{payment-product}/{paymentId}/authorisations:
    post:
      summary: Start the authorisation process for a payment initiation
      description: |
        Create an authorisation sub-resource and start the authorisation process,
        might in addition transmit authentication and authorisation related data. This method is iterated n times 
        for an n times SCA authorisation in a corporate context, each creating an own authorisation sub-endpoint 
        for the corresponding PSU authorising the transaction.

        The ASPSP might make the usage of this access method unnecessary in case of only one SCA process needed, 
        since the related authorisation resource might be automatically created by the ASPSP after the submission 
        of the resource data with the first POST {resource-path} call.

        The start authorisation process is a process which is needed for creating a new authorisation
        or cancellation sub-resource.

        This applies in the following scenarios:

          * The ASPSP has indicated with a 'startAuthorisation' hyperlink in the preceding Payment
            initiation response that an explicit start of the authorisation process is needed by the TPP.
            The 'startAuthorisation' hyperlink can transport more information about data which needs to be
            uploaded by using the extended forms:
            * 'startAuthorisationWithPsuIdentification'
            * 'startAuthorisationWithPsuAuthentication'
            * 'startAuthorisationWithEncryptedPsuAuthentication'
            * 'startAuthorisationWithAuthentciationMethodSelection'
            * 'startAuthorisationWithTransactionAuthorisation'
          * The related business transaction or business transaction cancellation cannot yet be executed since a
            multilevel SCA is mandated.
          * The ASPSP has indicated with a 'startAuthorisation' hyperlink in the preceding
            Payment cancellation response that an explicit start of the authorisation process is needed by the TPP.
            The 'startAuthorisation' hyperlink can transport more information about data which needs to be uploaded
            by using the extended forms as indicated above.
          * The related payment cancellation request cannot be applied yet since a multilevel SCA is mandate for
            executing the cancellation.
      operationId: startPaymentAuthorisation
      tags:
        - Payment Initiation Service (PIS)
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      parameters:
        #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
        - $ref: "#/components/parameters/paymentId"
        #query # NO QUERY PARAMETER
        #header
        #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #method specific header elements
        - $ref: "#/components/parameters/PSU-ID"
        - $ref: "#/components/parameters/PSU-ID-Type"
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
        - $ref: "#/components/parameters/TPP-SCA-Approach-Preference"
        - $ref: "#/components/parameters/TPP-Redirect-URI"
        - $ref: "#/components/parameters/TPP-Nok-Redirect-URI"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"

      requestBody:
        content:
          application/json:
            schema:
              oneOf: #Different Authorisation Bodies
                - {}
                - $ref: "#/components/schemas/updatePsuAuthentication"
                - $ref: "#/components/schemas/selectPsuAuthenticationMethod"
                - $ref: "#/components/schemas/transactionAuthorisation"

      responses:
        '201':
          $ref: "#/components/responses/CREATED_201_StartScaProcess"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_PIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_PIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_PIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_PIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PIS"


    get:
      summary: Get payment initiation authorisation sub-resources request
      description: |
        Read a list of all authorisation sub-resources IDs which have been created.

        This function returns an array of hyperlinks to all generated authorisation sub-resources.
      operationId: getPaymentInitiationAuthorisation
      tags:
        - Payment Initiation Service (PIS)

      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      #In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []

      parameters:
        #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
        - $ref: "#/components/parameters/paymentId"

        #query # NO QUERY PARAMETER
        #header
        #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"

      responses:
        '200':
          $ref: "#/components/responses/OK_200_Authorisations"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_PIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_PIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_PIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_PIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PIS"


  /v2/{payment-service}/{payment-product}/{paymentId}/authorisations/{authorisationId}:
    get:
      summary: Checks the SCA status of a payment authorisation sub-resource.
      description: |
        This method returns the SCA status of a payment initiation's authorisation sub-resource.
      operationId: getPaymentInitiationScaStatus
      tags:
        - Payment Initiation Service (PIS)

      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []

      parameters:
        #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
        - $ref: "#/components/parameters/paymentId"
        - $ref: "#/components/parameters/authorisationId"
        #query # NO QUERY PARAMETER
        #header
        #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_ScaStatus"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_PIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_PIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_PIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_PIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PIS"

    put:
      summary: Update PSU data for payment initiation
      description: |
        This methods updates PSU data on the authorisation resource if needed.
        It may authorise a payment within the Embedded SCA Approach where needed.

        Independently from the SCA Approach it supports e.g. the selection of
        the authentication method and a non-SCA PSU authentication.

        There are several possible update PSU data requests in the context of payment initiation services needed,
        which depends on the SCA approach:

        * Redirect SCA Approach:
          A specific update PSU data request is applicable for
            * the selection of authentication methods, before choosing the actual SCA approach.
        * Decoupled SCA Approach:
          A specific update PSU data request is only applicable for
          * adding the PSU identification, if not provided yet in the payment initiation request 
          * or the account information consent request, 
          * or if no OAuth2 access token is used, or the selection of authentication methods.
        * Embedded SCA Approach:
          The Update PSU Data request might be used
          * to add credentials as a first factor authentication data of the PSU and
          * to select the authentication method and
          * transaction authorisation.

        The SCA Approach might depend on the chosen SCA method.
        For that reason, the following possible Update PSU data request can apply to all SCA approaches:

        * Select an SCA method in case of several SCA methods are available for the customer.

        There are the following request types on this access path:
          * Update PSU identification
          * Update PSU authentication
          * Select PSU  method
            WARNING: This method needs a reduced header,
            therefore many optional elements are not present.
            Maybe in a later version the access path will change.
          * Transaction authorisation
            WARNING: This method needs a reduced header,
            therefore many optional elements are not present.
            Maybe in a later version the access path will change.
      operationId: updatePaymentPsuData
      tags:
        - Payment Initiation Service (PIS)

      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []

      parameters:
        #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
        - $ref: "#/components/parameters/paymentId"
        - $ref: "#/components/parameters/authorisationId"
        #query # NO QUERY PARAMETER
        #header
        #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
        #method specific header elements # Not always allowed depending on the kind of update which is ask for
        - $ref: "#/components/parameters/PSU-ID"
        - $ref: "#/components/parameters/PSU-ID-Type"
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"

      requestBody:
        content:
          application/json:
            schema:
              oneOf: #Different authorisation bodies
                - {}
                - $ref: "#/components/schemas/updatePsuAuthentication"
                - $ref: "#/components/schemas/selectPsuAuthenticationMethod"
                - $ref: "#/components/schemas/transactionAuthorisation"
                - $ref: "#/components/schemas/authorisationConfirmation"

      responses:
        '200':
          $ref: "#/components/responses/OK_200_UpdatePsuData"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_PIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_PIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_PIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_PIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PIS"

  /v2/{payment-service}/{payment-product}/{paymentId}/cancellation-authorisations:
    post:
      summary: Start the authorisation process for the cancellation of the addressed payment
      description: |
        Creates an authorisation sub-resource and start the authorisation process of the cancellation of the addressed 
        payment. The message might in addition transmit authentication and authorisation related data.

        This method is iterated n times for a n times SCA authorisation in a
        corporate context, each creating an own authorisation sub-endpoint for
        the corresponding PSU authorising the cancellation-authorisation.

        The ASPSP might make the usage of this access method unnecessary in case
        of only one SCA process needed, since the related authorisation resource
        might be automatically created by the ASPSP after the submission of the
        payment data with the first POST payments/{payment-product} call.

        The start authorisation process is a process which is needed for creating a new authorisation
        or cancellation sub-resource.

        This applies in the following scenarios:

          * The ASPSP has indicated with a 'startAuthorisation' hyperlink in the preceding payment
            initiation response that an explicit start of the authorisation process is needed by the TPP.
            The 'startAuthorisation' hyperlink can transport more information about data which needs to be
            uploaded by using the extended forms:
            * 'startAuthorisationWithPsuIdentification'
            * 'startAuthorisationWithPsuAuthentication'
            * 'startAuthorisationWithAuthenticationMethodSelection'
          * The related payment initiation cannot yet be executed since a multilevel SCA is mandated.
          * The ASPSP has indicated with a 'startAuthorisation' hyperlink in the preceding
            payment cancellation response that an explicit start of the authorisation process is needed by the TPP.
            The 'startAuthorisation' hyperlink can transport more information about data which needs to be uploaded
            by using the extended forms as indicated above.
          * The related payment cancellation request cannot be applied yet since a multilevel SCA is mandate for
            executing the cancellation.
      operationId: startPaymentInitiationCancellationAuthorisation
      tags:
        - Payment Initiation Service (PIS)
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      parameters:
        #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
        - $ref: "#/components/parameters/paymentId"
        #query # NO QUERY PARAMETER
        #header
        #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/PSU-ID"
        - $ref: "#/components/parameters/PSU-ID-Type"
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
        - $ref: "#/components/parameters/TPP-SCA-Approach-Preference"
        - $ref: "#/components/parameters/TPP-Redirect-URI"
        - $ref: "#/components/parameters/TPP-Nok-Redirect-URI"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"

      requestBody:
        content:
          application/json:
            schema:
              oneOf: #Different Authorisation Bodies
                - {}
                - $ref: "#/components/schemas/updatePsuAuthentication"
                - $ref: "#/components/schemas/selectPsuAuthenticationMethod"
                - $ref: "#/components/schemas/transactionAuthorisation"

      responses:
        '201':
          $ref: "#/components/responses/CREATED_201_StartScaProcess"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_PIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_PIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_PIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_PIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PIS"


    get:
      summary: Will deliver an array of resource identifications to all generated cancellation authorisation 
               sub-resources
      description: |
        Retrieve a list of all created cancellation authorisation sub-resources.
      operationId: getPaymentInitiationCancellationAuthorisationInformation
      tags:
        - Payment Initiation Service (PIS)

      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []

      parameters:
        #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
        - $ref: "#/components/parameters/paymentId"
        #query # NO QUERY PARAMETER
        #header
        #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_Authorisations"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_PIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_PIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_PIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_PIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PIS"

  /v2/{payment-service}/{payment-product}/{paymentId}/cancellation-authorisations/{authorisationId}:

    get:
      summary: Read the SCA status of the payment cancellation's authorisation
      description: |
        This method returns the SCA status of a payment cancellation's authorisation sub-resource.
      operationId: getPaymentCancellationScaStatus
      tags:
        - Payment Initiation Service (PIS)

      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []

      parameters:
      #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
        - $ref: "#/components/parameters/paymentId"
        - $ref: "#/components/parameters/authorisationId"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_ScaStatus"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_PIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_PIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_PIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_PIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PIS"


    put:
      summary: Update PSU data for payment initiation cancellation
      description: |
        This method updates PSU data on the cancellation authorisation resource if needed.
        It may authorise a cancellation of the payment within the Embedded SCA Approach where needed.

        Independently from the SCA Approach it supports e.g. the selection of
        the authentication method and a non-SCA PSU authentication.

        This methods updates PSU data on the cancellation authorisation resource if needed.

        There are several possible update PSU data requests in the context of a cancellation authorisation within 
        the payment initiation services needed, which depends on the SCA approach:

        * Redirect SCA Approach:
          A specific Update PSU data request is applicable for
            * the selection of authentication methods, before choosing the actual SCA approach.
        * Decoupled SCA Approach:
          A specific Update PSU data request is only applicable for
          * adding the PSU Identification, if not provided yet in the payment initiation request or the Account 
          Information Consent Request, or if no OAuth2 access token is used, or
          * the selection of authentication methods.
        * Embedded SCA Approach:
          The Update PSU data request might be used
          * to add credentials as a first factor authentication data of the PSU and
          * to select the authentication method and
          * transaction authorisation.

        The SCA approach might depend on the chosen SCA method.
        For that reason, the following possible update PSU data request can apply to all SCA approaches:

        * Select an SCA method in case of several SCA methods are available for the customer.

        There are the following request types on this access path:
          * Update PSU identification
          * Update PSU authentication
          * Select PSU  method
            WARNING: This method needs a reduced header,
            therefore many optional elements are not present.
            Maybe in a later version the access path will change.
          * Transaction Authorisation
            WARNING: This method needs a reduced header,
            therefore many optional elements are not present.
            Maybe in a later version the access path will change.
      operationId: updatePaymentCancellationPsuData
      tags:
        - Payment Initiation Service (PIS)

      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []

      parameters:
      #path
        - $ref: "#/components/parameters/paymentService"
        - $ref: "#/components/parameters/paymentProduct"
        - $ref: "#/components/parameters/paymentId"
        - $ref: "#/components/parameters/authorisationId"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
         #method specific header elements # Not always allowed depending on the kind of update which is ask for
        - $ref: "#/components/parameters/PSU-ID"
        - $ref: "#/components/parameters/PSU-ID-Type"
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"

      requestBody:
        content:
          application/json:
            schema:
              oneOf: #Different Authorisation Bodies
                - {}
                - $ref: "#/components/schemas/updatePsuAuthentication"
                - $ref: "#/components/schemas/selectPsuAuthenticationMethod"
                - $ref: "#/components/schemas/transactionAuthorisation"
                - $ref: "#/components/schemas/authorisationConfirmation"
            examples:
              "Update PSU Identification (Embedded Approach)":
                value: {}
              "Update PSU authentication (Embedded Approach)":
                $ref: "#/components/examples/updatePsuAuthenticationExample_Embedded"
              "Select PSU Authentication Method (Embedded Approach)":
                $ref: "#/components/examples/selectPsuAuthenticationMethodExample_Embedded"
              "Transaction Authorisation (Embedded Approach)":
                $ref: "#/components/examples/transactionAuthorisationExample_Embedded"
              "Authorisation confirmation (Redirect Approach)":
                $ref: "#/components/examples/authorisationConfirmationExample_Redirect"

      responses:
        '200':
          $ref: "#/components/responses/OK_200_UpdatePsuData"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_PIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_PIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_PIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_PIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PIS"


#  #####################################################
#  # Account Information Service
#  #####################################################
#
#      #####################################################
#      # Accounts
#      #####################################################

  /v2/accounts:
    get:
      summary: Read account list
      description: |
        Reads a list of current accounts, with balances where required. It is assumed that a consent of the PSU to this
        access is already given and stored on the ASPSP system. The addressed list of accounts depends then on the PSU
        ID and the stored consent addressed by consentId, respectively the OAuth2 access token.
        
        **NOTE:** If the consent is granted only to show the list of addressable accounts, much less details are 
        displayed about the accounts. Specifically hyperlinks to balances or transaction endpoint should not be 
        delivered then.
        
        **NOTE:** If the details returned in this call with the access rights "accountDetails", "balances", 
        "transactions" or "ais" are not sufficient, then more details can be retrieved by addressing the 
        /accounts/{account-id} endpoint.

      operationId: getAccountList
      tags:
        - Account Information Service (AIS)

      security:
        #####################################################
        # REMARKS ON SECURITY IN THIS OPENAPI FILE
        # In this file only the basic security element to transport
        # the bearer token of an OAuth2 process, which has to
        # be included in the HTTP header is described.
        #
        # WARNING:
        # If you want to use this file for a productive implementation,
        # it is recommended to adjust the security schemes according to
        # your system environments and security policies.
        #####################################################
        - {}
        - BearerAuthOAuth: []

      parameters:
        #path # NO PATH PARAMETER
        #query
        - $ref: "#/components/parameters/withBalanceQuery"
        #header
        #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/consentId_HEADER_mandatory"
          #conditional elemention for AIS
        - $ref: "#/components/parameters/PSU-IP-Address_conditionalForAis"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_AccountList"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"

  /v2/accounts/{account-id}:
    get:
      summary: Read account details
      description: |
        Reads details about an account, with balances where required.
        It is assumed that a consent of the PSU to
        this access is already given and stored on the ASPSP system.
        The addressed details of this account depends then on the stored consent addressed by consentId,
        respectively the OAuth2 access token.

        Remark: This account-id can be a tokenised identification due to data protection reason since the path 
        information might be logged on intermediary servers within the ASPSP sphere. This account-id then can
        be retrieved by the "GET Account List" call.
        
        **NOTE:** The account-id can represent a multicurrency account.
        In this case the currency code is set to "XXX".

        Give detailed information about the addressed account.

        Give detailed information about the addressed account together with balance information
      operationId: readAccountDetails
      tags:
        - Account Information Service (AIS)

      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []

      parameters:
      #path
        - $ref: "#/components/parameters/accountId"
      #query
        - $ref: "#/components/parameters/withBalanceQuery"
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/consentId_HEADER_mandatory"
          #conditional elemention for AIS
        - $ref: "#/components/parameters/PSU-IP-Address_conditionalForAis"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_AccountDetails"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"

  /v2/accounts/{account-id}/balances:

    get:
      summary: Read balance
      description: |
        Reads account data from a given account addressed by "account-id".

        **Remark:** This account-id can be a tokenised identification due to data protection reason since the path
        information might be logged on intermediary servers within the ASPSP sphere.
        This account-id then can be retrieved by the "Get account list" call.

        The account-id is constant at least throughout the lifecycle of a given consent.
      operationId: getBalances
      tags:
        - Account Information Service (AIS)

      security:
        #####################################################
        # REMARKS ON SECURITY IN THIS OPENAPI FILE
        # In this file only the basic security element to transport
        # the bearer token of an OAuth2 process, which has to
        # be included in the HTTP header is described.
        #
        # WARNING:
        # If you want to use this file for a productive implementation,
        # it is recommended to adjust the security schemes according to
        # your system environments and security policies.
        #####################################################
        - {}
        - BearerAuthOAuth: []

      parameters:
        #path
        - $ref: "#/components/parameters/accountId"
          #query # NO QUERY PARAMETER
          #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/consentId_HEADER_mandatory"
          #conditional elemention for AIS
        - $ref: "#/components/parameters/PSU-IP-Address_conditionalForAis"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_Balances"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"


  /v2/accounts/{account-id}/transactions:
    get:
      summary: Read transaction list of an account
      description: |
        Reads account transaction data from a given account addressed by "account-id". This can be either booked or
        pending transactions or a list of standing orders as further transactional information.
        
        **Note:** The ASPSP might use standard compression methods on application level for the response message as
        indicated in the content encoding header. In case of returning camt.05x formats, several camt.05x files 
        might be contained in one response. Some ASPSPS e.g. separate camt.05x files per booking day – in analogy 
        to the same provision in online channels.
        
        **Note:** In case of using pagination, the call on the given pagination links follows the same requirements 
        as for this call, just exchanging the path itself by the pagination path.
        
        Remark: Please note that all path parameters might be already given in detail implicitly by the response
        of the "Read Account List" call within the _links subfield.

      operationId: getTransactionList
      tags:
        - Account Information Service (AIS)

      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []

      parameters:
      #path
        - $ref: "#/components/parameters/accountId"
      #query
        - $ref: "#/components/parameters/dateFrom"
        - $ref: "#/components/parameters/dateTo"
        - $ref: "#/components/parameters/entryReferenceFrom"
        - $ref: "#/components/parameters/bookingStatusGeneric"
        - $ref: "#/components/parameters/deltaList"
        - $ref: "#/components/parameters/withBalanceQuery"
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/consentId_HEADER_mandatory"
        #- $ref: "#/components/headers/Accept" #Can not be defined in Open API. See general comments in the description
        # attached to the top level of the file.
          #conditional elemention for AIS
        - $ref: "#/components/parameters/PSU-IP-Address_conditionalForAis"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_AccountsTransactions"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"

  /v2/accounts/{account-id}/transactions/{transactionId}:
    get:
      summary: Read transaction details
      description: |
        Reads transaction details from a given transaction addressed by "transactionId" on a given account addressed 
        by "account-id".
        This call is only available on transactions as reported in a JSON format.

        **Remark:** Please note that the PATH might be already given in detail by the corresponding entry of the 
        response of the "Read Transaction List" call within the _links subfield.
      operationId: getTransactionDetails
      tags:
        - Account Information Service (AIS)

      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []

      parameters:
      #path
        - $ref: "#/components/parameters/accountId"
        - $ref: "#/components/parameters/transactionId"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/consentId_HEADER_mandatory"
          #conditional elemention for AIS
        - $ref: "#/components/parameters/PSU-IP-Address_conditionalForAis"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_TransactionDetails"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"

  #####################################################
  # Consents
  #####################################################

  /v2/consents/account-access:
    post:
      summary: Create Account Access consent
      description: |
        Creates an account information consent resource at the ASPSP regarding access to accounts types and accounts 
        specified in this request.
        
        **Side Effects**
        When this Consent Request is a request where the "recurringIndicator" equals true, and if it exists already a 
        former consent for recurring access on account information for the addressed PSU and potentially addressed 
        corporate identification submitted by this API Client, then the former consent automatically expires as soon 
        as the new consent request is authorised by the PSU.
        Please note that in the context of multilevel SCA, the side effect may only apply, if a PSU with a given PSU-ID 
        is submitting a new recurring consent and a second recurring consent exists already which had been submitted 
        under the same PSU and potentially corporate identification.
        There are no expiration side effects foreseen for Consent Requests where the "recurringIndicator" equals false.

      operationId: createAccountAccessConsent
      tags:
        - Account Information Service (AIS)
      
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to 
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      
      parameters:
        #path # NO PATH PARAMETER
        #query # NO QUERY PARAMETER
        #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/PSU-ID"
        - $ref: "#/components/parameters/PSU-ID-Type"
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
        - $ref: "#/components/parameters/TPP-SCA-Approach-Preference"
        - $ref: "#/components/parameters/TPP-Redirect-URI"
        - $ref: "#/components/parameters/TPP-Explicit-Authorisation-Preferred"
        - $ref: "#/components/parameters/Client-Brand-Logging-Information"
          #conditional for extended service lean Push
        - $ref: "#/components/parameters/Client-Notification-URI"
        - $ref: "#/components/parameters/Client-Notification-Content-Preferred"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-IP-Address_mandatory"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Geo-Location"


      requestBody:
        $ref: "#/components/requestBodies/accountAccessConsent"
      
      responses:
        '201':
          $ref: "#/components/responses/CREATED_201_AccountAccessConsent"
        
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"


  /v2/consents/account-access/{consentId}:
    get:
      summary: Get Account Access consent request
      description: |
        Returns the content of a consent object of category account-access. This is returning the data for the API 
        Client especially in cases, where the consent was directly managed between ASPSP and PSU e.g. in a redirect
        SCA Approach.
      operationId: getAccountAccessConsentInformation
      tags:
        - Account Information Service (AIS)

      security:
        #####################################################
        # REMARKS ON SECURITY IN THIS OPENAPI FILE
        # In this file only the basic security element to transport
        # the bearer token of an OAuth2 process, which has to
        # be included in the HTTP header is described.
        #
        # WARNING:
        # If you want to use this file for a productive implementation,
        # it is recommended to adjust the security schemes according to
        # your system environments and security policies.
        #####################################################
        - { }
        - BearerAuthOAuth: [ ]

      parameters:
        #path
        - $ref: "#/components/parameters/consentId_PATH"
          #query # NO QUERY PARAMETER
          #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #conditional elemention for AIS
        - $ref: "#/components/parameters/PSU-IP-Address_conditionalForAis"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_AccountAccessConsentInformation"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"


  /v2/consents/user-parameters-access:
    post:
      summary: Create User Parameters Access consent
      description: |
        Creates a consent on user related technical access data (user parameters) at the ASPSP regarding accounts 
        addressed in this request.
        Side Effects
        When this Consent Request is a request where the "recurringIndicator" equals true, and if it exists already a 
        former consent for recurring access on user parameters for the addressed PSU and potentially addressed corporate
        identification submitted by this API Client, 
        then the former consent automatically expires as soon as the new consent request is authorised by the PSU.
        Please note that in the context of multilevel SCA, the side effect may only apply, if a PSU with a given PSU-ID 
        is submitting a new recurring consent and a second recurring consent exists already which had been submitted 
        under the same PSU and potentially corporate identification.
        There are no expiration side effects foreseen for Consent Requests where the "recurringIndicator" equals false.

      operationId: createUserParametersAccessConsent
      tags:
        - Account Information Service (AIS)

      security:
        #####################################################
        # REMARKS ON SECURITY IN THIS OPENAPI FILE
        # In this file only the basic security element to transport
        # the bearer token of an OAuth2 process, which has to
        # be included in the HTTP header is described.
        #
        # WARNING:
        # If you want to use this file for a productive implementation,
        # it is recommended to adjust the security schemes according to
        # your system environments and security policies.
        #####################################################
        - { }
        - BearerAuthOAuth: [ ]

      parameters:
        #path # NO PATH PARAMETER
        #query # NO QUERY PARAMETER
        #header
        #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/PSU-ID"
        - $ref: "#/components/parameters/PSU-ID-Type"
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
        - $ref: "#/components/parameters/TPP-SCA-Approach-Preference"
        - $ref: "#/components/parameters/TPP-Redirect-URI"
        - $ref: "#/components/parameters/TPP-Explicit-Authorisation-Preferred"
        - $ref: "#/components/parameters/Client-Brand-Logging-Information"
          #conditional for extended service lean Push
        - $ref: "#/components/parameters/Client-Notification-URI"
        - $ref: "#/components/parameters/Client-Notification-Content-Preferred"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-IP-Address_mandatory"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Geo-Location"

      requestBody:
        $ref: "#/components/requestBodies/userParametersAccessConsent"

      responses:
        '201':
          $ref: "#/components/responses/CREATED_201_UserParametersAccessConsent"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"


  /v2/consents/user-parameters-access/{consentId}:
    get:
      summary: Get User Parameters Access consent request
      description: |
        Returns the content of an user parameters consent object. This is returning the data for the TPP especially in 
        cases, where the consent was directly managed between ASPSP and PSU e.g. in a re-direct SCA Approach.
      operationId: getUserParametersAccessConsentInformation
      tags:
        - Account Information Service (AIS)

      security:
        #####################################################
        # REMARKS ON SECURITY IN THIS OPENAPI FILE
        # In this file only the basic security element to transport
        # the bearer token of an OAuth2 process, which has to
        # be included in the HTTP header is described.
        #
        # WARNING:
        # If you want to use this file for a productive implementation,
        # it is recommended to adjust the security schemes according to
        # your system environments and security policies.
        #####################################################
        - { }
        - BearerAuthOAuth: [ ]

      parameters:
        #path
        - $ref: "#/components/parameters/consentId_PATH"
          #query # NO QUERY PARAMETER
          #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #conditional elemention for AIS
        - $ref: "#/components/parameters/PSU-IP-Address_conditionalForAis"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_UserParametersAccessConsentInformation"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"


  /v2/consents/document-services:
    post:
      summary: Create Document Services consent
      description: |
        Creates a consent on document services resource at the ASPSP regarding explicitly confirming the consent to 
        submit RTPs to (a) dedicated account(s).
        No Side Effects
        In difference to the Establish Consent on Account Information as defined in Section 3.4.1, there is no side 
        effect by the Establish Consent on Generic Access Request.

      operationId: createDocumentServicesConsent
      tags:
        - Account Information Service (AIS)

      security:
        #####################################################
        # REMARKS ON SECURITY IN THIS OPENAPI FILE
        # In this file only the basic security element to transport
        # the bearer token of an OAuth2 process, which has to
        # be included in the HTTP header is described.
        #
        # WARNING:
        # If you want to use this file for a productive implementation,
        # it is recommended to adjust the security schemes according to
        # your system environments and security policies.
        #####################################################
        - { }
        - BearerAuthOAuth: [ ]

      parameters:
        #path # NO PATH PARAMETER
        #query # NO QUERY PARAMETER
        #header
        #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/PSU-ID"
        - $ref: "#/components/parameters/PSU-ID-Type"
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
        - $ref: "#/components/parameters/TPP-SCA-Approach-Preference"
        - $ref: "#/components/parameters/TPP-Redirect-URI"
        - $ref: "#/components/parameters/TPP-Explicit-Authorisation-Preferred"
        - $ref: "#/components/parameters/Client-Brand-Logging-Information"
          #conditional for extended service lean Push
        - $ref: "#/components/parameters/Client-Notification-URI"
        - $ref: "#/components/parameters/Client-Notification-Content-Preferred"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-IP-Address_mandatory"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Geo-Location"

      requestBody:
        $ref: "#/components/requestBodies/documentServicesConsent"

      responses:
        '201':
          $ref: "#/components/responses/CREATED_201_DocumentServicesConsent"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"


  /v2/consents/document-services/{consentId}:
    get:
      summary: Get Document Services consent request
      description: |
        Returns the content of a Document Services consent object. This is returning the data for the TPP especially in 
        cases, where the consent was directly managed between ASPSP and PSU e.g. in a re-direct SCA Approach.
      operationId: getDocumentServicesConsentInformation
      tags:
        - Account Information Service (AIS)

      security:
        #####################################################
        # REMARKS ON SECURITY IN THIS OPENAPI FILE
        # In this file only the basic security element to transport
        # the bearer token of an OAuth2 process, which has to
        # be included in the HTTP header is described.
        #
        # WARNING:
        # If you want to use this file for a productive implementation,
        # it is recommended to adjust the security schemes according to
        # your system environments and security policies.
        #####################################################
        - { }
        - BearerAuthOAuth: [ ]

      parameters:
        #path
        - $ref: "#/components/parameters/consentId_PATH"
          #query # NO QUERY PARAMETER
          #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #conditional elemention for AIS
        - $ref: "#/components/parameters/PSU-IP-Address_conditionalForAis"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_DocumentServicesConsentInformation"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"


  /v2/consents/{consent-category}/{consentId}:
    delete:
      summary: Delete consent
      description: Terminates a given consent.
      operationId: deleteConsent
      tags:
        - Account Information Service (AIS)
      
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to 
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      
      parameters:
      #path
        - $ref: "#/components/parameters/consentCategory"
        - $ref: "#/components/parameters/consentId_PATH"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #conditional elemention for AIS
        - $ref: "#/components/parameters/PSU-IP-Address_conditionalForAis"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY
      
      responses:
        '204':
          $ref: "#/components/responses/NO_CONTENT_204_Consents"
        
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"


  /v2/consents/{consent-category}/{consentId}/status:
    get:
      summary: Consent status request
      description: Retrieves the status of an addressed consent resource.
      operationId: getConsentStatus
      tags:
        - Account Information Service (AIS)
      
      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to 
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []
      
      parameters:
        #path
        - $ref: "#/components/parameters/consentId_PATH"
        - $ref: "#/components/parameters/consentCategory"
        #query # NO QUERY PARAMETER
        #header
        #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #conditional elemention for AIS
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY
      
      responses:
        '200':
          $ref: "#/components/responses/OK_200_ConsentStatus"
        
        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"


  /v2/consents/{consentId}/authorisations:

    post:
      summary: Start the authorisation process for a consent
      description: |
        Create an authorisation sub-resource and start the authorisation process of a consent.
        The message might in addition transmit authentication and authorisation related data.

        This method is iterated n times for a n times SCA authorisation in a
        corporate context, each creating an own authorisation sub-endpoint for
        the corresponding PSU authorising the consent.

        The ASPSP might make the usage of this access method unnecessary,
        since the related authorisation resource will be automatically created by
        the ASPSP after the submission of the consent data with the first POST consents call.

        The "start authorisation process" is the process which creates a new authorisation or cancellation-authorisation
        sub-resource. The related sub-resource is reflecting the PSU authentication steps as authorisation process or
        cancellation authorisation process of the PSU. Please note that all the processes and conditions are identical 
        for authorisations and cancellation-authorisations. The only difference appears in their respective names and
        effects on the underlying resource. 
        
        The "start authorisation process" appears in the following scenarios:

          * The ASPSP has indicated with a "startAuthorisation" hyperlink in the preceding Transaction Initiation 
            Response or Transaction Cancellation Response that an explicit start of the authorisation process is needed
            by the API Client. The "startAuthorisation" hyperlink can transport more information about data which needs 
            to be uploaded by using the extended forms:
        
            * 'startAuthorisationWithPsuIdentification',
            * 'startAuthorisationWithPsuAuthentication',
            * 'startAuthorisationWithEncryptedPsuAuthentication',
            * 'startAuthorisationWithAuthentciationMethodSelection',
            * 'startAuthorisationWithTransactionAuthorisation'.
        
          * The related business transaction or business transaction cancellation cannot yet be executed since a 
            multilevel SCA is mandated.
      operationId: startConsentAuthorisation
      tags:
        - Account Information Service (AIS)
        - Confirmation of Funds Service (PIIS)
      security:
        #####################################################
        # REMARKS ON SECURITY IN THIS OPENAPI FILE
        # In this file only the basic security element to transport
        # the bearer token of an OAuth2 process, which has to
        # be included in the HTTP header is described.
        #
        # WARNING:
        # If you want to use this file for a productive implementation,
        # it is recommended to adjust the security schemes according to
        # your system environments and security policies.
        #####################################################
        - {}
        - BearerAuthOAuth: []
      parameters:
        #path
        - $ref: "#/components/parameters/consentId_PATH"
          #query # NO QUERY PARAMETER
          #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/PSU-ID"
        - $ref: "#/components/parameters/PSU-ID-Type"
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
        - $ref: "#/components/parameters/TPP-SCA-Approach-Preference"
        - $ref: "#/components/parameters/TPP-Redirect-URI"
        - $ref: "#/components/parameters/TPP-Nok-Redirect-URI"

          #conditional elemention for AIS
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY

      responses:
        '201':
          $ref: "#/components/responses/CREATED_201_StartScaProcess"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"


    get:
      summary: Get consent authorisation sub-resources request
      description: |
        Read a list of all authorisation sub-resources IDs which have been created.
      operationId: getConsentAuthorisation
      tags:
        - Account Information Service (AIS)
        - Confirmation of Funds Service (PIIS)

      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []

      parameters:
      #path
        - $ref: "#/components/parameters/consentId_PATH"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #conditional elemention for AIS
        - $ref: "#/components/parameters/PSU-IP-Address_conditionalForAis"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_Authorisations"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"


  /v2/consents/{consentId}/authorisations/{authorisationId}:
    get:
      summary: Checks the SCA status of an authorisation sub-resource.
      description: |
        This method returns the SCA status of a consent initiation's authorisation sub-resource.
      operationId: getConsentScaStatus
      tags:
        - Account Information Service (AIS)
        - Confirmation of Funds Service (PIIS)

      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []

      parameters:
      #path
        - $ref: "#/components/parameters/consentId_PATH"
        - $ref: "#/components/parameters/authorisationId"
      #query # NO QUERY PARAMETER
      #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #conditional elemention for AIS
        - $ref: "#/components/parameters/PSU-IP-Address_conditionalForAis"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_ScaStatus"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"

    put:
      summary: Update PSU Data for consents
      description: |
        This method update PSU data on the consents  resource if needed.
        It may authorise a consent within the Embedded SCA Approach where needed.

        Independently from the SCA Approach it supports e.g. the selection of
        the authentication method and a non-SCA PSU authentication.

        This methods updates PSU data on the cancellation authorisation resource if needed.

        There are several possible update PSU data requests in the context of a consent request if needed,
        which depends on the SCA approach:

        * Redirect SCA Approach:
          A specific Update PSU data request is applicable for
            * the selection of authentication methods, before choosing the actual SCA approach.
        * Decoupled SCA Approach:
          A specific update PSU data request is only applicable for
          * adding the PSU Identification, if not provided yet in the payment initiation request or the 
            Account Information Consent Request, or if no OAuth2 access token is used, or
          * the selection of authentication methods.
        * Embedded SCA Approach:
          The Update PSU data request might be used
          * to add credentials as a first factor authentication data of the PSU and
          * to select the authentication method and
          * transaction authorisation.

        The SCA Approach might depend on the chosen SCA method.
        For that reason, the following possible update PSU data request can apply to all SCA approaches:

        * Select an SCA method in case of several SCA methods are available for the customer.

        There are the following request types on this access path:
          * Update PSU identification
          * Update PSU authentication
          * Select PSU authorisation method
            WARNING: This method needs a reduced header,
            therefore many optional elements are not present.
            Maybe in a later version the access path will change.
          * Transaction Authorisation
            WARNING: This method needs a reduced header,
            therefore many optional elements are not present.
            Maybe in a later version the access path will change.
      operationId: updateConsentsPsuData
      tags:
        - Account Information Service (AIS)
        - Confirmation of Funds Service (PIIS)

      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - {}
        - BearerAuthOAuth: []

      parameters:
        #query # NO QUERY PARAMETER
        #header
        #path
        - $ref: "#/components/parameters/consentId_PATH"
        - $ref: "#/components/parameters/authorisationId"
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
        #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
        #method specific header elements # Not always allowed depending on the kind of update which is ask for
        - $ref: "#/components/parameters/PSU-ID"
        - $ref: "#/components/parameters/PSU-ID-Type"
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
          #conditional elemention for AIS
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"

      requestBody:
        content:
          application/json:
            schema:
              oneOf: #Different Authorisation Bodies
                - { }
                - $ref: "#/components/schemas/updatePsuAuthentication"
                - $ref: "#/components/schemas/updatePsuSelectAuthenticationMethod"
                - $ref: "#/components/schemas/transactionAuthorisation"
                - $ref: "#/components/schemas/authorisationConfirmation"

      responses:
        '200':
          $ref: "#/components/responses/OK_200_UpdatePsuData"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_AIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_AIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_AIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_AIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_AIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_AIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_AIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_AIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_AIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_AIS"


  #####################################################
  # Funds Confirmation Service
  #####################################################

  /v2/consents/funds-confirmations:
    post:
      summary: Create Funds Confirmation consent
      description: |
        Creates a consent on Funds Confirmation resource at the ASPSP regarding confirmation of funds access to an 
        account specified in this request.
        Remark: In [XS2A-CCF], a first version of this API was already published under the endpoint 
        /v2/consents/confirmation-of-funds. This API has been adapted now under the different endpoint name to the 
        new "access" and "consentType" data attribute usage.

      operationId: createFundsConfirmationConsent
      tags:
        - Confirmation of Funds Service (PIIS)

      security:
        #####################################################
        # REMARKS ON SECURITY IN THIS OPENAPI FILE
        # In this file only the basic security element to transport
        # the bearer token of an OAuth2 process, which has to
        # be included in the HTTP header is described.
        #
        # WARNING:
        # If you want to use this file for a productive implementation,
        # it is recommended to adjust the security schemes according to
        # your system environments and security policies.
        #####################################################
        - { }
        - BearerAuthOAuth: [ ]

      parameters:
        #path # NO PATH PARAMETER
        #query # NO QUERY PARAMETER
        #header
        #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #method specific header elements
        - $ref: "#/components/parameters/PSU-ID"
        - $ref: "#/components/parameters/PSU-ID-Type"
        - $ref: "#/components/parameters/PSU-Corporate-ID"
        - $ref: "#/components/parameters/PSU-Corporate-ID-Type"
        - $ref: "#/components/parameters/TPP-SCA-Approach-Preference"
        - $ref: "#/components/parameters/TPP-Redirect-URI"
        - $ref: "#/components/parameters/TPP-Explicit-Authorisation-Preferred"
        - $ref: "#/components/parameters/Client-Brand-Logging-Information"
          #conditional for extended service lean Push
        - $ref: "#/components/parameters/Client-Notification-URI"
        - $ref: "#/components/parameters/Client-Notification-Content-Preferred"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-IP-Address_mandatory"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Geo-Location"

      requestBody:
        $ref: "#/components/requestBodies/fundsConfirmationsConsent"

      responses:
        '201':
          $ref: "#/components/responses/CREATED_201_FundsConfirmationsConsent"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_PIIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_PIIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_PIIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PIIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PIIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_PIIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PIIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PIIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PIIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_PIIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PIIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PIIS"


  /v2/consents/funds-confirmations/{consentId}:
    get:
      summary: Get Funds Confirmation consent request
      description: |
        Returns the content of a funds confirmation consent object. This is returning the data for the TPP especially 
        in cases, where the consent was directly managed between ASPSP and PSU e.g. in a re-direct SCA Approach.
      operationId: getFundsConfirmationConsentInformation
      tags:
        - Confirmation of Funds Service (PIIS)

      security:
        #####################################################
        # REMARKS ON SECURITY IN THIS OPENAPI FILE
        # In this file only the basic security element to transport
        # the bearer token of an OAuth2 process, which has to
        # be included in the HTTP header is described.
        #
        # WARNING:
        # If you want to use this file for a productive implementation,
        # it is recommended to adjust the security schemes according to
        # your system environments and security policies.
        #####################################################
        - { }
        - BearerAuthOAuth: [ ]

      parameters:
        #path
        - $ref: "#/components/parameters/consentId_PATH"
          #query # NO QUERY PARAMETER
          #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #conditional elemention for AIS
        - $ref: "#/components/parameters/PSU-IP-Address_conditionalForAis"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_FundsConfirmationsConsentInformation"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_PIIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_PIIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_PIIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PIIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PIIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_PIIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PIIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PIIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PIIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_PIIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PIIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PIIS"


    delete:
      summary: Delete Funds Confirmation consent
      description: Terminates a given Funds Confirmation consent.
      operationId: deleteFundsConfirmationConsent
      tags:
        - Confirmation of Funds Service (PIIS)

      security:
        #####################################################
        # REMARKS ON SECURITY IN THIS OPENAPI FILE
        # In this file only the basic security element to transport
        # the bearer token of an OAuth2 process, which has to
        # be included in the HTTP header is described.
        #
        # WARNING:
        # If you want to use this file for a productive implementation,
        # it is recommended to adjust the security schemes according to
        # your system environments and security policies.
        #####################################################
        - { }
        - BearerAuthOAuth: [ ]

      parameters:
        #path
        - $ref: "#/components/parameters/consentCategory"
        - $ref: "#/components/parameters/consentId_PATH"
          #query # NO QUERY PARAMETER
          #header
          #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
          #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
          #conditional elemention for AIS
        - $ref: "#/components/parameters/PSU-IP-Address_conditionalForAis"
          #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY

      responses:
        '204':
          $ref: "#/components/responses/NO_CONTENT_204_Consents"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_PIIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_PIIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_PIIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PIIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PIIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_PIIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PIIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PIIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PIIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_PIIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PIIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PIIS"


  /v2/consents/funds-confirmations/{consentId}/status:
    get:
      summary: Funds Confirmation consent status request
      description: Retrieves the status of an addressed Funds Confirmation consent resource.
      operationId: getFundsConfirmationConsentStatus
      tags:
        - Confirmation of Funds Service (PIIS)

      security:
        #####################################################
        # REMARKS ON SECURITY IN THIS OPENAPI FILE
        # In this file only the basic security element to transport
        # the bearer token of an OAuth2 process, which has to
        # be included in the HTTP header is described.
        #
        # WARNING:
        # If you want to use this file for a productive implementation,
        # it is recommended to adjust the security schemes according to
        # your system environments and security policies.
        #####################################################
        - { }
        - BearerAuthOAuth: [ ]

      parameters:
        #path
        - $ref: "#/components/parameters/consentId_PATH"
        - $ref: "#/components/parameters/consentCategory"
        #query # NO QUERY PARAMETER
        #header
        #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
        #header to support the signature function
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"
        #conditional element for AIS
        - $ref: "#/components/parameters/PSU-IP-Address_optional"
        #optional additional PSU Information in header
        - $ref: "#/components/parameters/PSU-IP-Port"
        - $ref: "#/components/parameters/PSU-Accept"
        - $ref: "#/components/parameters/PSU-Accept-Charset"
        - $ref: "#/components/parameters/PSU-Accept-Encoding"
        - $ref: "#/components/parameters/PSU-Accept-Language"
        - $ref: "#/components/parameters/PSU-User-Agent"
        - $ref: "#/components/parameters/PSU-Http-Method"
        - $ref: "#/components/parameters/PSU-Device-ID"
        - $ref: "#/components/parameters/PSU-Geo-Location"
      #NO REQUEST BODY

      responses:
        '200':
          $ref: "#/components/responses/OK_200_ConsentStatus"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_PIIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_PIIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_PIIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PIIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PIIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_PIIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PIIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PIIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PIIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_PIIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PIIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PIIS"


  /v2/funds-confirmations:
    post:
      summary: Confirmation of funds request
      description:
        Creates a confirmation of funds request at the ASPSP.
        Checks whether a specific amount is available at point of time
        of the request on an account linked to a given tuple card issuer(TPP)/card number,
        or addressed by IBAN and TPP respectively.

        If the related extended services are used a conditional Consent-ID is contained in the header.
        This field is contained but commented out in this specification.
      operationId: checkAvailabilityOfFunds
      tags:
        - Confirmation of Funds Service (PIIS)

      security:
      #####################################################
      # REMARKS ON SECURITY IN THIS OPENAPI FILE
      # In this file only the basic security element to transport
      # the bearer token of an OAuth2 process, which has to
      # be included in the HTTP header is described.
      #
      # WARNING:
      # If you want to use this file for a productive implementation,
      # it is recommended to adjust the security schemes according to
      # your system environments and security policies.
      #####################################################
        - { }
        - BearerAuthOAuth: []


      parameters:
        #path # NO PATH PARAMETER
        #query # NO QUERY PARAMETER
        #header
        #common header parameter
        - $ref: "#/components/parameters/X-Request-ID"
        #method specific header elements
        - $ref: "#/components/parameters/consentId_HEADER_optional" # Consent-Id for usage of extended services header
        - $ref: "#/components/parameters/Digest"
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/Client-Signature-Certificate"

      requestBody:
        $ref: "#/components/requestBodies/confirmationOfFunds"

      responses:
        '200':
          $ref: "#/components/responses/OK_200_ConfirmationOfFunds"

        '400':
          $ref: "#/components/responses/BAD_REQUEST_400_PIIS"
        '401':
          $ref: "#/components/responses/UNAUTHORIZED_401_PIIS"
        '403':
          $ref: "#/components/responses/FORBIDDEN_403_PIIS"
        '404':
          $ref: "#/components/responses/NOT_FOUND_404_PIIS"
        '405':
          $ref: "#/components/responses/METHOD_NOT_ALLOWED_405_PIIS"
        '406':
          $ref: "#/components/responses/NOT_ACCEPTABLE_406_PIIS"
        '408':
          $ref: "#/components/responses/REQUEST_TIMEOUT_408_PIIS"
        '409':
          $ref: "#/components/responses/CONFLICT_409_PIIS"
        '415':
          $ref: "#/components/responses/UNSUPPORTED_MEDIA_TYPE_415_PIIS"
        '429':
          $ref: "#/components/responses/TOO_MANY_REQUESTS_429_PIIS"
        '500':
          $ref: "#/components/responses/INTERNAL_SERVER_ERROR_500_PIIS"
        '503':
          $ref: "#/components/responses/SERVICE_UNAVAILABLE_503_PIIS"


components:
#####################################################
# Predefined Components
#####################################################

  securitySchemes:
  #####################################################
  # Predefined Security Schemes:
  #
  # In this file only the basic security element to transport
  # the bearer token of an OAuth2 process, which has to 
  # be included in the HTTP header is described.
  #
  # WARNING:
  # If you want to use this file for a productive implementation, 
  # it is recommended to adjust the security schemes according to 
  # your system environments and security policies.
  #####################################################
    BearerAuthOAuth:
      description: |
        Bearer Token. 
        
        Is contained only, if an OAuth2 based authentication was performed in a pre-step or 
        an OAuth2 based SCA was performed in a preceding AIS service in the same session.
      type: http
      scheme: bearer


  schemas:
  #####################################################
  # Predefined Schemas
  #####################################################

    paymentId:
      description:
        Resource identification of the generated payment initiation resource.
      type: string
      example: "1234-wertiq-983"


    authorisationId:
      description: Resource identification of the related SCA.
      type: string
      example: "123auth456"


    authenticationMethodId:
      description: |
        The authentication method ID as provided by the ASPSP.
      type: string
      maxLength: 35
      example: "myAuthenticationID"


    accountId:
      description: This identification is denoting the addressed account, where the transaction has been performed.
      type: string
      example: "qwer3456tzui7890"


    consentId:
      description: |
        ID of the corresponding consent object as returned by an account information consent request.
      type: string


    transactionId:
      description: |
        Can be used as access-ID in the API, where more details on an transaction is offered. 
        If this data attribute is provided this shows that the AIS can get access on more details about this transaction
        using the GET Transaction Details Request.
      type: string
      example: "3dc3d5b3-7023-4848-9853-f5400a64e80f"


    references:
      description: |
        Might contain the payment identification attributes endToEndId as well as the new UETR field.
        In addition it is including account ServiceReference, mandateId, checkId (all level 1 fields in V1.3.x).
      type: object
      properties:
        accountServiceReference:
          type: string
          maxLength: 35
        instructionId:
          description: |
            Unique identification as assigned by an instructing party for an instructed party to unambiguously identify 
            the instruction.
          type: string
          maxLength: 35
        endToEndId:
          description: Unique end to end identity.
          type: string
          maxLength: 35
        uetr:
          description: |
            Universally unique identifier to provide an end-to-end reference of a payment transaction.
            It is recommended to use time-based version (version 1) and variant 8,9,a or b of the UUID as defined 
            in [RFC4122] for UUID fields such as uetr.
          type: string
          format: uuid
        mandateId:
          description: direct debit related mandate.
          type: string
        checkNumber:
          description: Identification number of a Cheque.
          type: string
          maxLength: 35


    terminalId:
      description: Identification of the Terminal, where the card has been used.
      type: string
      maxLength: 35


    entryReference:
      description: |
        Is the identification of the transaction as used e.g. for reference for delta function on application level.
        The same identification as for example used within camt.05x messages.
      type: string
      maxLength: 35


    scaStatus:
      description: |
        This data element is containing information about the status of the SCA method applied.

        The following codes are defined for this data type.

          * 'received':
            An authorisation or cancellation-authorisation resource has been created successfully.
          * 'psuIdentified':
            The PSU related to the authorisation or cancellation-authorisation resource has been identified.
          * 'psuAuthenticated':
            The PSU related to the authorisation or cancellation-authorisation resource has been identified and 
            authenticated e.g. by a password or by an access token.
          * 'scaMethodSelected':
            The PSU/TPP has selected the related SCA routine.
            If the SCA method is chosen implicitly since only one SCA method is available,
            then this is the first status to be reported instead of 'received'.
          * 'unconfirmed':
            SCA is technically successfully finalised by the PSU, but the authorisation resource needs a confirmation 
            command by the TPP yet.
          * 'started':
            The addressed SCA routine has been started.
          * 'finalised':
            The SCA routine has been finalised successfully (including a potential confirmation command).
            This is a final status of the authorisation resource.
          * 'failed':
            The SCA routine failed.
            This is a final status of the authorisation resource.
          * 'exempted':
            SCA was exempted for the related transaction, the related authorisation is successful.
            This is a final status of the authorisation resource.
      type: string
      enum:
        - "received"
        - "psuIdentified"
        - "psuAuthenticated"
        - "scaMethodSelected"
        - "started"
        - "unconfirmed"
        - "finalised"
        - "failed"
        - "exempted"
      example: "psuAuthenticated"


    scaStatusAuthorisationConfirmation:
      description: |
        This data element is containing information about the status of the SCA method in an authorisation confirmation 
        response.
        The following codes are defined for this data type.

          * 'finalised': if the transaction authorisation and confirmation was successful.
          * 'failed': if the transaction authorisation or confirmation was not successful.
      type: string
      enum:
        - "finalised"
        - "failed"


    scaAuthenticationData:
      description: |
        SCA authentication data, depending on the chosen authentication method.
        If the data is binary, then it is base64 encoded.
      type: string


    consentStatus:
      description: |
        This is the overall lifecycle status of the consent.

        Valid values are:
          - 'received': The consent data have been received and are technically correct. The data is not authorised yet.
          - 'rejected': The consent data have been rejected e.g. since no successful authorisation has taken place.
          - 'partiallyAuthorised': The consent is due to a multi-level authorisation, some but not all mandated
            authorisations have been performed yet.
          - 'valid': The consent is accepted and valid for GET account data calls and others as specified in the 
            consent object.
          - 'revokedByPsu': The consent has been revoked by the PSU towards the ASPSP.
          - 'expired': The consent expired.
          - 'terminatedByTpp': The corresponding TPP has terminated the consent by applying the DELETE method to the 
            consent resource.
          - 'replacedByTpp': The corresponding TPP has terminated the (recurring) consent implicitly by submitting a 
            new (recurring) consent.
        The ASPSP might add further codes. These codes then shall be contained in the ASPSP's documentation of the XS2A 
        interface and has to be added to this API definition as well.
      type: string
      enum:
        - "received"
        - "rejected"
        - "partiallyAuthorised"
        - "valid"
        - "revokedByPsu"
        - "expired"
        - "terminatedByTpp"
        - "replacedByTpp"


    transactionFeeIndicator:
      description: |
        If equals 'true', the transaction will involve specific transaction cost as shown by the ASPSP in
        their public price list or as agreed between ASPSP and PSU.
        If equals 'false', the transaction will not involve additional specific transaction costs to the PSU unless the 
        fee amount is given specifically in the data elements transactionFees and/or currencyConversionFees.
        If this data element is not used, there is no information about transaction fees unless the fee amount is given 
        explicitly in the data element transactionFees and/or currencyConversionFees.
      type: boolean


    recurringIndicator:
      description: |
        "true", if the consent is for recurring access to the account data.
        "false", if the consent is for one access to the account data.
      type: boolean
      example: false


    batchBookingPreferred:
      description: |
        If this element equals 'true', the PSU prefers only one booking entry.
        If this element equals 'false', the PSU prefers individual booking of all contained individual transactions.

        The ASPSP will follow this preference according to contracts agreed on with the PSU.
      type: boolean
      example: false


    scaMethods:
      description: |
        This data element might be contained, if SCA is required and if the PSU has a choice between different
        authentication methods.

        Depending on the risk management of the ASPSP this choice might be offered before or after the PSU
        has been identified with the first relevant factor, or if an access token is transported.

        If this data element is contained, then there is also a hyperlink of type 
        'startAuthorisationWithAuthenticationMethodSelection' contained in the response body.

        These methods shall be presented towards the PSU for selection by the TPP.

      type: array
      items:
        $ref: "#/components/schemas/authenticationObject"


    chosenScaMethod:
      # description: |
      #  This data element is only contained in the response if the ASPSP has chosen the Embedded SCA Approach,
      #  if the PSU is already identified e.g. with the first relevant factor or alternatively an access token,
      #  if SCA is required and if the authentication method is implicitly selected.
      $ref: "#/components/schemas/authenticationObject"


    authenticationType:
      description: |
        Type of the authentication method.

        More authentication types might be added during implementation projects and documented in the ASPSP 
        documentation.
          - 'SMS_OTP': An SCA method, where an OTP linked to the transaction to be authorised is sent to the PSU through
            a SMS channel.
          - 'CHIP_OTP': An SCA method, where an OTP is generated by a chip card, e.g. a TOP derived from an 
            EMV cryptogram. To contact the card, the PSU normally needs a (handheld) device.
            With this device, the PSU either reads the challenging data through a visual interface like flickering or
            the PSU types in the challenge through the device key pad.
            The device then derives an OTP from the challenge data and displays the OTP to the PSU.
          - 'PHOTO_OTP': An SCA method, where the challenge is a QR code or similar encoded visual data
            which can be read in by a consumer device or specific mobile app.
            The device resp. the specific app than derives an OTP from the visual challenge data and displays
            the OTP to the PSU.
          - 'PUSH_OTP': An OTP is pushed to a dedicated authentication APP and displayed to the PSU.
          - 'SMTP_OTP': An OTP is sent via email to the PSU.
      type: string
      enum:
        - "SMS_OTP"
        - "CHIP_OTP"
        - "PHOTO_OTP"
        - "PUSH_OTP"
        - "SMTP_OTP"


    authenticationObject:
      description: |
        Authentication object.
      type: object
      required:
        - authenticationType
        - authenticationMethodId
        - name
      properties:
        authenticationType:
          $ref: "#/components/schemas/authenticationType"
        authenticationVersion:
          description: |
            Depending on the "authenticationType".
            This version can be used by differentiating authentication tools used within performing OTP generation in 
            the same authentication type. This version can be referred to in the ASPSP?s documentation.
          type: string
        authenticationMethodId:
          $ref: "#/components/schemas/authenticationMethodId"
        name:
          description: |
            This is the name of the authentication method defined by the PSU in the Online Banking frontend of the 
            ASPSP. Alternatively this could be a description provided by the ASPSP like 
            "SMS OTP on phone +49160 xxxxx 28". This name shall be used by the TPP when presenting a list of 
            authentication methods to the PSU, if available.
          type: string
          example: "SMS OTP on phone +49160 xxxxx 28"
        explanation:
          description: |
            Detailed information about the SCA method for the PSU.
          type: string
          example: Detailed information about the SCA method for the PSU.


    challenge:
      description: |
        It is contained in addition to the data element 'chosenScaMethod' if challenge data is needed for SCA.
        In rare cases this attribute is also used in the context of th "updatePsuAuthentication" or 
        "updateEncryptedPsuAuthentication" link.
      type: object
      properties:
        image:
          description: |
            PNG data (max. 512 kilobyte) to be displayed to the PSU,
            Base64 encoding, cp. [RFC4648].
            This attribute is used only, when PHOTO_OTP or CHIP_OTP
            is the selected SCA method.
          type: string
          format: byte
        data:
          description: A collection of challenge data.
          type: array
          items:
            type: string
        imageLink:
          description: A link where the ASPSP will provide the challenge image for the TPP.
          type: string
          format: url
        otpMaxLength:
          description: The maximal length for the OTP to be typed in by the PSU.
          type: integer
        otpFormat:
          description: The format type of the OTP to be typed in. The admitted values are "characters" or "integer".
          type: string
          enum:
            - "characters"
            - "integer"
        additionalInformation:
          description: |
            Additional explanation for the PSU to explain
            e.g. fallback mechanism for the chosen SCA method.
            The TPP is obliged to show this to the PSU.
          type: string


    fundsAvailable:
      description: |
        Equals true if sufficient funds are available at the time of the request, false otherwise.

        This data element is allways contained in a confirmation of funds response.

        This data element is contained, if supported by the ASPSP, if a funds check has been performed and if
        the transactionStatus is "ACTC", "ACWC" or "ACCP".
      type: boolean


    hrefType:
      description: Link to a resource.
      type: object
      required:
        - href
      properties:
        href:
          type: string
          example: "/v2/payments/sepa-credit-transfers/1234-wertiq-983"


    authorisations:
      description: An array of all authorisationIds.
      type: object
      required:
        - authorisationIds
      properties:
        authorisationIds:
          description: An array of all authorisationIds.
          type: array
          items:
            $ref: "#/components/schemas/authorisationId"


    initiations:
      description: |
        Initiations provides informations about entries in an /initiations sub resource of a payment resource.
      required:
        - initiationId
        - instructedAmount
        - transactionStatus
        - _links
      properties:
        initiationId:
          description: |
            esource identification of the addressed payment initiation.
          type: string
          maxLength: 35
        instructedAmount:
          $ref: "#/components/schemas/amount"
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"
        _links:
          $ref: "#/components/schemas/linksPaymentInitiation"


    accountReference:
      description: |
        This type is containing any account identification which can be used on payload-level to address specific 
        accounts. The ASPSP will document which account reference type it will support. Exactly one of the attributes 
        defined as "conditional" shall be used.
        Remark: The currency of the account is needed, where the currency is an account characteristic identifying
        certain sub-accounts under one external identifier like an IBAN. These sub-accounts are separated accounts 
        from a legal point of view and have separated balances, transactions etc.
      type: object
      properties:
        iban:
          $ref: "#/components/schemas/iban"
        bban:
          $ref: "#/components/schemas/bban"
        pan:
          $ref: "#/components/schemas/pan"
        maskedPan:
          $ref: "#/components/schemas/maskedPan"
        msisdn:
          $ref: "#/components/schemas/msisdn"
        other:
          $ref: "#/components/schemas/genericAccountIdentification"
        typeCode:
          $ref: "#/components/schemas/cashAccountType"
        typeProprietary:
          type: string
          maxLength: 35
        currency:
          $ref: "#/components/schemas/currencyCode"
        proxy:
          $ref: "#/components/schemas/proxyAccountIdentification"


    accountReference1:
      type: object
      properties:
        iban:
          $ref: "#/components/schemas/iban"
        bban:
          $ref: "#/components/schemas/bban"
        pan:
          $ref: "#/components/schemas/pan"
        maskedPan:
          $ref: "#/components/schemas/maskedPan"
        currency:
          $ref: "#/components/schemas/currencyCode"


    accountReference2:
      type: object
      properties:
        iban:
          $ref: "#/components/schemas/iban"
        currency:
          $ref: "#/components/schemas/currencyCode"


    accountReference3:
      type: object
      properties:
        iban:
          $ref: "#/components/schemas/iban"
        bban:
          $ref: "#/components/schemas/bban"
        other:
          $ref: "#/components/schemas/genericAccountIdentification"
        currency:
          $ref: "#/components/schemas/currencyCode"


    accountReference4:
      type: object
      properties:
        iban:
          $ref: "#/components/schemas/iban"
        other:
          $ref: "#/components/schemas/genericAccountIdentification"


    accountAccessRights:
      description: |
        The account access rights as posted by the API Client.
      type: object
      required:
        - rights
      properties:
        account:
          $ref: "#/components/schemas/accountReference"
        rights:
          description: |
            Addressing required access rights to current accounts.
            The array may not be empty.
          type: array
          items:
            $ref: "#/components/schemas/accessRightsCodes"


    accountAccessRightsExtended:
      description: |
        The account access rights as posted by the API Client.
      type: object
      required:
        - rights
      properties:
        account:
          $ref: "#/components/schemas/accountReference"
        rights:
          description: |
            Addressing required access rights to current accounts.
            The array may not be empty.
          type: array
          items:
            $ref: "#/components/schemas/accessRightsCodes"
        _links:
          $ref: "#/components/schemas/linksAll"


    accountAccess:
      description: |
        Requested access services for a consent.
      type: object
      properties:
        payments:
          description: |
            Addressing required access rights to current accounts.
            The array may not be empty.
          type: array
          items:
            $ref: "#/components/schemas/accountAccessRights"
        cards:
          description: |
            Addressing required access rights to card accounts. The accounts can be card reconciliation accounts
            as well as single credit cards, dependent of the AIS offer of the ASPSP.
            The array may not be empty.
          type: array
          items:
            $ref: "#/components/schemas/accountAccessRights"
        savings:
          description: |
            Addressing required access rights to saving accounts.
            The array may not be empty.
          type: array
          items:
            $ref: "#/components/schemas/accountAccessRights"
        loans:
          description: |
            Addressing required access rights to loan accounts.
            The array may not be empty.
          type: array
          items:
            $ref: "#/components/schemas/accountAccessRights"
        securities:
          description: |
            Addressing required access rights to security accounts.
            The array may not be empty.
          type: array
          items:
            $ref: "#/components/schemas/accountAccessRights"


    accountAccessExtended:
      description: |
        Requested access services for a consent.
      type: object
      properties:
        payments:
          description: |
            Addressing required access rights to current accounts.
            The array may not be empty.
          type: array
          items:
            $ref: "#/components/schemas/accountAccessRightsExtended"
        cards:
          description: |
            Addressing required access rights to card accounts. The accounts can be card reconciliation accounts
            as well as single credit cards, dependent of the AIS offer of the ASPSP.
            The array may not be empty.
          type: array
          items:
            $ref: "#/components/schemas/accountAccessRightsExtended"
        savings:
          description: |
            Addressing required access rights to saving accounts.
            The array may not be empty.
          type: array
          items:
            $ref: "#/components/schemas/accountAccessRightsExtended"
        loans:
          description: |
            Addressing required access rights to loan accounts.
            The array may not be empty.
          type: array
          items:
            $ref: "#/components/schemas/accountAccessRightsExtended"
        securities:
          description: |
            Addressing required access rights to security accounts.
            The array may not be empty.
          type: array
          items:
            $ref: "#/components/schemas/accountAccessRightsExtended"


    amountDetails:
      description: |
        Additional information to the transaction amount.
      type: object
      properties:
        instructedAmount:
          $ref: "#/components/schemas/amountAndExchangeDetails"
        transactionAmount:
          $ref: "#/components/schemas/amountAndExchangeDetails"


    amountAndExchangeDetails:
      type: object
      required:
        - currency
        - amount
      properties:
        currency:
          $ref: "#/components/schemas/currencyCode"
        amount:
          description: |
            The amount given with fractional digits, where fractions must be compliant to the currency definition. 
            Up to 14 significant figures. Negative amounts are signed by minus.The decimal separator is a dot.
          type: string
        sourceCurrency:
          $ref: "#/components/schemas/currencyCode"
        exchangeRate:
          description: |
            Factor used to convert an amount from one currency into another. This reflects the price at which one 
            currency was bought with another currency.
            Note: If this field is present, then also the field sourceCurrency must be provided.
          type: string
        unitCurrency:
          $ref: "#/components/schemas/currencyCode"
        targetCurrency:
          $ref: "#/components/schemas/currencyCode"
        quotationDate:
          $ref: "#/components/schemas/quotationDate"
        contractId:
          $ref: "#/components/schemas/contractId"


    accountDetails:
      description: |
        The ASPSP shall give at least one of the account reference identifiers:
          - iban
          - bban
          - msisdn
          - ownerName
          - ownerNames
          - name
          - displayName
          - bic
        If the account is a multicurrency account currency code in "currency" is set to "XXX".
      type: object
      required:
        - resourceId
        - currency
      properties:
        resourceId:
          description:
            This is the data element to be used in the path when retrieving data from a dedicated account. 
            This shall be filled, if an addressable resource is created by the ASPSP on the /accounts endpoint..
          type: string
        iban:
          $ref: "#/components/schemas/iban"
        bban:
          $ref: "#/components/schemas/bban"
        msisdn:
          $ref: "#/components/schemas/msisdn"
        currency:
          $ref: "#/components/schemas/currencyCode"
        ownerName:
          $ref: "#/components/schemas/ownerName"
        ownerNames:
          description: |
            List of owner names.
          type: array
          items:
            $ref: "#/components/schemas/accountOwner"
        name:
          $ref: "#/components/schemas/name"
        displayName:
          $ref: "#/components/schemas/displayName"
        product:
          description: Product name of the bank for this account, proprietary definition.
          type: string
          maxLength: 35
        cashAccountType:
          $ref: "#/components/schemas/cashAccountType"
        status:
          $ref: "#/components/schemas/accountStatus"
        bic:
          $ref: "#/components/schemas/bicfi"
        linkedAccounts:
          description: This data attribute is a field, where an ASPSP can name a cash account associated to pending 
            card transactions.
          type: string
          maxLength: 70
        usage:
          $ref: "#/components/schemas/usage"
        details:
          description: |
            Specifications that might be provided by the ASPSP:
              - characteristics of the account
              - characteristics of the relevant card
          type: string
          maxLength: 500
        balances:
          $ref: "#/components/schemas/balanceList"
        _links:
          $ref: "#/components/schemas/linksAccountDetails"


    accountList:
      description: |
        List of accounts with details.
      type: object
      required:
        - accounts
      properties:
        accounts:
          type: array
          items:
            $ref: "#/components/schemas/accountDetails"


    accountOwner:
      description: |
        Identifies a Person that acts as an account owner
      type: object
      required:
        - name
      properties:
        name:
          description: Account owner name
          type: string
          maxLength: 70
        role:
          description: |
            The following proprietary codes are used:
              * "owner",
              * "legalRepresentative",
              * "authorisedUser"
          type: string
          maxLength: 35


    accountReport:
      description: |
        JSON based account report.
        This account report contains transactions resulting from the query parameters.
        'booked' shall be contained if bookingStatus parameter is set to "booked" or "both".
        'pending' is not contained if the bookingStatus parameter is set to "booked" or "information".
        'information' Only contained if the bookingStatus is set to "information" and if supported by ASPSP.
      type: object
      required:
        - _links
      properties:
        booked:
          $ref: "#/components/schemas/transactionsList"
        pending:
          $ref: "#/components/schemas/transactionsList"
        information:
          $ref: "#/components/schemas/transactionsList"
        _links:
          $ref: "#/components/schemas/linksAccountReport"


    transactionsList:
      description: Array of transaction details.
      type: array
      items:
        $ref: "#/components/schemas/transactions"


    transactionDetailsBody:
      description: Transaction details.
      type: object
      required:
        - transactionDetails
      properties:
        transactionDetails:
          $ref: "#/components/schemas/transactions"


    transactions:
      description: Transaction details.
      type: object
      required:
        - transactionAmount
      properties:
        transactionId:
          $ref: "#/components/schemas/transactionId"
        entryReference:
          $ref: "#/components/schemas/entryReference"
        batchIndicator:
          description: |
            If this indicator equals true, then the related entry is a batch entry.
          type: boolean
        batchNumberOfTransactions:
          description: Shall be used if and only if the batchIndicator is contained and equals true.
          type: integer
        references:
          $ref: "#/components/schemas/references"
        localInstrumentCode:
          $ref: "#/components/schemas/localInstrumentCode"
        localInstrumentProprietary:
          description: |
            User community specific instrument as a proprietary attribute.
          type: string
          maxLength: 35
        bookingDate:
          $ref: "#/components/schemas/bookingDate"
        valueDate:
          $ref: "#/components/schemas/valueDate"
        transactionAmount:
          $ref: "#/components/schemas/amount"
        currencyExchange:
          type: array
          items:
            $ref: "#/components/schemas/reportExchangeRate"
        amountDetails:
          $ref: "#/components/schemas/amountDetails"
        interbankSettlementDate:
          $ref: "#/components/schemas/interbankSettlementDate"
        creditor:
          $ref: "#/components/schemas/partyDescription"
        creditorAccount:
          $ref: "#/components/schemas/accountReference"
        creditorAgent:
          $ref: "#/components/schemas/agentDescription1"
        ultimateCreditor:
          $ref: "#/components/schemas/partyDescription4"
        debtor:
          $ref: "#/components/schemas/partyDescription"
        debtorAccount:
          $ref: "#/components/schemas/accountReference"
        debtorAgent:
          $ref: "#/components/schemas/agentDescription1"
        ultimateDebtor:
          $ref: "#/components/schemas/partyDescription4"
        remittanceInformationUnstructured:
          type: array
          items:
            $ref: "#/components/schemas/remittanceInformationUnstructured"
        remittanceInformationStructured:
          type: array
          items:
            $ref: "#/components/schemas/remittance"
        entryDetails:
          description: Might be used by the ASPSP to transport details about transactions within a batch.
          type: array
          items:
            $ref: "#/components/schemas/entryDetails"
        additionalTransactionInformation:
          description: Might be used by the ASPSP to transport additional transaction related information to the PSU
          type: string
          maxLength: 500
        additionalInformationStructured:
          $ref: "#/components/schemas/structuredAdditionalInformation"
        additionalTransactionInformationStructured:
          $ref: "#/components/schemas/structuredAdditionalTransactionInformation"
        purposeCode:
          $ref: "#/components/schemas/purposeCode"
        bankTransactionCode:
          $ref: "#/components/schemas/bankTransactionCode"
        bankTransactionCodeProprietary:
          $ref: "#/components/schemas/bankTransactionCodeProprietary"
        balanceAfterTransaction:
          $ref: "#/components/schemas/balance"
        _links:
          $ref: "#/components/schemas/linksTransactionDetails"


    regulatoryReporting:
      type: object
      properties:
        debitCreditReportingIndicator:
          $ref: "#/components/schemas/regulatoryReportingTypeCode"
        detailsCode:
          description: |
            Specifies the nature, purpose, and reason for the transaction to be reported for regulatory and statutory 
            requirements in a coded form.
          type: string
          maxLength: 35
        detailsInformation:
          description: |
            Additional details that cater for specific domestic regulatory requirements.
          type: array
          items:
            type: string
            maxLength: 35


    reportExchangeRate:
      description: Exchange Rate.
      type: object
      required:
        - sourceCurrency
        - exchangeRate
        - unitCurrency
        - targetCurrency
        - quotationDate
      properties:
        sourceCurrency:
          $ref: "#/components/schemas/currencyCode"
        exchangeRate:
          description: |
            Factor used to convert an amount from one currency into another. This reflects the price at which one 
            currency was bought with another currency.
          type: string
        unitCurrency:
          $ref: "#/components/schemas/currencyCode"
        targetCurrency:
          $ref: "#/components/schemas/currencyCode"
        quotationDate:
          type: string
          format: date
        contractIdentification:
          type: string
          maxLength: 35


    partyIdentification:
      description: Identification of the party.
      type: object
      properties:
        organisationId:
          $ref: "#/components/schemas/organisationIdentification"
        privateId:
          $ref: "#/components/schemas/privateIdentification"


    partyIdentification1:
      description: Identification of the party.
      type: object
      properties:
        privateId:
          $ref: "#/components/schemas/privateIdentification"


    additionalPartyInformation:
      description: |
        Only supported in extended services for creditor related parties, if at all.
        **Usage :** This information will be neither put to the related interbank payment nor to account 
        reports/statements and might only be used to display related information to the PSU during potential 
        authorisation processes.
      properties:
        tradeName:
          type: string
          maxLength: 70
        merchantCategoryCode:
          $ref: "#/components/schemas/merchantCategoryCode"
        logoUrl:
          description:  A hyperlink to the logo of the party.
          type: string
          maxLength: 2048
        geoLocation:
          $ref: "#/components/schemas/geoLocation"
        merchantLogo:
          description: Base 64 coded graphic. Reserved for future extensions.
          type: string


    organisationIdentification:
      description: An entry provided by an external ISO code list
      type: object
      properties:
        anyBIC:
          $ref: "#/components/schemas/bicfi"
        lei:
          $ref: "#/components/schemas/lei"
        others:
          description: |
            Unique identification of an organisation, as assigned by an institution, using an identification scheme.
          type: array
          items:
            $ref: "#/components/schemas/genericOrganisationIdentification"


    privateIdentification:
      description: A scheme name defined in a proprietary way.
      type: object
      properties:
        birthDate:
          type: string
          format: date
        provinceOfBirth:
          type: string
          maxLength: 35
        cityOfBirth:
          type: string
          maxLength: 35
        countryOfBirth:
          $ref: "#/components/schemas/countryCode"
        others:
          description: |
            Unique identification of a person, as assigned by an institution, using an identification scheme.
          type: array
          items:
            $ref: "#/components/schemas/personIdentification"


    genericAccountIdentification:
      type: object
      required:
        - identification
      properties:
        identification:
          description: |
            Unique and unambiguous identification of an account.
          type: string
          maxLength: 35
        schemeNameCode:
          $ref: "#/components/schemas/accountIdentificationCode"
        schemeNameProprietary:
          description: A scheme name defined in a proprietary way.
          type: string
          maxLength: 35
        issuer:
          description: Issuer of the identification.
          type: string
          maxLength: 35


    genericFinancialInstitutionIdentification:
      type: object
      required:
        - identification
      properties:
        identification:
          description: |
            Unique and unambiguous identification of a financial insitution.
          type: string
          maxLength: 35
        schemeNameCode:
          $ref: "#/components/schemas/financialInstitutionIdentificationCode"
        schemeNameProprietary:
          description: A scheme name defined in a proprietary way.
          type: string
          maxLength: 35
        issuer:
          description: Issuer of the identification.
          type: string
          maxLength: 35


    genericOrganisationIdentification:
      type: object
      required:
        - identification
      properties:
        identification:
          description: |
            Unique and unambiguous identification of an organisation.
          type: string
          maxLength: 35
        schemeNameCode:
          $ref: "#/components/schemas/organisationIdentificationCode"
        schemeNameProprietary:
          description: A scheme name defined in a proprietary way.
          type: string
          maxLength: 35
        issuer:
          description: Issuer of the identification.
          type: string
          maxLength: 35


    personIdentification:
      type: object
      required:
        - identification
      properties:
        identification:
          description: |
            Unique and unambiguous identification of an organisation.
          type: string
          maxLength: 35
        schemeNameCode:
          $ref: "#/components/schemas/personIdentificationCode"
        schemeNameProprietary:
          description: A scheme name defined in a proprietary way.
          type: string
          maxLength: 35
        issuer:
          description: Issuer of the identification.
          type: string
          maxLength: 35


    paymentExchangeRate:
      description: Exchange Rate.
      type: object
      properties:
        unitCurrency:
          $ref: "#/components/schemas/currencyCode"
        exchangeRate:
          description: |
            Factor used to convert an amount from one currency into another. This reflects the price at which one 
            currency was bought with another currency.
          type: string
        contractIdentification:
          description: |
            Unique identification to unambiguously identify the foreign exchange contract.
          type: string
          maxLength: 35
        rateType:
          $ref: "#/components/schemas/exchangeRateTypeCode"


    balance:
      description: |
        A single balance element.
      type:
        object
      required:
        - balanceAmount
        - balanceType
      properties:
        balanceAmount:
          $ref: "#/components/schemas/amount"
        balanceType:
          $ref: "#/components/schemas/balanceType"
        creditLimitIncluded:
          description: |
            A flag indicating if the credit limit of the corresponding account
            is included in the calculation of the balance, where applicable.
          type: boolean
          example: false
        lastChangeDateTime:
          description: |
            This data element might be used to indicate e.g. with the expected or booked balance that no action is known
            on the account, which is not yet booked.
          type: string
          format: date-time
        referenceDate:
          description: Indicates the date of the balance.
          type: string
          format: date
        lastCommittedTransaction:
          description: |
            "entryReference" of the last committed transaction to support the TPP in identifying whether all
            PSU transactions are already known.
          type: string
          maxLength: 35


    balanceList:
      description: |
        A list of balances regarding this account, e.g. the current balance, the last booked balance.
        The list might be restricted to the current balance.
      type: array
      items:
        $ref: "#/components/schemas/balance"


    bicfi:
      description: BICFI
      type: string
      pattern: '[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}'
      example: "AAAADEBBXXX"


    lei:
      description: |
        Identifier as defined n ISO 17442 "Financial Services - Legal Entity Identifier (LEI)".
      type: string


    pan:
      description: |
        Primary Account Number according to ISO/IEC 7812.
      type: string
      maxLength: 35
      #According to ISO the following should be valid.
      #maxLength: 19
      #minLength: 8
      #pattern: "[0-9]{8,19}"
      example: "5409050000000000"


    maskedPan:
      description: |
        Masked Primary Account Number.
      type: string
      maxLength: 35
      example: "123456xxxxxx1234"


    bban:
      description: |
        Basic Bank Account Number (BBAN) Identifier.

        This data element can be used in the body of the consent request.
          Message for retrieving account access consent from this account. This
          data elements is used for payment accounts which have no IBAN.
          ISO20022: Basic Bank Account Number (BBAN).

          Identifier used nationally by financial institutions, i.e., in individual countries,
          generally as part of a National Account Numbering Scheme(s),
          which uniquely identifies the account of a customer.
      type: string
      pattern: "[a-zA-Z0-9]{1,30}"
      example: "BARC12345612345678"


    msisdn:
      type: string
      maxLength: 35
      description: Mobile phone number.
      example: "+49 170 1234567"


    iban:
      type: string
      description: IBAN of an account.
      pattern: "[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"
      example: "FR7612345987650123456789014"


    cardExpiryDate:
      description: |
        Expiry date of the card issued by the PIISP.
      type: string
      format: date
      example: "2018-07-01"


    cardNumber:
      description: Card Number of the card issued by the PIISP. Should be delivered if available.
      type: string
      maxLength: 35


    cardInformation:
      description: Addtional explanation for the card product.
      type: string
      maxLength: 140


    registrationInformation:
      description: Additional information about the registration process for the PSU, e. g. a reference to the 
        TPP / PSU contract.
      type: string
      maxLength: 140


    agentDescription:
      type: object
      required:
        - financialInstitutionId
      properties:
        financialInstitutionId:
          $ref: "#/components/schemas/financialInstitutionIdentification"
        branchIdentificationId:
          description: |
            Unique and unambiguous identification of a branch of a financial institution.
          type: string
          maxLength: 35
        branchIdentificationName:
          description: |
            Name by which an agent is known and which is usually used to identify that agent.
          type: string
          maxLength: 140


    agentDescription1:
      description: Proprietary identifications might be provided under financialInstitutionId/other
      type: object
      required:
        - financialInstitutionId
      properties:
        financialInstitutionId:
          $ref: "#/components/schemas/financialInstitutionIdentification"


    agentDescription2:
      description: Proprietary identifications might be provided under financialInstitutionId/other
      type: object
      required:
        - financialInstitutionId
      properties:
        financialInstitutionId:
          $ref: "#/components/schemas/financialInstitutionIdentification1"


    partyDescription:
      description: Name and potentially an identification of the debtor if a "Credited" transaction
      type: object
      properties:
        name:
          description: Name of the party.
          type: string
          maxLength: 140
        postalAddress:
          $ref: "#/components/schemas/postalAddress"
        identification:
          $ref: "#/components/schemas/partyIdentification"
        additionalPartyInformation:
          $ref: "#/components/schemas/additionalPartyInformation"


    partyDescription1:
      type: object
      properties:
        name:
          description: Name of the party.
          type: string
          maxLength: 140


    partyDescription2:
      type: object
      properties:
        name:
          description: |
            Name of the party.
          type: string
          maxLength: 140
        postalAddress:
          $ref: "#/components/schemas/postalAddress"


    partyDescription3:
      type: object
      properties:
        identification:
          $ref: "#/components/schemas/partyIdentification1"


    partyDescription4:
      description: Only name and identification is supported for now for this party.
      type: object
      properties:
        name:
          description: |
            Name of the party.
          type: string
          maxLength: 140
        identification:
          $ref: "#/components/schemas/partyIdentification1"


    paymentConditions:
      description: |
        Conditions for the execution of the payment.
      type: object
      properties:
        amountModificationAllowed:
          description: |
            Indicates if the debtor is allowed to pay a different amount then the requested amount.
          type: boolean
        earlyPaymentAllowed:
          description: |
            Indicates if the debtor is allowed to pay before the requested execution date.
          type: boolean


    paymentContextType:
      type: object
      properties:
        cardPresent:
          type: boolean
        cardDataEntryMode:
          $ref: "#/components/schemas/cardDataEntryMode"


    address:
      type: object
      required:
        - country
      properties:
        streetName:
          type: string
          maxLength: 70
        buildingNumber:
          type: string
        townName:
          type: string
        postCode:
          type: string
        country:
          $ref: "#/components/schemas/countryCode"
      example:
        {
          streetName: "rue blue",
          buildingNumber: "89",
          townName: "Paris",
          postCode: "75000",
          country: "FR"
        }


    addressLine:
      type: string
      maxLength: 140


    postalAddress:
      type: object
      properties:
        addressLines:
          description: |
            At most seven entries are permitted. May only be used, if none of the structured address elements 
            "streetName", "buildingNumber", "postcode" or "townName" is used.
            Remark: For SEPA transactions this is further restricted to a maximum of 1 entry.
          type: array
          items:
            $ref: "#/components/schemas/addressLine"
        department:
          description: |
            Identification of a division of a large organisation or building.
          type: string
          maxLength: 70
        subDepartment:
          description: |
            Identification of a sub-division of a large organisation or building.
          type: string
          maxLength: 70
        streetName:
          description: Name of a street or thoroughfare.
          type: string
          maxLength: 70
        buildingNumber:
          description: Number that identifies the position of a building on a street.
          type: string
          maxLength: 16
        buildingName:
          description: Name of the building or house.
          type: string
          maxLength: 35
        floor:
          description: Floor or storey within a building.
          type: string
          maxLength: 70
        postBox:
          description: |
            Numbered box in a post office, assigned to a person or organisation, where letters are kept until 
            called for.
          type: string
          maxLength: 16
        room:
          description: Building room number.
          type: string
          maxLength: 70
        postCode:
          description: |
            Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the 
            sorting of mail.
          type: string
          maxLength: 16
        townName:
          description: |
            Name of a built-up area, with defined boundaries, and a local government.
            Usage Rule: If address lines are not used, this attribute is mandatrory.
          type: string
          maxLength: 35
        townLocationName:
          description: Specific location name within the town.
          type: string
          maxLength: 35
        districtName:
          description: Identifies a subdivision within a country sub-division.
          type: string
          maxLength: 35
        countrySubDivision:
          description: Identifies a subdivision of a country such as state, region, county.
          type: string
          maxLength: 35
        country:
          $ref: "#/components/schemas/countryCode"


    phoneNumber:
      description: |
        Merchant phone number
        It consists of a "+" followed by the country code (from 1 to 3 characters) then a "-" and finally, any
        combination of numbers, "(", ")", "+" and "-" (up to 30 characters).
        pattern according to ISO20022 \+[0-9]{1,3}-[0-9()+\-]{1,30}
      type: string
      pattern: '\+[0-9]{1,3}\-[0-9()+\-]{1,30}'


    ownerName:
      description: |
        Name of the legal account owner.
        If there is more than one owner, then e.g. two names might be noted here.
        For a corporate account, the corporate name is used for this attribute.
        Even if supported by the ASPSP, the provision of this field might depend on the fact whether an explicit consent
        to this specific additional account information has been given by the PSU.
      type: string
      maxLength: 140
      example: "John Doe"


    debitAccounting:
      description: |
        If true, the amounts of debits on the reports are quoted positive with the related consequence for balances.
        If false, the amount of debits on the reports are quoted negative.
      type: boolean


    name:
      description: |
        Name of the account, as assigned by the ASPSP,
        in agreement with the account owner in order to provide an additional means of identification of the account.
      type: string
      maxLength: 70


    displayName:
      description: |
        Name of the account as defined by the PSU within online channels.
      type: string
      maxLength: 70


    amount:
      type: object
      required:
        - currency
        - amount
      properties:
        currency:
          $ref: "#/components/schemas/currencyCode"
        amount:
          description: |
            The amount given with fractional digits, where fractions must be compliant to the currency definition. Up 
            to 14 significant figures. Negative amounts are signed by minus.
            The decimal separator is a dot.
          type: string


    proxyAccountIdentification:
      type: object
      required:
        - identification
      properties:
        typeCode:
          $ref: "#/components/schemas/proxyAccountTypeCode"
        typeProprietary:
          type: string
          maxLength: 35
        identification:
          type: string
          maxLength: 2048


    financialInstitutionIdentification:
      description: |
        Originator payment service provider in case of indirect participation regarding a related API Access Scheme or 
        bilateral contract
      type: object
      properties:
        bicfi:
          $ref: "#/components/schemas/bicfi"
        clearingSystemMemberId:
          $ref: "#/components/schemas/clearingSystemMemberIdentification"
        name:
          description: Name of the financial institution
          type: string
          maxLength: 140
        postalAddress:
          $ref: "#/components/schemas/postalAddress"
        other:
          $ref: "#/components/schemas/genericFinancialInstitutionIdentification"


    financialInstitutionIdentification1:
      type: object
      required:
        - bicfi
      properties:
        bicfi:
          $ref: "#/components/schemas/bicfi"


    paymentIdentification:
      type: object
      properties:
        instructionId:
          description: |
            Unique identification as assigned by an instructing party for an instructed party to unambiguously identify 
            the instruction.
          type: string
          maxLength: 35
        endToEndId:
          type: string
          maxLength: 35
        uetr:
          description: |
            Universally unique identifier to provide an end-to-end reference of a payment transaction.
            It is recommended to use time-based version (version 1) and variant 8,9,a or b of the UUID as defined in 
            [RFC4122] for UUID fields such as uetr.
          type: string
          format: uuid


    paymentIdentification1:
      type: object
      properties:
        endToEndId:
          description: |
            Unique identification assigned by the initiating party to unambiguously identify the transaction. 
            This identification is passed on, unchanged, throughout the entire end-to-end chain.
          type: string
          maxLength: 35


    clearingSystemMemberIdentification:
      description: Information used to identify a member within a clearing system.
      type: object
      properties:
        memberId:
          description: Identification of a member of a clearing system.
          type: string
          maxLength: 35
        clearingSystemIdentificationCode:
          $ref: "#/components/schemas/clearingSystemIdentificationCode"
        clearingSystemIdentificationProprietary:
          description: Identification code for a clearing system, that has not yet been identified in the list of 
            clearing systems.
          type: string
          maxLength: 35


    geoLocation:
      description: Format using [RFC2426], i.e. GEO:<latitude>;< longitude >.
      type: string
      pattern: 'GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}'
      example: GEO:52.506931;13.144558


    userEntry:
      type: string


    remittance:
      description: |
        Structured remittance information.
        The remittance type will be re-defined in version 2 to be able to support more complex
        requirements. This is not downwards compatible.
      type: object
      properties:
        referredDocumentInformation:
          description: |
            Set of elements used to identify the documents referred to in the remittance information.
          type: array
          items:
            $ref: "#/components/schemas/referredDocumentInformation"
        creditorReferenceInformation:
          $ref: "#/components/schemas/creditorReferenceInformation"
        additionalRemittanceInformation:
          description: |
            Additional information to be displayed to the PSU e.g. within authorisation processes. This will not be used
            in related interbank payments.
          type: array
          items:
            type: string
            maxLength: 140


    remittanceInformationUnstructured:
      description: |
        Unstructured remittance information.
      type: string
      maxLength: 140


    enclosedFile:
      type: object
      required:
        - identification
        - enclosure
      properties:
        typeCode:
          $ref: "#/components/schemas/documentTypeCode"
        typeProprietary:
          description: Proprietary document type definition.
          type: string
          maxLength: 35
        identification:
          description: Identification of the document or template.
          type: string
          maxLength: 35
        issueDate:
          description: issue date of the document.
          type: string
          format: date
        issueDateTime:
          description: Issue date and time of the document.
          type: string
          format: date-time
        name:
          description: Name of document or transaction, for example, tax invoice.
          type: string
          maxLength: 140
        languageCode:
          $ref: "#/components/schemas/languageCode"
        formatCode:
          $ref: "#/components/schemas/documentFormatCode"
        formatProprietary:
          description: Proprietary format encoding.
          type: string
          maxLength: 35
        formatProprietarySchemeName:
          description: May be used only if also formatProprietary is used.
          type: string
          maxLength: 35
        formatProprietaryIssuer:
          description: May be used only if also formatProprietary is used.
          type: string
          maxLength: 35
        fileName:
          description: Technical name of the file.
          type: string
          maxLength: 140
        digitalSignature:
          description: Digital signature of the enclosed binary file.
            *Note* Not supported for now. Might be added later in case of market needs.
          type: string
        enclosure:
          description: Base64 encoding of the binary file representing the enclosed document or template, such as a PDF 
            file, image file,XML file, MT message.
          type: string
          format: byte


    entryDetails:
      description: |
        This data type describe entry details of a batch booking entry. The details are restricted to data attributes 
        relevant in this case.
      type: object
      required:
        - transactionAmount
      properties:
        references:
          $ref: "#/components/schemas/references"
        creditor:
          $ref: "#/components/schemas/partyDescription"
        transactionAmount:
          $ref: "#/components/schemas/amount"
        currencyExchange:
          type: array
          items:
            $ref: "#/components/schemas/reportExchangeRate"
        creditorAccount:
          $ref: "#/components/schemas/accountReference"
        creditorAgent:
          $ref: "#/components/schemas/agentDescription1"
        ultimateCreditor:
          $ref: "#/components/schemas/partyDescription4"
        debtor:
          $ref: "#/components/schemas/partyDescription"
        debtorAccount:
          $ref: "#/components/schemas/accountReference"
        debtorAgent:
          $ref: "#/components/schemas/agentDescription1"
        ultimateDebtor:
          $ref: "#/components/schemas/partyDescription4"
        remittanceInformationUnstructured:
          type: array
          items:
            $ref: "#/components/schemas/remittanceInformationUnstructured"
        remittanceInformationStructured:
          type: array
          items:
            $ref: "#/components/schemas/remittance"
        purposeCode:
          $ref: "#/components/schemas/purposeCode"


    directDebitTransaction:
      type: object
      required:
        - mandateRelatedInformation
      properties:
        mandateRelatedInformation:
          $ref: "#/components/schemas/mandateRelatedInformation"
        creditorSchemeId:
          $ref: "#/components/schemas/partyDescription3"


    creditorDetailsAndAccount:
      type: object
      required:
        - creditor
        - creditorAccount
      properties:
        creditor:
          $ref: "#/components/schemas/partyDescription"
        creditorAccount:
          $ref: "#/components/schemas/accountReference"


    referredDocumentInformation:
      type: object
      properties:
        typeCode:
          $ref: "#/components/schemas/referredDocumentTypeCode"
        typeProprietary:
          description: | 
            Specifies the type of referred document, provided in proprietary encoding.
          type: string
          maxLength: 35
        typeIssuer:
          description: | 
            Issuer of the document type.
          type: string
          maxLength: 35
        number:
          description: |
            Unique and unambiguous identification of the referred document.
          type: string
          maxLength: 35
        relatedDate:
          description: |
            Date associated with the referred document.
          type: string
          format: date


    creditorReferenceInformation:
      description: |
        Reference information provided by the creditor to allow the identification of the underlying documents.
      type: object
      required:
        - reference
      properties:
        reference:
          description: |
            The actual reference.
          type: string
          maxLength: 35
        referenceTypeCode:
          $ref: "#/components/schemas/creditorReferenceTypeCode"
        referenceTypeProprietary:
          description: |
            Type of the reference, provided in proprietary encoding.
          type: string
          maxLength: 35
        referenceIssuer:
          description: |
            Issuer of the reference.
          type: string
          maxLength: 35


    structuredAdditionalInformation:
      description: |
        Is used if and only if the bookingStatus entry equals "information".
        Every active standing order related to the dedicated payment account result into one entry.
        Each received RTP result into one entry
      type: object
      properties:
        standingOrderDetails:
          $ref: "#/components/schemas/standingOrderDetails"
        rtpDetails:
          $ref: "#/components/schemas/rtpDetails"


    structuredAdditionalTransactionInformation:
      description: |
        Data about the transactional process of Transaction Information submission, authorisation and/or cancellation 
        of the underlying payment.
      type: object
      required:
        - transactionStatus
      properties:
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"
        transactionCreated:
          $ref: "#/components/schemas/userEntry"
        transactionAuthorised:
          type: array
          items:
            $ref: "#/components/schemas/userEntry"
        transactionCancelled:
          type: array
          items:
            $ref: "#/components/schemas/userEntry"


    mandateRelatedInformation:
      type: object
      required:
        - mandateId
        - dateOfSignature
      properties:
        mandateId:
          type: string
          maxLength: 35
        dateOfSignature:
          type: string
          format: date
        amendmentInformationDetails:
          $ref: "#/components/schemas/amendmentInformationDetails"
        electronicSignature:
          description: |
            Only used for e-mandates
          type: string
          maxLength: 1025


    additionalRequestInformation:
      type: object
      required:
        - requestedExpiryDateTime
      properties:
        paymentConditions:
          $ref: "#/components/schemas/paymentConditions"
        creationDateTime:
          description: creationDateTime of the originator
          type: string
          format: date-time
        requestedExpiryDateTime:
          description: Date and Time at which this request expires.
          type: string
          format: date-time
        originatorPspId:
          $ref: "#/components/schemas/financialInstitutionIdentification"
        receiverPspId:
          $ref: "#/components/schemas/financialInstitutionIdentification"


    additionalRequestInformation1:
      type: object
      properties:
        originatorPspId:
          $ref: "#/components/schemas/financialInstitutionIdentification"


    standingOrderDetails:
      description: |
        Details of underlying standing orders.
      type: object
      required:
        - startDate
        - frequency
      properties:
        startDate:
          $ref: "#/components/schemas/startDate"
        endDate:
          $ref: "#/components/schemas/endDate"
        executionRule:
          $ref: "#/components/schemas/executionRule"
        withinAMonthFlag:
          description: |
            This element is only used in case of frequency equals "Monthly".

            If this element equals false it has no effect.
            If this element equals true, then the execution rule is overruled if the day of execution would fall into a 
            different month using the execution rule.
            Example: executionRule equals "preceding", dayOfExecution equals "02" and the second of a month is a Sunday.
            In this case, the transaction date would be on the last day of the month before.
             This would be overruled if withinAMonthFlag equals true and the payment is processed on Monday the third of
            the Month. Remark: This attribute is rarely supported in the market.
          type: boolean
        frequency:
          $ref: "#/components/schemas/frequencyCode"
        monthsOfExecution:
          $ref: "#/components/schemas/monthsOfExecution"
        multiplicator:
          description: |
            This is multiplying the given frequency resulting the exact frequency,
            e.g. Frequency=weekly and multiplicator=3 means every 3 weeks.
            Remark: This attribute is rarely supported in the market.
          type: integer
        dayOfExecution:
          $ref: "#/components/schemas/dayOfExecution"
        limitAmount:
          $ref: "#/components/schemas/amount"


    amendmentInformationDetails:
      type: object
      properties:
        originalMandateId:
          description: |
            Mandatory of change occur in "Mandate Identification" otherwise not to be used.
          type: string
          maxLength: 35
        originalCreditorSchemeId:
          $ref: "#/components/schemas/partyDescription4"
        originalDebtorAccount:
          $ref: "#/components/schemas/accountReference4"
        originalDebtorAgent:
          $ref: "#/components/schemas/agentDescription2"


    rtpDetails:
      description: Details of underlying incoming RTPs
      required:
        - requestedExpiryDateTime
      properties:
        paymentConditions:
          $ref: "#/components/schemas/paymentConditions"
        creationDateTime:
          description: creationDateTime of the originator
          type: string
          format: date-time
        requestedExpiryDateTime:
          description: Date and Time at which this request expires.
          type: string
          format: date-time
        originatorPspId:
          $ref: "#/components/schemas/financialInstitutionIdentification"


    psuCredentials:
      description: The password, or encryptedPassword, subfield is used, depending on encryption requirements of the
        ASPSP as indicated in the corresponding hyperlink contained in the preceding response message of the ASPSP.
        The related encryption requirements are defined in Section 7.2.
      type: object
      properties:
        password:
          description: Contains a password in plaintext..
          type: string
        encryptedPassword:
          description: Is used when a password is encrypted on application level.
          type: string


    psuMessageText:
      description: Text to be displayed to the PSU.
      type: string
      maxLength: 500


    creditorName:
      description: Creditor name.
      type: string
      maxLength: 70
      example: "Creditor Name"


    contractId:
      description: Unique identification to unambiguously identify the foreign exchange contract.
      type: string


    creditorAgentName:
      description: Creditor agent name.
      type: string
      maxLength: 140
      example: "Creditor Agent Name"


    ultimateCreditor:
      description: Ultimate creditor.
      type: string
      maxLength: 70
      example: "Ultimate Creditor"

    #####################################################
    # Predefined Text Formats
    #####################################################
    balanceType:
      description: |
        The following balance types are defined:
          - "closingBooked":
            Balance of the account at the end of the pre-agreed account reporting period.
            It is the sum of the opening booked balance at the beginning of the period and all entries booked
            to the account during the pre-agreed account reporting period.

            For card-accounts, this is composed of

              - invoiced, but not yet paid entries

          - "expected":
            Balance composed of booked entries and pending items known at the time of calculation,
            which projects the end of day balance if everything is booked on the account and no other entry is posted.

            For card accounts, this is composed of:
              - invoiced, but not yet paid entries
              - not yet invoiced but already booked entries and
              - pending items (not yet booked)

            For card-accounts:

            "money to spend with the value of a pre-approved credit limit on the card account"

          - "openingBooked":
            Book balance of the account at the beginning of the account reporting period.
            It always equals the closing book balance from the previous report.
          - "interimAvailable":
            Available balance calculated in the course of the account ?servicer?s business day,
            at the time specified, and subject to further changes during the business day.
            The interim balance is calculated on the basis of booked credit and debit items during the calculation
            time/period specified.

            For card-accounts, this is composed of:
              - invoiced, but not yet paid entries
              - not yet invoiced but already booked entries
          - "interimBooked":
            Balance calculated in the course of the account servicer's business day, at the time specified,
            and subject to further changes during the business day.
            The interim balance is calculated on the basis of booked credit and debit items during the calculation 
            time/period specified.
          - "forwardAvailable":
            Forward available balance of money that is at the disposal of the account owner on the date specified.
          - "nonInvoiced":
            Only for card accounts, to be checked yet.
      type: string
      enum:
        - "closingBooked"
        - "expected"
        - "openingBooked"
        - "interimAvailable"
        - "interimBooked"
        - "forwardAvailable"
        - "nonInvoiced"


    accessRightsCodes:
      description: |
        The current list of access right codes. This might be further extended.
      type: string
      enum:
        - "ais"
        - "accountDetails"
        - "balances"
        - "transactions"
        - "orders"
        - "ownerName"
        - "psuName"
        - "psuLeanIdentification"
        - "trustedBeneficiaries"
        - "initiatePayments"
        - "fundsConfirmations"
        - "userParameters"
        - "ibanChecks"
        - "corporateParameters"
        - "accountCheckParameters"


    consentTypeCode:
      description: |
        Consent type. The value is one of the following:
          - 'global': This consent type asks certain rights for dedicated account types without further detailing the 
            accounts.
          - 'detailed': This consent type asks for access for dedicated accounts and dedicated rights.
          - 'aspspManaged': This consent type asks for access on certain account types for dedicated access rights. 
             The accounts provisioned will be added during the authorisation process by the ASPSP.
          - 'accountList': This consent type asks for the list of accounts for each addressed account type. 
            In difference to other account information consents, this consent might be authorised by using one 
            authentication factor only, if supported by the ASPSP.
            In addition to the "accountDetails" access rights, also other non- transactional access rights might be 
            asked for. This might have an impact on the decision of the ASPSP to apply SCA or only one authentication 
            factor of the PSU.
      type: string
      enum:
        - "global"
        - "detailed"
        - "aspspManaged"
        - "accountList"


    accountStatus:
      description: |
        Account status. The value is one of the following:
          - "enabled": account is available
          - "deleted": account is terminated
          - "blocked": account is blocked e.g. for legal reasons
        If this field is not used, than the account is available in the sense of this specification.
      type: string
      enum:
        - "enabled"
        - "deleted"
        - "blocked"


    transactionStatus:
      description: |
        The transaction status is filled with codes of the ISO20022 data table:
        - 'ACCC': 'AcceptedSettlementCompleted' -
          Settlement on the creditor's account has been completed.
        - 'ACCP': 'AcceptedCustomerProfile' -
          Preceding check of technical validation was successful.
          Customer profile check was also successful.
        - 'ACSC': 'AcceptedSettlementCompleted' -
          Settlement on the debtor�s account has been completed.

          **Usage:** this can be used by the first agent to report to the debtor that the transaction has been 
          completed.

          **Warning:** this status is provided for transaction status reasons, not for financial information.
          It can only be used after bilateral agreement.
        - 'ACSP': 'AcceptedSettlementInProcess' -
          All preceding checks such as technical validation and customer profile were successful and therefore the 
          payment initiation has been accepted for execution.
        - 'ACTC': 'AcceptedTechnicalValidation' -
          Authentication and syntactical and semantical validation are successful.
        - 'ACWC': 'AcceptedWithChange' -
          Instruction is accepted but a change will be made, such as date or remittance not sent.
        - 'ACWP': 'AcceptedWithoutPosting' -
          Payment instruction included in the credit transfer is accepted without being posted to the creditor 
          customer's account.
        - 'RCVD': 'Received' -
          Payment initiation has been received by the receiving agent.
        - 'PDNG': 'Pending' -
          Payment initiation or individual transaction included in the payment initiation is pending.
          Further checks and status update will be performed.
        - 'RJCT': 'Rejected' -
          Payment initiation or individual transaction included in the payment initiation has been rejected.
        - 'CANC': 'Cancelled'
          Payment initiation has been cancelled before execution
        - 'ACFC': 'AcceptedFundsChecked' -
          Preceding check of technical validation and customer profile was successful and an automatic funds check was 
          positive.
        - 'PATC': 'PartiallyAcceptedTechnical'
          Correct The payment initiation needs multiple authentications, where some but not yet all have been performed.
          Syntactical and semantical validations are successful.
        - 'PART': 'PartiallyAccepted' -
          A number of transactions have been accepted, whereas another number of transactions have not yet achieved 
          'accepted' status.
          Remark: This code may be used only in case of bulk payments. It is only used in a situation where all mandated
          authorisations have been applied, but some payments have been rejected.

      type: string
      enum:
        - "ACCC"
        - "ACCP"
        - "ACSC"
        - "ACSP"
        - "ACTC"
        - "ACWC"
        - "ACWP"
        - "RCVD"
        - "PDNG"
        - "RJCT"
        - "CANC"
        - "ACFC"
        - "PATC"
        - "PART"
      example: "ACCP"


    creditTransferPaymentMethodCode:
      description: |
        This code set corresponds to ISO 20022 PaymentMethod3Code.
        - 'TRF': Credit Transfer 
        - 'CHK': Cheque
        - 'TRA': Transfer Advice
          Remark: Currently not supported by the openFinance payment data model. The code "TRA" is only mentioned for 
          completeness as it is defined in ISO20022.
      type: string
      enum:
        - "TRF"
        - "CHK"
        - "TRA"


    statusReasonCode:
      description: |
        At a minimum, the following codes from the ISO20022 ExternalStatusReasonCode1 list need to be supported by the 
        ASPSP. The codes should only used, if a related resource hase been generated on API level, i.e. if a transaction
        status can be provided. 
        Otherwise a related Message Code to be used in Error information would be sufficient.
        - AM04 "InsufficientFunds": Amount of funds available to cover specified message amount is insufficient.
          Remark: Indicates that the reason for rejecting the payment is that the required funds have been found to be 
          not available for the specific (e.g due to missing funds or due to configured limits) during processing after 
          the initial acceptance of the payment initiation.
        - DS0C "SignerCertificateRevoked": The signer certificate is revoked.
          Remark: Is used, if the signature/corporate seal certificate is revoked.
        - DS0D "SignerCertificateNotValid": The signer certificate is not valid (revoked or not active).
          Remark: Is used, if the signature/corporate seal certificate is blocked by the ASPSP or if the certificate is 
          expired.
        - DS0A "DataSignRequested": Data signature is required.
          Remark: Is used, if a signing by a corporate seal/certificate is mandated by the ASPSP but is missing.
        - DS04 "OrderRejected": The order was rejected by the bank side (for reasons concerning content)
          Remark: Indicates that the reason for rejecting the payment is that the content of the payment initiation has 
          been found invalid during processing after the initial acceptance of the payment initiation.
        - SL11 "CreditorNotOnWhitelistOfDebtor": Whitelisting service offered by the Debtor Agent; Debtor has not 
          included the Creditor on its “Whitelist” (yet). 
          In the Whitelist the Debtor may list all allowed Creditors to debit Debtor bank account.
      type: string
      enum:
        - "AM04"
        - "DS0C"
        - "DS0D"
        - "DS0A"
        - "DS04"
        - "SL11"


    documentFormatCode:
      description: |
        Specifies the external document format code (ExternalDocumentFormat1Code) in the format of a character string 
        with a maximum length of 4 characters.
      type: string
      enum:
        - "DPDF"
        - "DXML"
        - "SDSH"
        - "WORD"
        - "XSLT"


    documentTypeCode:
      description: |
        Specifies the document type (ExternalDocumentType1Code) as published in an external document type code list.
      type: string
      enum:
        - "CINV"
        - "CNFA"
        - "CONT"
        - "CREN"
        - "DEBN"
        - "DISP"
        - "DNFA"
        - "HIRI"
        - "INVS"
        - "MSIN"
        - "PROF"
        - "PUOR"
        - "QUOT"
        - "SBIN"
        - "SPRR"
        - "TISH"
        - "USAR"


    cashAccountType:
      description: |
        ExternalCashAccountType1Code from ISO 20022.
      type: string
      enum:
        - "CACC"
        - "CARD"
        - "CASH"
        - "CHAR"
        - "CISH"
        - "COMM"
        - "CPAC"
        - "LLSV"
        - "LOAN"
        - "MGLD"
        - "MOMA"
        - "NREX"
        - "ODFT"
        - "ONDP"
        - "OTHR"
        - "SACC"
        - "SLRY"
        - "SVGS"
        - "TAXE"
        - "TRAN"
        - "TRAS"
        - "VACC"
        - "NFCA"


    cardDataEntryMode:
      description: |
        This is following an ISO20022 Code: CardsDataReading1Code
        'CICC': EMV based
        'ECTL': EMV based contactless 
        'MGST': Magnetic Stripe
        'PHYS': Manual Entry
        'BRCD': Barcode
      type: string
      enum:
        - "CICC"
        - "ECTL"
        - "MGST"
        - "PHYS"
        - "BRCD"


    regulatoryReportingTypeCode:
      description: |
        Identifies whether the regulatory reporting information applies to the debit side, to the credit side or to 
        both debit and credit sides of the transaction.
        - 'CRED': Regulatory information applies to the credit side.
        - 'DEBT': Regulatory information applies to the debit side.
        - 'BOTH': Regulatory information applies to both credit and debit sides.
      type: string
      enum:
        - "CRED"
        - "DEBT"
        - "BOTH"


    securingMethodCode:
      description: |
        This code is providing information about how an authorised amount is secured within the ASPSP .
        'reservationOfFunds': The bank is reserving the funds via a disposition of the amount on the account.
        'creditLine': The bank is reserving the funds via the usage of a credit line of the customer.
        'bankGuarantee': The bank is offering a payment guarantee. 
        'consumerLoan': The payment is secured by a consumer loan.
      type: string
      enum:
        - "reservationOfFunds"
        - "creditLine"
        - "bankGuarantee"
        - "consumerLoan"


    referredDocumentTypeCode:
      description: |
        This code set is equivalent to the ISO 20022 definition DocumentType6Code:
        - 'MSIN': Document is an invoice claiming payment for the supply of metered services, for example gas or 
          electricity supplied to a fixed meter
        - 'CNFA': Document is a credit note for the final amount settled for a commercial transaction.
        - 'DNFA': Document is a debit note for the final amount settled for a commercial transaction.
        - 'CINV': Document is an invoice.
        - 'CREN': Document is a credit note.
        - 'DEBN': Document is a debit note.
        - 'HIRI': Document is an invoice for the hiring of human resources or renting goods or equipment.
        - 'SBIN': Document is an invoice issued by the debtor.
        - 'CMCN': Document is an agreement between the parties, stipulating the terms and conditions of the delivery of 
          goods or services.
        - 'SOAC': Document is a statement of the transactions posted to the debtor's account at the supplier.
        - 'DISP': Document is a dispatch advice.
        - 'BOLD': Document is a shipping notice.
        - 'VCHR': Document is an electronic payment document.
        - 'AROI': Document is a payment that applies to a specific source document.
        - 'TSUT': Document is a transaction identifier as assigned by the Trade Services Utility
        - 'PUOR': Document is a purchase order.
      type: string
      enum:
        - "MSIN"
        - "CNFA"
        - "DNFA"
        - "CINV"
        - "CREN"
        - "DEBN"
        - "HIRI"
        - "SBIN"
        - "CMCN"
        - "SOAC"
        - "DISP"
        - "BOLD"
        - "VCHR"
        - "AROI"
        - "TSUT"
        - "PUOR"


    addressTypeCode:
      description: Specifies the type of address. This is following AddressType2Code from ISO20022.
      type: string
      enum:
        - "ADDR"
        - "PBOX"
        - "HOME"
        - "BIZZ"
        - "MLTO"
        - "DLVY"


    sequenceTypeCode:
      description: This is following SequenceType3Code from ISO20022.
      type: string
      enum:
        - "FRST"
        - "RCUR"
        - "FNAL"
        - "OOFF"
        - "RPRE"


    localInstrumentCode:
      description: This is following ExternalLocalInstrument1Code from ISO20022.
      type: string
      enum:
        - "DDMC"
        - "DDMP"
        - "DDMU"
        - "BPA"
        - "IPA"
        - "TRF"
        - "82"
        - "83"
        - "CPP"
        - "RTR"
        - "GST"
        - "DDT"
        - "RDD"
        - "CHN"
        - "STR"
        - "SDD"
        - "SRT"
        - "SRD"
        - "SCN"
        - "SGT"
        - "CARD"
        - "05"
        - "04"
        - "ISE"
        - "BSE"
        - "58"
        - "19"
        - "ASTI"
        - "BACP"
        - "MANP"
        - "SBTI"
        - "85"
        - "08"
        - "89"
        - "60"
        - "RIBA"
        - "RIDO"
        - "RIDV"
        - "IDEAL"
        - "INSTNT01"
        - "INSTTC01"
        - "INSTIDEAL"
        - "INSTNT01IDEAL"
        - "INSTTC01IDEAL"
        - "NLDO"
        - "NLUP"
        - "SDN"
        - "ACCEPT"
        - "ICMC"
        - "NLGOV"
        - "0090"
        - "0091"
        - "0092"
        - "0002"
        - "0221"
        - "0224"
        - "0226"
        - "0225"
        - "0222"
        - "0227"
        - "0220"
        - "0223"
        - "0001"
        - "0000"
        - "IN"
        - "ONCL"
        - "PERI"
        - "SDCL"
        - "DDNR"
        - "DDFA"
        - "CORE"
        - "B2BAMIPM"
        - "B2B"
        - "CR1AMIPM"
        - "CORAMIPM"
        - "COR1"
        - "FADAMIPM"
        - "CLSCCPERX"
        - "CLSCCPLCH"
        - "INST"
        - "ADD"
        - "UDD"
        - "CCI"
        - "BTR"
        - "CKS"
        - "CTR"
        - "CTP"
        - "DEP"
        - "FFR"
        - "FFS"
        - "SVC"
        - "DRW"
        - "DRB"
        - "DRC"
        - "IAT"
        - "CCD"
        - "CTX"
        - "PPD"
        - "CIE"
        - "RCK"
        - "ARC"
        - "WEB"
        - "POP"
        - "POS"
        - "TEL"
        - "ITP"
        - "MDP"
        - "IMD"
        - "SOP"
        - "FDP"


    categoryPurposeCode:
      description: This is following ExternalCategoryPurpose1Code from ISO20022.
      type: string
      enum:
        - "BONU"
        - "CASH"
        - "CBLK"
        - "CCRD"
        - "CORT"
        - "DCRD"
        - "DIVI"
        - "DVPM"
        - "EPAY"
        - "FCIN"
        - "FCOL"
        - "GP2P"
        - "GOVT"
        - "HEDG"
        - "ICCP"
        - "IDCP"
        - "INTC"
        - "INTE"
        - "LBOX"
        - "LOAN"
        - "MP2B"
        - "MP2P"
        - "OTHR"
        - "PENS"
        - "RPRE"
        - "RRCT"
        - "RVPM"
        - "SALA"
        - "SECU"
        - "SSBE"
        - "SUPP"
        - "TAXS"
        - "TRAD"
        - "TREA"
        - "VATX"
        - "WHLD"
        - "SWEP"
        - "TOPG"
        - "ZABA"
        - "VOST"
        - "FCDT"
        - "CIPC"
        - "CONC"
        - "CGWV"


    clearingSystemIdentificationCode:
      description: |
        Identification of a clearing system, in a coded form, following ExternalClearingSystemIdentification1Code from 
        ISO20022.
      type: string
      enum:
        - "ATBLZ"
        - "AUBSB"
        - "CACPA"
        - "CHBCC"
        - "CHSIC"
        - "CNAPS"
        - "DEBLZ"
        - "ESNCC"
        - "GBDSC"
        - "GRBIC"
        - "HKNCC"
        - "IENCC"
        - "INFSC"
        - "ITNCC"
        - "JPZGN"
        - "NZNCC"
        - "PLKNR"
        - "PTNCC"
        - "RUCBC"
        - "SESBA"
        - "SGIBG"
        - "THCBC"
        - "TWNCC"
        - "USABA"
        - "USPID"
        - "ZANCC"
        - "NZRSA"
        - "MZBMO"
        - "CNCIP"
        - "KRBOK"


    instructionCode:
      description: |
        This is following Instruction3Code from ISO20022.
        Specifies further instructions concerning the processing of a payment instruction, provided by
        the sending clearing agent to the next agent(s).
      type: string
      enum:
        - "CHQB"
        - "HOLD"
        - "PHOB"
        - "TELB"

    chargeBearer:
      description: This is following ChargeBearerType1Code from ISO20022.
      type: string
      enum:
        - "DEBT"
        - "CRED"
        - "SHAR"
        - "SLEV"


    serviceLevelCode:
      description: |
        ExternalServiceLevel1Code from ISO 20022.
        Values from ISO 20022 External Code List ExternalCodeSets_1Q2021 May 2021.
      type: string
      enum:
        - "BKTR"
        - "G001"
        - "G002"
        - "G003"
        - "G004"
        - "NPCA"
        - "NUGP"
        - "NURG"
        - "PRPT"
        - "SDVA"
        - "SEPA"
        - "SVDE"
        - "URGP"
        - "URNS"
        - "INST"
        - "SRTP"
        - "SVAT"
        - "G006"
        - "G007"
        - "G005"
        - "G009"
        - "WFSM"
        - "EOLO"


    exchangeRateTypeCode:
      description: |
        This code set is equivalent to the ISO 20022 definition ExchangeRateType1Code:
        - 'SPOT': Exchange rate applied is the spot rate.
        - 'SALE': Exchange rate applied is the market rate at the time of the sale.
        - 'AGRD': Exchange rate applied is the rate agreed between the parties.
      type: string
      enum:
        - "SPOT"
        - "SALE"
        - "AGRD"


    priorityCode:
      description: |
        This code set is equivalent to the ISO 20022 definition Priority2Code:
        - 'HIGH': Priority level is high. 
        - 'NORM': Priority level is normal.
      type: string
      enum:
        - "HIGH"
        - "NORM"


    creditorReferenceTypeCode:
      description: |
        This code set is equivalent to the ISO 20022 definition DocumentType3Code:
        - 'RADM': Document is a remittance advice sent separately from the current transaction.
        - 'RPIN': Document is a linked payment instruction to which the current payment instruction is related, for 
          example, in a cover scenario.
        - 'FXDR': Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction
          refers.
        - 'DISP': Document is a dispatch advice.
        - 'PUOR': Document is a purchase order.
        - 'SCOR': Document is a structured communication reference provided  by the creditor to identify the referred 
          transaction.
      type: string
      enum:
        - "RADM"
        - "RPIN"
        - "FXDR"
        - "DISP"
        - "PUOR"
        - "SCOR"


    accountIdentificationCode:
      description: |
        Specifies the external account identification scheme name code(ExternalAccountIdentification1Code).
      type: string
      enum:
        - "AIIN"
        - "BBAN"
        - "CUID"
        - "UPIC"


    financialInstitutionIdentificationCode:
      description: |
        Specifies the external financial institution identification scheme name code in the format of 
        character string with a maximum length of 4 characters.(ExternalFinancialInstitutionIdentification1Code).
      type: string
      minLength: 1
      maxLength: 4


    organisationIdentificationCode:
      description: |
        An entry provided by an external ISO code list
      type: string


    personIdentificationCode:
      description: |
        Specifies the external person identification scheme name code (ExternPersonIdentification1Code) in the format 
        of character string with a maximum length of 4 characters.
      type: string
      enum:
        - "ARNU"
        - "CCPT"
        - "CUST"
        - "DRLC"
        - "EMPL"
        - "NIDN"
        - "SOSE"
        - "TELE"
        - "TXID"
        - "POID"
    

    proxyAccountTypeCode:
      description: |
        Specifies the external proxy account type code, as published in the proxy account type external code set.
        (ExternalProxyAccountType1Code)
      type: string
      enum:
        - "TELE"
        - "EMAL"
        - "DNAM"
        - "CINC"
        - "COTX"
        - "COID"
        - "CUST"
        - "DRLC"
        - "EIDN"
        - "EWAL"
        - "PVTX"
        - "LEIC"
        - "MBNO"
        - "NIDN"
        - "CCPT"
        - "SHID"
        - "SOSE"
        - "TOKN"
        - "UBIL"
        - "VIPN"
        - "BIID"


    languageCode:
      description: Code following ISO – 639-3 (three letter code)
      type: string
      pattern: "[A-Z]{3}"


    countryCode:
      description: ISO 3166 ALPHA2 country code.
      type: string
      pattern: "[A-Z]{2}"
      example: "SE"


    currencyCode:
      description: |
        ISO 4217 Alpha 3 currency code.
      type: string
      pattern: '[A-Z]{3}'
      example: "EUR"


    usage:
      description: |
        Specifies the usage of the account:
          * PRIV: private personal account
          * ORGA: professional account
      type: string
      maxLength: 4
      enum:
        - "PRIV"
        - "ORGA"


    purposeCode:
      description: |
        ExternalPurpose1Code from ISO 20022.
        Values from ISO 20022 External Code List ExternalCodeSets_1Q2018 June 2018.
      type: string
      enum:
        - "BKDF"
        - "BKFE"
        - "BKFM"
        - "BKIP"
        - "BKPP"
        - "CBLK"
        - "CDCB"
        - "CDCD"
        - "CDCS"
        - "CDDP"
        - "CDOC"
        - "CDQC"
        - "ETUP"
        - "FCOL"
        - "MTUP"
        - "ACCT"
        - "CASH"
        - "COLL"
        - "CSDB"
        - "DEPT"
        - "INTC"
        - "LIMA"
        - "NETT"
        - "BFWD"
        - "CCIR"
        - "CCPC"
        - "CCPM"
        - "CCSM"
        - "CRDS"
        - "CRPR"
        - "CRSP"
        - "CRTL"
        - "EQPT"
        - "EQUS"
        - "EXPT"
        - "EXTD"
        - "FIXI"
        - "FWBC"
        - "FWCC"
        - "FWSB"
        - "FWSC"
        - "MARG"
        - "MBSB"
        - "MBSC"
        - "MGCC"
        - "MGSC"
        - "OCCC"
        - "OPBC"
        - "OPCC"
        - "OPSB"
        - "OPSC"
        - "OPTN"
        - "OTCD"
        - "REPO"
        - "RPBC"
        - "RPCC"
        - "RPSB"
        - "RPSC"
        - "RVPO"
        - "SBSC"
        - "SCIE"
        - "SCIR"
        - "SCRP"
        - "SHBC"
        - "SHCC"
        - "SHSL"
        - "SLEB"
        - "SLOA"
        - "SWBC"
        - "SWCC"
        - "SWPT"
        - "SWSB"
        - "SWSC"
        - "TBAS"
        - "TBBC"
        - "TBCC"
        - "TRCP"
        - "AGRT"
        - "AREN"
        - "BEXP"
        - "BOCE"
        - "COMC"
        - "CPYR"
        - "GDDS"
        - "GDSV"
        - "GSCB"
        - "LICF"
        - "MP2B"
        - "POPE"
        - "ROYA"
        - "SCVE"
        - "SERV"
        - "SUBS"
        - "SUPP"
        - "TRAD"
        - "CHAR"
        - "COMT"
        - "MP2P"
        - "ECPG"
        - "ECPR"
        - "ECPU"
        - "EPAY"
        - "CLPR"
        - "COMP"
        - "DBTC"
        - "GOVI"
        - "HLRP"
        - "HLST"
        - "INPC"
        - "INPR"
        - "INSC"
        - "INSU"
        - "INTE"
        - "LBRI"
        - "LIFI"
        - "LOAN"
        - "LOAR"
        - "PENO"
        - "PPTI"
        - "RELG"
        - "RINP"
        - "TRFD"
        - "FORW"
        - "FXNT"
        - "ADMG"
        - "ADVA"
        - "BCDM"
        - "BCFG"
        - "BLDM"
        - "BNET"
        - "CBFF"
        - "CBFR"
        - "CCRD"
        - "CDBL"
        - "CFEE"
        - "CGDD"
        - "CORT"
        - "COST"
        - "CPKC"
        - "DCRD"
        - "DSMT"
        - "DVPM"
        - "EDUC"
        - "FACT"
        - "FAND"
        - "FCPM"
        - "FEES"
        - "GOVT"
        - "ICCP"
        - "IDCP"
        - "IHRP"
        - "INSM"
        - "IVPT"
        - "MCDM"
        - "MCFG"
        - "MSVC"
        - "NOWS"
        - "OCDM"
        - "OCFG"
        - "OFEE"
        - "OTHR"
        - "PADD"
        - "PTSP"
        - "RCKE"
        - "RCPT"
        - "REBT"
        - "REFU"
        - "RENT"
        - "REOD"
        - "RIMB"
        - "RPNT"
        - "RRBN"
        - "RVPM"
        - "SLPI"
        - "SPLT"
        - "STDY"
        - "TBAN"
        - "TBIL"
        - "TCSC"
        - "TELI"
        - "TMPG"
        - "TPRI"
        - "TPRP"
        - "TRNC"
        - "TRVC"
        - "WEBI"
        - "ANNI"
        - "CAFI"
        - "CFDI"
        - "CMDT"
        - "DERI"
        - "DIVD"
        - "FREX"
        - "HEDG"
        - "INVS"
        - "PRME"
        - "SAVG"
        - "SECU"
        - "SEPI"
        - "TREA"
        - "UNIT"
        - "FNET"
        - "FUTR"
        - "ANTS"
        - "CVCF"
        - "DMEQ"
        - "DNTS"
        - "HLTC"
        - "HLTI"
        - "HSPC"
        - "ICRF"
        - "LTCF"
        - "MAFC"
        - "MARF"
        - "MDCS"
        - "VIEW"
        - "CDEP"
        - "SWFP"
        - "SWPP"
        - "SWRS"
        - "SWUF"
        - "ADCS"
        - "AEMP"
        - "ALLW"
        - "ALMY"
        - "BBSC"
        - "BECH"
        - "BENE"
        - "BONU"
        - "CCHD"
        - "COMM"
        - "CSLP"
        - "GFRP"
        - "GVEA"
        - "GVEB"
        - "GVEC"
        - "GVED"
        - "GWLT"
        - "HREC"
        - "PAYR"
        - "PEFC"
        - "PENS"
        - "PRCP"
        - "RHBS"
        - "SALA"
        - "SSBE"
        - "LBIN"
        - "LCOL"
        - "LFEE"
        - "LMEQ"
        - "LMFI"
        - "LMRK"
        - "LREB"
        - "LREV"
        - "LSFL"
        - "ESTX"
        - "FWLV"
        - "GSTX"
        - "HSTX"
        - "INTX"
        - "NITX"
        - "PTXP"
        - "RDTX"
        - "TAXS"
        - "VATX"
        - "WHLD"
        - "TAXR"
        - "B112"
        - "BR12"
        - "TLRF"
        - "TLRR"
        - "AIRB"
        - "BUSB"
        - "FERB"
        - "RLWY"
        - "TRPT"
        - "CBTV"
        - "ELEC"
        - "ENRG"
        - "GASB"
        - "NWCH"
        - "NWCM"
        - "OTLC"
        - "PHON"
        - "UBIL"
        - "WTER"


    bankTransactionCode:
      description: |
        Bank transaction code as used by the ASPSP and using the sub elements of this structured code defined by 
        ISO 20022.
        For standing order reports the following codes are applicable:
          * "PMNT-ICDT-STDO" for credit transfers,
          * "PMNT-IRCT-STDO"  for instant credit transfers
          * "PMNT-ICDT-XBST" for cross-border credit transfers
          * "PMNT-IRCT-XBST" for cross-border real time credit transfers and
          * "PMNT-MCOP-OTHR" for specific standing orders which have a dynamical amount to move left funds e.g. on 
            month end to a saving account

      type: string
      example: "PMNT-RDDT-ESDD"


    bankTransactionCodeProprietary:
      description: |
        Proprietary bank transaction code as used within a community or within an ASPSP e.g.
        for MT94x based transaction reports. Renaming of the attribute to adapt to statements.
      type: string
      maxLength: 35


    merchantCategoryCode:
      description: Merchant Category Code of the Card Acceptor as given in the related card transaction. Category code 
        conform to ISO 18245
      type: string
      maxLength: 4
      minLength: 4


    frequencyCode:
      description: |
        The following codes from the "EventFrequency7Code" of ISO 20022 are supported:
        - "Daily"
        - "Weekly"
        - "EveryTwoWeeks"
        - "Monthly"
        - "EveryTwoMonths"
        - "Quarterly"
        - "SemiAnnual"
        - "Annual"
        - "MonthlyVariable"
      type: string
      enum:
        - "Daily"
        - "Weekly"
        - "EveryTwoWeeks"
        - "Monthly"
        - "EveryTwoMonths"
        - "Quarterly"
        - "SemiAnnual"
        - "Annual"
        - "MonthlyVariable"


    frequencyPerDay:
      description: |
        This field indicates the requested maximum frequency for an access without PSU involvement per day.
        For a one-off access, this attribute is set to "1".

        The frequency needs to be greater equal to one.

        If not otherwise agreed bilaterally between TPP and ASPSP, the frequency is less equal to 4.
      type: integer
      example: 4
      minimum: 1
      exclusiveMinimum: false


    dayOfExecution:
      description: |
        "31" is ultimo.
        The format is following the regular expression \d{1,2}.
        Example: The first day is addressed by "1".
        The date is referring to the time zone of the ASPSP.
      type: string
      maxLength: 2
      enum:
        - "1"
        - "2"
        - "3"
        - "4"
        - "5"
        - "6"
        - "7"
        - "8"
        - "9"
        - "10"
        - "11"
        - "12"
        - "13"
        - "14"
        - "15"
        - "16"
        - "17"
        - "18"
        - "19"
        - "20"
        - "21"
        - "22"
        - "23"
        - "24"
        - "25"
        - "26"
        - "27"
        - "28"
        - "29"
        - "30"
        - "31"


    monthsOfExecution:
      description: |
        The format is following the regular expression \d{1,2}.
        The array is restricted to 11 entries.
        The values contained in the array entries shall all be different and the maximum value of one entry is 12.
        This attribute is contained if and only if the frequency equals "MonthlyVariable".
        Example: An execution on January, April and October each year is addressed by ["1", "4", "10"].
      type: array
      maxItems: 11
      items:
        type: string
        maxLength: 2
        enum:
          - "1"
          - "2"
          - "3"
          - "4"
          - "5"
          - "6"
          - "7"
          - "8"
          - "9"
          - "10"
          - "11"
          - "12"


    executionRule:
      description: |
        "following" or "preceding" supported as values.
        This data attribute defines the behaviour when recurring payment dates falls on a weekend or bank holiday.
        The payment is then executed either the "preceding" or "following" working day.
        ASPSP might reject the request due to the communicated value, if rules in Online-Banking are not supporting
        this execution rule.
      type: string
      enum:
        - "following"
        - "preceding"

    #####################################################
    # Predefined Date and Time Related Formats
    #####################################################

    transactionDate:
      description: Date of the actual card transaction.
      type: string
      format: date


    startDate:
      description: |
        The first applicable day of execution starting from this date the first payment was/will be executed.
      type: string
      format: date


    endDate:
      description: |
        The last applicable day of execution.
        If not given, it is an infinite standing order.
      type: string
      format: date


    bookingDate:
      description: |
        The date when an entry is posted to an account on the ASPSPs books.
      type: string
      format: date


    valueDate:
      description: |
        The Date at which assets become available to the account owner in case of a credit, or cease to be available to 
        the account owner in case of a debit entry.
        **Usage:** If entry status is pending and value date is present, then the value date refers to an 
        expected/requested value date.
      type: string
      format: date


    quotationDate:
      description: |
        Date at which an exchange rate is quoted.
      type: string
      format: date


    interbankSettlementDate:
      description: |
        Date on which the amount of money ceases to be available to the agent that owes it and when the amount of money 
        becomes available to the agent to which it is due.
      type: string
      format: date


    validTo:
      description: |
        This parameter is defining a valid until date (including the mentioned date) for the requested consent.
        The content is the local ASPSP date in ISO-Date format, e.g. 2024-10-30.

        Future dates might get adjusted by ASPSP.

        If a maximal available date is requested, a date in far future is to be used: "9999-12-31".

        In both cases the consent object to be retrieved by the get consent request will contain the adjusted date.

        The support of this adaption of the maximum available date is mandatory for the ASPSP.
      type: string
      format: date
      example: "2020-12-31"


#####################################################
# Content of Request Bodies
#####################################################


    #####################################################
    # Content of Request Bodies - JSON
    #####################################################

    paymentInitiation_json:
      description: |
        Generic Body for a payment initiation via JSON.

        This generic JSON body can be used to represent valid payment initiations for the following JSON based payment 
        product, which where defined in the Implementation Guidelines:

          * sepa-credit-transfers
          * instant-sepa-credit-transfers
          * target-2-payments
          * cross-border-credit-transfers

        For the convenience of the implementer additional which are already predefined in the Implementation Guidelines
        are included (but commented in source code), such that an ASPSP may add them easily.

        Take care: Since the format is intended to fit for all payment products
        there are additional conditions which are NOT covered by this specification.
        Please check the Implementation Guidelines for details.


        The following data element are depending on the actual payment product available (in source code):

         <table style="width:100%">
         <tr><th>Data Element</th><th>SCT EU Core</th><th>SCT INST EU Core</th><th>Target2 Paym. Core</th><th>Cross Border CT Core</th></tr>
         <tr><td>paymentIdentification</td><td> optional</td> <td>optional</td> <td>optional</td> <td>n.a.</td> </tr>
         <tr><td>instructionPriority</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>
         <tr><td>serviceLevelCode</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a. </td> </tr>
         <tr><td>localInstrumentCode</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a. </td> </tr>
         <tr><td>localInstrumentProprietary</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a. </td> </tr>
         <tr><td>categoryPurposeCode</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>
         <tr><td>categoryPurposeProprietary</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>
         <tr><td>chargeBearer</td> <td>n.a.</td> <td>n.a.</td> <td>optional</td> <td>conditional </td> </tr>
         <tr><td>debtorAccount</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> </tr>
         <tr><td>chargesAccount</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>optional</td> </tr>
         <tr><td>debtorName</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>
         <tr><td>ultimateDebtor</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>
         <tr><td>instructedAmount</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> </tr>
         <tr><td>currencyOfTransfer</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>
         <tr><td>exchangeRateInformation</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td> <td>n.a.</td> </tr>
         <tr><td>intermediaryAgent1</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td> <td>optional</td> </tr>
         <tr><td>intermediaryAgent2</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td> <td>conditional </td> </tr>
         <tr><td>creditorAccount</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> </tr>
         <tr><td>creditorAgent</td> <td>optional</td> <td>optional</td> <td>optional</td> <td>conditional </td> </tr>
         <tr><td>creditor</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> </tr>
         <tr><td>ultimateCreditor</td> <td>optional</td> <td>optional</td> <td>optional</td> <td>optional</td> </tr>
         <tr><td>purposeCode</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>
         <tr><td>purposeProprietary</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>
         <tr><td>remittanceInformationUnstructured</td> <td>optional</td> <td>optional</td> <td> optional</td> <td>optional</td> </tr>
         <tr><td>remittanceInformationStructured</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>
         <tr><td>enclosedFile</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>
         <tr><td>requestedExecutionDate</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>
         <tr><td>requestedExecutionDateTime</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>
         <tr><td>regularyReporting</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>
         <tr><td>additionalRequestedInformation</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>
            </td></tr>
          </table>

        IMPORTANT: In this API definition the following holds:
          *  All data elements mentioned above are defined, but some of them are commented,
            i.e. they are only visible in the source code and can be used by uncommenting them.
          * Data elements which are mandatory in the table above for all payment products
            are set to be mandatory in this specification.
          * Data elements which are indicated in the table above as n.a. for all payment products are commented in the 
            source code.
          * Data elements which are indicated to be option, conditional or mandatory for at least one payment product
            in the table above are set to be optional in the s specification except the case where all are defined to 
            be mandatory.
          * Data element which are indicated to be n.a. can be used by the ASPS if needed.
            In this case uncomment the the related lines in the source code.
          * If one uses this data types for some payment products he has to ensure that the used data type is
            valid according to the underlying payment product, e.g. by some appropriate validations.

      type: object
      required:
        - debtorAccount
        - instructedAmount
        - creditorAccount
        - creditor
      properties:
        paymentIdentification:
          $ref: "#/components/schemas/paymentIdentification1"
        chargeBearer:
          $ref: "#/components/schemas/chargeBearer"
        debtorAccount:
          $ref: "#/components/schemas/accountReference1"
        chargesAccount:
          $ref: "#/components/schemas/accountReference3"
        instructedAmount:
          $ref: "#/components/schemas/amount"
        intermediaryAgent1:
          $ref: "#/components/schemas/agentDescription1"
        intermediaryAgent2:
          $ref: "#/components/schemas/agentDescription1"
        creditorAccount:
          $ref: "#/components/schemas/accountReference1"
        creditorAgent:
          $ref: "#/components/schemas/agentDescription1"
        creditor:
          $ref: "#/components/schemas/partyDescription1"
        ultimateCreditor:
          oneOf:
            - $ref: "#/components/schemas/partyDescription1"
            - $ref: "#/components/schemas/partyDescription2"
            - $ref: "#/components/schemas/partyDescription3"
        remittanceInformationUnstructured:
          $ref: "#/components/schemas/remittanceInformationUnstructured"


    paymentInitiationBulkElement_json:
      description: |
        Generic body for a bulk payment initiation entry.

          The Credit Transfer Bulk Entry is a type which follows the JSON formats for the supported products for single 
          payments, see Section 2.1, excluding the data elements:
            * debtorAccount,
            * debtor
            * debtorAgent
            * requestedExecutionDate,
            * requestedExecutionDateTime.
          These data elements may not be contained in any bulk entry.
          In addition, the following entries will be allowed for every single entry, if not used already on bulk level:
            * chargeBearer
            * chargesAccount
            * categoryPurposeCode
            * categoryPurposeProprietary
            * serviceLevelCode
            * localInstrumentCode
            * localInstrumentProprietary
            * ultimateDebtor
          In addition, the attributes
            * purposeCode
            * remittanceInformationStructured
          are always available on entry level if supported by the related payment product.
        
        IMPORTANT: In this API definition the following holds:
          *  All data elements mentioned above are defined, but some of them are commented,
            i.e. they are only visible in the source code and can be used by uncommenting them.
          * Data elements which are mandatory in the table above for all payment products
            are set to be mandatory in this specification.
          * Data elements which are indicated in the table above as n.a. for all payment products are commented in the 
            source code.
          * Data elements which are indicated to be option, conditional or mandatory for at least one payment product
            in the table above are set to be optional in the s specification except the case where all are defined to be
            mandatory.
          * Data element which are indicated to be n.a. can be used by the ASPS if needed.
            In this case uncomment the the related lines in the source code.
          * If one uses this data types for some payment products he has to ensure that the used data type is
            valid according to the underlying payment product, e.g. by some appropriate validations.

      type: object
      required:
        - instructedAmount
        - creditorAccount
        - creditorName
      properties:
        paymentIdentification:
          $ref: "#/components/schemas/paymentIdentification1"
        chargeBearer:
          $ref: "#/components/schemas/chargeBearer"
        debtorAccount:
          $ref: "#/components/schemas/accountReference1"
        chargesAccount:
          $ref: "#/components/schemas/accountReference3"
        instructedAmount:
          $ref: "#/components/schemas/amount"
        intermediaryAgent1:
          $ref: "#/components/schemas/agentDescription1"
        intermediaryAgent2:
          $ref: "#/components/schemas/agentDescription1"
        creditorAccount:
          $ref: "#/components/schemas/accountReference1"
        creditorAgent:
          $ref: "#/components/schemas/agentDescription1"
        creditor:
          $ref: "#/components/schemas/partyDescription1"
        ultimateCreditor:
          oneOf:
            - $ref: "#/components/schemas/partyDescription1"
            - $ref: "#/components/schemas/partyDescription2"
            - $ref: "#/components/schemas/partyDescription3"
        remittanceInformationUnstructured:
          $ref: "#/components/schemas/remittanceInformationUnstructured"


    periodicPaymentInitiation_json:
      description: |
        Generic Body for a periodic payment initiation via JSON.

        This generic JSON body can be used to represent valid periodic payment initiations for the following JSON based 
        payment product, which where defined in the Implementation Guidelines:

          * sepa-credit-transfers
          * instant-sepa-credit-transfers
          * target-2-payments
          * cross-border-credit-transfers

        For the convenience of the implementer additional which are already predefined in the Implementation Guidelines
        are included (but commented in source code), such that an ASPSP may add them easily.

        Take care: Since the format is intended to fit for all payment products
        there are additional conditions which are NOT covered by this specification.
        Please check the Implementation Guidelines for details.

        IMPORTANT: In this API definition the following holds:
          *  All data elements mentioned above are defined, but some of them are commented,
            i.e. they are only visible in the source code and can be used by uncommenting them.
          * Data elements which are mandatory in the table above for all payment products
            are set to be mandatory in this specification.
          * Data elements which are indicated in the table above as n.a. for all payment products are commented in the 
            source code.
          * Data elements which are indicated to be option, conditional or mandatory for at least one payment product
            in the table above are set to be optional in the s specification except the case where all are defined to be
            mandatory.
          * Data element which are indicated to be n.a. can be used by the ASPS if needed.
            In this case uncomment the the related lines in the source code.
          * If one uses this data types for some payment products he has to ensure that the used data type is
            valid according to the underlying payment product, e.g. by some appropriate validations.

      type: object
      required:
        - startDate
        - frequency
        - debtorAccount
        - instructedAmount
        - creditorAccount
        - creditor
      properties:
        paymentIdentification:
          $ref: "#/components/schemas/paymentIdentification1"
        chargeBearer:
          $ref: "#/components/schemas/chargeBearer"
        debtorAccount:
          $ref: "#/components/schemas/accountReference1"
        chargesAccount:
          $ref: "#/components/schemas/accountReference3"
        instructedAmount:
          $ref: "#/components/schemas/amount"
        intermediaryAgent1:
          $ref: "#/components/schemas/agentDescription1"
        intermediaryAgent2:
          $ref: "#/components/schemas/agentDescription1"
        creditorAccount:
          $ref: "#/components/schemas/accountReference1"
        creditorAgent:
          $ref: "#/components/schemas/agentDescription1"
        creditor:
          $ref: "#/components/schemas/partyDescription1"
        ultimateCreditor:
          oneOf:
            - $ref: "#/components/schemas/partyDescription1"
            - $ref: "#/components/schemas/partyDescription2"
            - $ref: "#/components/schemas/partyDescription3"
        remittanceInformationUnstructured:
          $ref: "#/components/schemas/remittanceInformationUnstructured"
        #Additional Information for periodic payments
        startDate:
          $ref: "#/components/schemas/startDate"
        executionRule:
          $ref: "#/components/schemas/executionRule"
        endDate:
          $ref: "#/components/schemas/endDate"
        frequency:
          $ref: "#/components/schemas/frequencyCode"
        dayOfExecution:
          $ref: "#/components/schemas/dayOfExecution"
        monthsOfExecution:
          $ref: "#/components/schemas/monthsOfExecution"


    bulkPaymentInitiation_json:
      description: |
        Generic Body for a bulk payment initiation via JSON.

        paymentInformationId is contained in code but commented since it is n.a.
        and not all ASPSP are able to support this field now.
        In a later version the field will be mandatory.
      type: object
      required:
        - paymentInformationId
        - numberOfTransactions
        - controlSum
        - debtorAccount
        - creditTransfers
      properties:
        paymentInformationId:
          description: |
            Unique identification as assigned by the sending party to unambiguously identify this bulk payment.
          type: string
          maxLength: 35
        paymentMethod:
          $ref: "#/components/schemas/creditTransferPaymentMethodCode"
        batchBooking:
          $ref: "#/components/schemas/batchBookingPreferred"
        numberOfTransactions:
          type: integer
        controlSum:
          description: |
            Total of all individual amounts included i the group, irrespective of currencies.
          type: string
          maxLength: 35
        serviceLevelCode:
          $ref: "#/components/schemas/serviceLevelCode"
        chargeBearer:
          $ref: "#/components/schemas/chargeBearer"
        categoryPurposeCode:
          $ref: "#/components/schemas/categoryPurposeCode"
        categoryPurposeProprietary:
          type: string
          maxLength: 35
        localInstrumentCode:
          $ref: "#/components/schemas/localInstrumentCode"
        localInstrumentProprietary:
          type: string
          maxLength: 35
        debtor:
          $ref: "#/components/schemas/partyDescription"
        ultimateDebtor:
          $ref: "#/components/schemas/partyDescription4"
        debtorAccount:
          $ref: "#/components/schemas/accountReference"
        debtorAgent:
          $ref: "#/components/schemas/agentDescription1"
        chargesAccount:
          $ref: "#/components/schemas/accountReference3"
        requestedExecutionDate:
          type: string
          format: date
        requestedExecutionDateTime:
          type: string
          format: date-time
        creditTransfers:
          description: |
            The Credit Transfer Bulk Entry is a type which follows the JSON formats for the supported products for 
            single payments, see Section 2.1, excluding the data elements
              * debtorAccount
              * debtor
              * debtorAgent
              * requestedExecutionDate
              * requestedExecutionDateTime

            These data elements may not be contained in any bulk entry.
            In addition, the following entries will be allowed for every single entry, if not used already on bulk level:
              * chargeBearer
              * chargesAccount
              * categoryPurposeCode
              * categoryPurposeProprietary
              * serviceLevelCode
              * localInstrumentCode
              * localInstrumentProprietary
              * ultimateDebtor

            In addition, the attributes
              * purposeCode
              * remittanceInformationStructured
            are always available on entry level if supported by the related payment product.
          type: array
          items:
            $ref: "#/components/schemas/paymentInitiationBulkElement_json"


    confirmationOfFunds_json:
      description: |
        JSON Request body for the "Confirmation of funds service".

        <table>
        <tr>
          <td>cardNumber</td>
          <td>String </td>
          <td>Optional</td>
          <td>Card Number of the card issued by the PIISP. Should be delivered if available.</td>
        </tr>
        <tr>
          <td>account</td>
          <td> Account Reference</td>
          <td>Mandatory</td>
          <td>PSU's account number.</td>
        </tr>
        <tr>
          <td>payee</td>
          <td>Max70Text</td>
          <td>Optional</td>
          <td>The merchant where the card is accepted as an information to the PSU.</td>
        </tr>
        <tr>
          <td>instructedAmount</td>
          <td>Amount</td>
          <td>Mandatory</td>
          <td>Transaction amount to be checked within the funds check mechanism.</td>
        </tr>
        </table>
      type: object
      required:
        - account
        - instructedAmount
      properties:
        cardNumber:
          description: |
            Card Number of the card issued by the PIISP.
            Should be delivered if available.
          type: string
          maxLength: 35
        account:
          $ref: "#/components/schemas/accountReference"
        payee:
          description: The merchant where the card is accepted as an information to the PSU..
          type: string
          maxLength: 70
        instructedAmount:
          $ref: "#/components/schemas/amount"


    accountAccessConsent:
      description: |
        Content of the body of an Account Access consent establishing request.
      type: object
      required:
        - access
        - consentType
        - recurringIndicator
        - validTo
        - frequencyPerDay
      properties:
        access:
          $ref: "#/components/schemas/accountAccess"
        consentType:
          $ref: "#/components/schemas/consentTypeCode"
        recurringIndicator:
          $ref: "#/components/schemas/recurringIndicator"
        validTo:
          $ref: "#/components/schemas/validTo"
        frequencyPerDay:
          $ref: "#/components/schemas/frequencyPerDay"


    fundsConfirmationsConsent:
      description: |
        Content of the body of a Funds Confirmations consent establishing request.
      type: object
      required:
        - access
        - consentType
        - recurringIndicator
        - validTo
      properties:
        access:
          $ref: "#/components/schemas/accountAccess"
        consentType:
          $ref: "#/components/schemas/consentTypeCode"
        recurringIndicator:
          $ref: "#/components/schemas/recurringIndicator"
        validTo:
          $ref: "#/components/schemas/validTo"
        cardNumber:
          $ref: "#/components/schemas/cardNumber"
        cardExpiryDate:
          $ref: "#/components/schemas/cardExpiryDate"
        cardInformation:
          $ref: "#/components/schemas/cardInformation"
        registrationInformation:
          $ref: "#/components/schemas/registrationInformation"


    userParametersAccessConsent:
      description: |
        Content of the body of a User Parameter Access consent establishing request.
      type: object
      required:
        - access
        - consentType
        - recurringIndicator
        - validTo
      properties:
        access:
          $ref: "#/components/schemas/accountAccess"
        consentType:
          $ref: "#/components/schemas/consentTypeCode"
        recurringIndicator:
          $ref: "#/components/schemas/recurringIndicator"
        validTo:
          $ref: "#/components/schemas/validTo"


    documentServicesConsent:
      description: |
        Content of the body of a Document Services consent establishing request.
      type: object
      required:
        - access
        - consentType
        - validTo
      properties:
        access:
          $ref: "#/components/schemas/accountAccess"
        consentType:
          $ref: "#/components/schemas/consentTypeCode"
        documentOriginator:
          $ref: "#/components/schemas/creditorDetailsAndAccount"
        documentTypes:
          description:  Might be mandated by API Access Schemes or bilateral contracts.
          type: array
          items:
            $ref: "#/components/schemas/documentTypeCode"
        additionalRequestInformation:
          $ref: "#/components/schemas/additionalRequestInformation1"
        validTo:
          $ref: "#/components/schemas/validTo"
        registrationInformation:
          $ref: "#/components/schemas/registrationInformation"


      #####################################################
      # Content of Request Bodies - Single Part
      #####################################################

    updatePsuAuthentication:
      description: |
        Content of the body of a Update PSU authentication request
        Password subfield is used.
      type: object
      required:
        - psuData
      properties:
        psuData:
          $ref: "#/components/schemas/psuCredentials"


    selectPsuAuthenticationMethod:
      description: |
        Content of the body of a Select PSU authentication method request
      type: object
      required:
        - authenticationMethodId
      properties:
        authenticationMethodId:
          $ref: "#/components/schemas/authenticationMethodId"


    updatePsuSelectAuthenticationMethod:
      description: |
        Content of the body of a Select PSU authentication method request
      type: object
      required:
        - authenticationMethodId
      properties:
        authenticationMethodId:
          $ref: "#/components/schemas/authenticationMethodId"


    transactionAuthorisation:
      description: |
        Content of the body of a transaction authorisation request
      type: object
      required:
        - scaAuthenticationData
      properties:
        scaAuthenticationData:
          $ref: "#/components/schemas/scaAuthenticationData"


    authorisationConfirmation:
      description: |
        Content of the body of an authorisation confirmation request
      type: object
      required: # conditional, empty body is covered in the definition of request body for Update PSU data
        - confirmationCode
      properties:
        confirmationCode:
          description: Confirmation Code as retrieved by the TPP from the redirect based SCA process.
          type: string


#####################################################
# Content of Response Bodies
#####################################################

    paymentInitiationStatusResponse-200_json:
      description: |
        Body of the response for a successful payment initiation status request in case of an JSON based 
        endpoint. *Remark:* If the PSU does not complete a required SCA within the required timeframe the payment 
        resource's status must be set to "RJCT". Particularly, if a multi-level-SCA is required and the number of 
        successful SCAs during the required timeframe is insufficient, the status must also be set to "RJCT".
      type: object
      required:
        - transactionStatus
      properties:
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"
        reasonCode:
          $ref: "#/components/schemas/statusReasonCode"
        reasonProprietary:
          description: |
            Proprietary additional information on the reason for e.g. rejecting the request.
            Remark: If an ISO Code is available it should be used instead of Proprietary Reasons. Further restrictions 
            could be defined by API Access Schemes.
          type: string
          maxLength: 35
        fundsAvailable:
          $ref: "#/components/schemas/fundsAvailable"
        transactionFees:
          $ref: "#/components/schemas/amount"
        currencyConversionFees:
          $ref: "#/components/schemas/amount"
        estimatedTotalAmount:
          $ref: "#/components/schemas/amount"
        estimatedInterbankSettlementAmount:
          $ref: "#/components/schemas/amount"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"
        ownerNames:
          description: |
            List of owner names. Should only be delivered after successful SCA. Could be restricted to the current PSU 
            by the ASPSP.
          type: array
          items:
            $ref: "#/components/schemas/accountOwner"
        _links:
          $ref: "#/components/schemas/linksPaymentInitiationStatus"
        apiClientMessages:
          description: Messages to the TPP on operational issues.
          type: array
          items:
            $ref: "#/components/schemas/clientMessageInformation"


    paymentInitiationRequestResponse-201:
      description: Body of the response for a successful payment initiation request.
      type: object
      required:
        - transactionStatus
        - paymentId
        - _links

      properties:
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"
        paymentId:
          $ref: "#/components/schemas/paymentId"
        transactionFees:
          # description: |
          #   Might be used by the ASPSP to transport the transaction fees relevant for the underlying payments.
          #   This field includes the entry of the currencyConversionFees if applicable.
          $ref: "#/components/schemas/amount"
        currencyConversionFee:
          # description: Might be used by the ASPSP to transport specific currency conversion fees related to the
          #initiated credit transfer.
          $ref: "#/components/schemas/amount"
        estimatedTotalAmount:
          # description: The amount which is estimated to be debted from the debtor account.
          #Note: This amount includes fees.
          $ref: "#/components/schemas/amount"
        estimatedInterbankSettlementAmount:
          # description: The estimated amount to be transferred to the payee.
          $ref: "#/components/schemas/amount"
        transactionFeeIndicator:
          $ref: "#/components/schemas/transactionFeeIndicator"
        scaMethods:
          $ref: "#/components/schemas/scaMethods"
        chosenScaMethod:
          $ref: "#/components/schemas/chosenScaMethod"
        challengeData:
          $ref: "#/components/schemas/challenge"
        _links:
          $ref: "#/components/schemas/linksPaymentInitiation"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"
        apiClientMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessage201PaymentInitiation"


    paymentInitiationCancelResponse-202:
      description: Body of the response for a successful cancel payment request.
      type: object
      required:
        - transactionStatus
      properties:
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"
        scaMethods:
          $ref: "#/components/schemas/scaMethods"
        chosenScaMethod:
          $ref: "#/components/schemas/chosenScaMethod"
        challengeData:
          $ref: "#/components/schemas/challenge"
        _links:
          $ref: "#/components/schemas/linksPaymentInitiationCancel"


    paymentInitiationWithStatusResponse:
      description: |
        Generic JSON response body consisting of the corresponding payment initiation JSON body together with an 
        optional transaction status field.
      type: object
      required:
        - debtorAccount
        - instructedAmount
        - creditorAccount
        - creditor
      properties:
        paymentIdentification:
          $ref: "#/components/schemas/paymentIdentification1"
        chargeBearer:
          $ref: "#/components/schemas/chargeBearer"
        debtorAccount:
          $ref: "#/components/schemas/accountReference1"
        chargesAccount:
          $ref: "#/components/schemas/accountReference3"
        instructedAmount:
          $ref: "#/components/schemas/amount"
        intermediaryAgent1:
          $ref: "#/components/schemas/agentDescription1"
        intermediaryAgent2:
          $ref: "#/components/schemas/agentDescription1"
        creditorAccount:
          $ref: "#/components/schemas/accountReference1"
        creditorAgent:
          $ref: "#/components/schemas/agentDescription1"
        creditor:
          $ref: "#/components/schemas/partyDescription1"
        ultimateCreditor:
          oneOf:
            - $ref: "#/components/schemas/partyDescription1"
            - $ref: "#/components/schemas/partyDescription2"
            - $ref: "#/components/schemas/partyDescription3"
        remittanceInformationUnstructured:
          $ref: "#/components/schemas/remittanceInformationUnstructured"
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"
        apiClientMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessageInitiationStatusResponse-200"


    periodicPaymentInitiationWithStatusResponse:
      description: |
        Generic JSON response body consistion of the corresponding periodic payment initiation JSON body together with 
        an optional transaction status field.
      type: object
      required:
        - startDate
        - frequency
        - debtorAccount
        - instructedAmount
        - creditorAccount
        - creditor
      properties:
        paymentIdentification:
          $ref: "#/components/schemas/paymentIdentification1"
        chargeBearer:
          $ref: "#/components/schemas/chargeBearer"
        debtorAccount:
          $ref: "#/components/schemas/accountReference1"
        chargesAccount:
          $ref: "#/components/schemas/accountReference3"
        instructedAmount:
          $ref: "#/components/schemas/amount"
        intermediaryAgent1:
          $ref: "#/components/schemas/agentDescription1"
        intermediaryAgent2:
          $ref: "#/components/schemas/agentDescription1"
        creditorAccount:
          $ref: "#/components/schemas/accountReference1"
        creditorAgent:
          $ref: "#/components/schemas/agentDescription1"
        creditor:
          $ref: "#/components/schemas/partyDescription1"
        ultimateCreditor:
          oneOf:
            - $ref: "#/components/schemas/partyDescription1"
            - $ref: "#/components/schemas/partyDescription2"
            - $ref: "#/components/schemas/partyDescription3"
        remittanceInformationUnstructured:
          $ref: "#/components/schemas/remittanceInformationUnstructured"
        #Additional Information for periodic payments
        startDate:
          $ref: "#/components/schemas/startDate"
        executionRule:
          $ref: "#/components/schemas/executionRule"
        endDate:
          $ref: "#/components/schemas/endDate"
        frequency:
          $ref: "#/components/schemas/frequencyCode"
        dayOfExecution:
          $ref: "#/components/schemas/dayOfExecution"
        monthsOfExecution:
          $ref: "#/components/schemas/monthsOfExecution"
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"
        apiClientMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessageInitiationStatusResponse-200"


    bulkPaymentInitiationWithStatusResponse:
      description: |
        Generic JSON response body consistion of the corresponding bulk payment initiation JSON body together with an 
        optional transaction status field.
      type: object
      required:
        - paymentInformationId
        - numberOfTransactions
        - controlSum
        - debtorAccount
        - creditTransfers
      properties:
        paymentInformationId:
          type: string
          maxLength: 35
        paymentMethod:
          $ref: "#/components/schemas/creditTransferPaymentMethodCode"
        batchBooking:
          $ref: "#/components/schemas/batchBookingPreferred"
        numberOfTransactions:
          type: integer
        controlSum:
          type: string
          maxLength: 35
        serviceLevelCode:
          $ref: "#/components/schemas/serviceLevelCode"
        chargeBearer:
          $ref: "#/components/schemas/chargeBearer"
        categoryPurposeCode:
          $ref: "#/components/schemas/categoryPurposeCode"
        categoryPurposeProprietary:
          type: string
          maxLength: 35
        localInstrumentCode:
          $ref: "#/components/schemas/localInstrumentCode"
        localInstrumentProprietary:
          type: string
          maxLength: 35
        debtor:
          $ref: "#/components/schemas/partyDescription"
        ultimateDebtor:
          $ref: "#/components/schemas/partyDescription4"
        debtorAccount:
          $ref: "#/components/schemas/accountReference"
        debtorAgent:
          $ref: "#/components/schemas/agentDescription1"
        chargesAccount:
          $ref: "#/components/schemas/accountReference3"
        requestedExecutionDate:
          type: string
          format: date
        requestedExecutionDateTime:
          type: string
          format: date-time
        creditTransfers:
          type: array
          items:
            $ref: "#/components/schemas/paymentInitiationBulkElement_json"
        transactionStatus:
          $ref: "#/components/schemas/transactionStatus"
        apiClientMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessageInitiationStatusResponse-200"


    scaStatusResponse:
      description: Body of the JSON response with SCA Status.
      required:
        - scaStatus
      type: object
      properties:
        scaStatus:
          $ref: "#/components/schemas/scaStatus"
        psuName:
          description: |
            Name of the PSU. In case of a corporate account, this might be the person acting on behalf of the corporate.
          type: string
          maxLength: 140
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"
        _links:
          $ref: "#/components/schemas/linksAll"
        apiClientMessages:
          description: |
            Messages to the TPP on operational issues.
          type: array
          items:
            $ref: "#/components/schemas/clientMessageInformation"


    startScaProcessResponse:
      description: Body of the JSON response for a Start SCA authorisation request.
      type: object
      required:
        - scaStatus
        - authorisationId
        - _links
      properties:
        transactionFees:
          $ref: "#/components/schemas/amount"
        currencyConversionFees:
          $ref: "#/components/schemas/amount"
        estimatedTotalAmount:
          $ref: "#/components/schemas/amount"
        estimatedInterbankSettlementAmount:
          $ref: "#/components/schemas/amount"
        scaStatus:
          $ref: "#/components/schemas/scaStatus"
        authorisationId:
          $ref: "#/components/schemas/authorisationId"
        scaMethods:
          $ref: "#/components/schemas/scaMethods"
        chosenScaMethod:
          $ref: "#/components/schemas/chosenScaMethod"
        challengeData:
          $ref: "#/components/schemas/challenge"
        _links:
          $ref: "#/components/schemas/linksStartScaProcess"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"


    authorisationConfirmationResponse:
      description: Body of the JSON response for an authorisation confirmation request.
      type: object
      required:
        - scaStatus
        - _links
      properties:
        scaStatus:
          $ref: "#/components/schemas/scaStatusAuthorisationConfirmation"
        _links:
          $ref: "#/components/schemas/linksAuthorisationConfirmation"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"


    updatePsuIdentificationResponse:
      description: Body of the JSON response for a successful update PSU identification request.
      type: object
      required:
        - _links
        - scaStatus
      properties:
        scaMethods:
          $ref: "#/components/schemas/scaMethods"
        _links:
          $ref: "#/components/schemas/linksUpdatePsuIdentification"
        scaStatus:
          $ref: "#/components/schemas/scaStatus"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"


    updatePsuAuthenticationResponse:
      description: Body of the JSON response for a successful update PSU authentication request.
      type: object
      required:
        - scaStatus
      properties:
        chosenScaMethod:
          $ref: "#/components/schemas/chosenScaMethod"
        challengeData:
          $ref: "#/components/schemas/challenge"
        scaMethods:
          $ref: "#/components/schemas/scaMethods"
        _links:
          $ref: "#/components/schemas/linksUpdatePsuAuthentication"
        scaStatus:
          $ref: "#/components/schemas/scaStatus"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"


    updatePsuSelectAuthenticationMethodResponse:
      description: Body of the JSON response for a successful select PSU authentication method request.
      type: object
      required:
        - scaStatus
      properties:
        chosenScaMethod:
          $ref: "#/components/schemas/chosenScaMethod"
        challengeData:
          $ref: "#/components/schemas/challenge"
        _links:
          $ref: "#/components/schemas/linksSelectPsuAuthenticationMethod"
        scaStatus:
          $ref: "#/components/schemas/scaStatus"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"


    transactionAuthorisationResponse:
      description: Body of the JSON response for a successful select PSU authentication method request.
      type: object
      required:
        - scaStatus
      properties:
        _links:
          $ref: "#/components/schemas/linksTransactionAuthorisation"
        scaStatus:
          $ref: "#/components/schemas/scaStatus"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"


    #Should be used if no changes will be done for responses for different consents establishing
    commonConsentResponse-201:
      description: Body of the JSON response for a successful consent request.
      type: object
      required:
        - consentStatus
        - consentId
        - _links
      properties:
        consentStatus:
          $ref: "#/components/schemas/consentStatus"
        consentId:
          $ref: "#/components/schemas/consentId"
        scaMethods:
          $ref: "#/components/schemas/scaMethods"
        chosenScaMethod:
          $ref: "#/components/schemas/chosenScaMethod"
        challengeData:
          $ref: "#/components/schemas/challenge"
        _links:
          $ref: "#/components/schemas/linksConsents"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"
        apiClientMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessageInformation"



    accountAccessConsentResponse-201:
      description: Body of the JSON response for a successful consent request.
      type: object
      required:
        - consentStatus
        - consentId
        - _links
      properties:
        consentStatus:
          $ref: "#/components/schemas/consentStatus"
        consentId:
          $ref: "#/components/schemas/consentId"
        scaMethods:
          $ref: "#/components/schemas/scaMethods"
        chosenScaMethod:
          $ref: "#/components/schemas/chosenScaMethod"
        challengeData:
          $ref: "#/components/schemas/challenge"
        _links:
          $ref: "#/components/schemas/linksConsents"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"
        apiClientMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessageInformation"


    fundsConfirmationsConsentResponse-201:
      description: Body of the JSON response for a successful consent request.
      type: object
      required:
        - consentStatus
        - consentId
        - _links
      properties:
        consentStatus:
          $ref: "#/components/schemas/consentStatus"
        consentId:
          $ref: "#/components/schemas/consentId"
        scaMethods:
          $ref: "#/components/schemas/scaMethods"
        chosenScaMethod:
          $ref: "#/components/schemas/chosenScaMethod"
        challengeData:
          $ref: "#/components/schemas/challenge"
        _links:
          $ref: "#/components/schemas/linksConsents"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"
        apiClientMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessageInformation"


    userParametersAccessConsentResponse-201:
      description: Body of the JSON response for a successful consent request.
      type: object
      required:
        - consentStatus
        - consentId
        - _links
      properties:
        consentStatus:
          $ref: "#/components/schemas/consentStatus"
        consentId:
          $ref: "#/components/schemas/consentId"
        scaMethods:
          $ref: "#/components/schemas/scaMethods"
        chosenScaMethod:
          $ref: "#/components/schemas/chosenScaMethod"
        challengeData:
          $ref: "#/components/schemas/challenge"
        _links:
          $ref: "#/components/schemas/linksConsents"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"
        apiClientMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessageInformation"


    documentServicesConsentResponse-201:
      description: Body of the JSON response for a successful consent request.
      type: object
      required:
        - consentStatus
        - consentId
        - _links
      properties:
        consentStatus:
          $ref: "#/components/schemas/consentStatus"
        consentId:
          $ref: "#/components/schemas/consentId"
        scaMethods:
          $ref: "#/components/schemas/scaMethods"
        chosenScaMethod:
          $ref: "#/components/schemas/chosenScaMethod"
        challengeData:
          $ref: "#/components/schemas/challenge"
        _links:
          $ref: "#/components/schemas/linksConsents"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"
        apiClientMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessageInformation"


    consentStatusResponse-200:
      description: Body of the JSON response for a successful get status request for a consent.
      type: object
      required:
        - consentStatus
      properties:
        consentStatus:
          $ref: "#/components/schemas/consentStatus"
        psuMessage:
          $ref: "#/components/schemas/psuMessageText"


    accountAccessConsentInformationResponse-200_json:
      description: Body of the JSON response for a successful get consent request.
      type: object
      required:
        - access
        - consentType
        - recurringIndicator
        - validTo
        - frequencyPerDay
        - consentStatus
      properties:
        access:
          $ref: "#/components/schemas/accountAccessExtended"
        consentType:
          $ref: "#/components/schemas/consentTypeCode"
        recurringIndicator:
          $ref: "#/components/schemas/recurringIndicator"
        validTo:
          $ref: "#/components/schemas/validTo"
        frequencyPerDay:
          $ref: "#/components/schemas/frequencyPerDay"
        consentStatus:
          $ref: "#/components/schemas/consentStatus"
        _links:
          $ref: "#/components/schemas/linksGetConsent"


    fundsConfirmationsConsentInformationResponse-200_json:
      description: Body of the JSON response for a successful get consent request.
      type: object
      required:
        - access
        - consentType
        - consentStatus
      properties:
        access:
          $ref: "#/components/schemas/accountAccessExtended"
        consentType:
          $ref: "#/components/schemas/consentTypeCode"
        cardNumber:
          $ref: "#/components/schemas/cardNumber"
        cardExpiryDate:
          $ref: "#/components/schemas/cardExpiryDate"
        cardInformation:
          $ref: "#/components/schemas/cardInformation"
        registrationInformation:
          $ref: "#/components/schemas/registrationInformation"
        consentStatus:
          $ref: "#/components/schemas/consentStatus"
        _links:
          $ref: "#/components/schemas/linksGetConsent"


    userParametersAccessConsentInformationResponse-200_json:
      description: Body of the JSON response for a successful get consent request.
      type: object
      required:
        - access
        - consentType
        - recurringIndicator
        - validTo
        - consentStatus
      properties:
        access:
          $ref: "#/components/schemas/accountAccessExtended"
        consentType:
          $ref: "#/components/schemas/consentTypeCode"
        recurringIndicator:
          $ref: "#/components/schemas/recurringIndicator"
        validTo:
          $ref: "#/components/schemas/validTo"
        consentStatus:
          $ref: "#/components/schemas/consentStatus"
        _links:
          $ref: "#/components/schemas/linksGetConsent"


    documentServicesConsentInformationResponse-200_json:
      description: Body of the JSON response for a successful get consent request.
      type: object
      required:
        - access
        - consentType
        - consentStatus
      properties:
        access:
          $ref: "#/components/schemas/accountAccessExtended"
        consentType:
          $ref: "#/components/schemas/consentTypeCode"
        cardNumber:
          $ref: "#/components/schemas/cardNumber"
        cardExpiryDate:
          $ref: "#/components/schemas/cardExpiryDate"
        cardInformation:
          $ref: "#/components/schemas/cardInformation"
        registrationInformation:
          $ref: "#/components/schemas/registrationInformation"
        consentStatus:
          $ref: "#/components/schemas/consentStatus"
        _links:
          $ref: "#/components/schemas/linksGetConsent"


    readAccountBalanceResponse-200:
      description: Body of the response for a successful read balance for an account request.
      type: object
      required:
        - account
        - balances
      properties:
        account:
          $ref: "#/components/schemas/accountReference"
        balances:
          $ref: "#/components/schemas/balanceList"


    transactionsResponse-200_json:
      description: |
        Body of the JSON response for a successful read transaction list request.
        This account report contains transactions resulting from the query parameters.
      type: object
      required:
        - account
      properties:
        account:
          $ref: "#/components/schemas/accountReference"
        transactions:
          $ref: "#/components/schemas/accountReport"
        balances:
          $ref: "#/components/schemas/balanceList"
        _links:
          $ref: "#/components/schemas/linksDownload"


#####################################################
# _links
#####################################################

    linksAll:
      description: |
        A link object with all available link types.
      type: object
      properties:
        scaRedirect:
          $ref: "#/components/schemas/hrefType"
        scaOAuth:
          $ref: "#/components/schemas/hrefType"
        confirmation:
          $ref: "#/components/schemas/hrefType"
        startAuthorisation:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithPsuIdentification:
          $ref: "#/components/schemas/hrefType"
        updatePsuIdentification:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithProprietaryData:
          $ref: "#/components/schemas/hrefType"
        updateProprietaryData:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        updatePsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithEncryptedPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        updateEncryptedPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithAuthenticationMethodSelection:
          $ref: "#/components/schemas/hrefType"
        selectAuthenticationMethod:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithTransactionAuthorisation:
          $ref: "#/components/schemas/hrefType"
        authoriseTransaction:
          $ref: "#/components/schemas/hrefType"
        self:
          $ref: "#/components/schemas/hrefType"
        status:
          $ref: "#/components/schemas/hrefType"
        transactionFees:
          $ref: "#/components/schemas/hrefType"
        scaStatus:
          $ref: "#/components/schemas/hrefType"
        account:
          $ref: "#/components/schemas/hrefType"
        savingsAccount:
          $ref: "#/components/schemas/hrefType"
        loanAccount:
          $ref: "#/components/schemas/hrefType"
        balances:
          $ref: "#/components/schemas/hrefType"
        transactions:
          $ref: "#/components/schemas/hrefType"
        transactionDetails:
          $ref: "#/components/schemas/hrefType"
        securitiesAccount:
          $ref: "#/components/schemas/hrefType"
        positions:
          $ref: "#/components/schemas/hrefType"
        orders:
          $ref: "#/components/schemas/hrefType"
        orderDetails:
          $ref: "#/components/schemas/hrefType"
        entryStatusRevoked:
          $ref: "#/components/schemas/hrefType"
        first:
          $ref: "#/components/schemas/hrefType"
        next:
          $ref: "#/components/schemas/hrefType"
        previous:
          $ref: "#/components/schemas/hrefType"
        last:
          $ref: "#/components/schemas/hrefType"
        download:
          $ref: "#/components/schemas/hrefType"
        paymentInitiation:
          $ref: "#/components/schemas/hrefType"
        confirmInitiation:
          $ref: "#/components/schemas/hrefType"


    linksPaymentInitiation:
      description: |
        A list of hyperlinks to be recognised by the TPP.
        The actual hyperlinks used in the response depend on the dynamical decisions of the ASPSP when
        processing the request.

        **Remark:** All links can be relative or full links, to be decided by the ASPSP.

        Type of links admitted in this response, (further links might be added for ASPSP defined extensions):

        * 'scaRedirect':
          In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to redirect the PSU browser.
        * 'scaOAuth':
          In case of a SCA OAuth2 Approach, the ASPSP is transmitting the URI where the configuration of the 
          Authorisation  erver can be retrieved. The configuration follows the OAuth 2.0 Authorisation Server 
          Metadata specification.
        * 'confirmation':
          Might be added by the ASPSP if either the "scaRedirect" or "scaOAuth" hyperlink is returned
          in the same response message.
          This hyperlink defines the URL to the resource which needs to be updated with
            * a confirmation code as retrieved after the plain redirect authentication process with the ASPSP 
            authentication server or
            * an access token as retrieved by submitting an authorisation code after the integrated OAuth based 
            authentication process with the ASPSP authentication server.
        * 'startAuthorisation':
          In case, where an explicit start of the transaction authorisation is needed, but no more data needs to be 
          updated (no authentication method to be selected, no PSU identification nor PSU authentication data to 
          be uploaded).
        * 'startAuthorisationWithPsuIdentification':
          The link to the authorisation end-point, where the authorisation sub-resource has to be generated while
          uploading the PSU identification data.
        * 'startAuthorisationWithPsuAuthentication':
          The link to the authorisation end-point, where the authorisation sub-resource has to be generated while
          uploading the PSU authentication data.
          * 'startAuthorisationWithEncryptedPsuAuthentication':
            Same as startAuthorisactionWithPsuAuthentication where the authentication data need to be encrypted on
            application layer in uploading.
        * 'startAuthorisationWithAuthenticationMethodSelection':
          The link to the authorisation end-point, where the authorisation sub-resource has to be generated while
          selecting the authentication method.
          This link is contained under exactly the same conditions as the data element "scaMethods"
        * 'startAuthorisationWithTransactionAuthorisation':
          The link to the authorisation end-point, where the authorisation sub-resource has to be generated while
          authorising the transaction e.g. by uploading an OTP received by SMS.
        * 'self':
          The link to the payment initiation resource created by this request.
          This link can be used to retrieve the resource data.
        * 'status':
          The link to retrieve the transaction status of the payment initiation.
        * 'scaStatus':
          The link to retrieve the scaStatus of the corresponding authorisation sub-resource.
          This link is only contained, if an authorisation sub-resource has been already created.
      type: object
      additionalProperties:
        $ref: "#/components/schemas/hrefType"
      properties:
        scaRedirect:
          $ref: "#/components/schemas/hrefType"
        scaOAuth:
          $ref: "#/components/schemas/hrefType"
        confirmation:
          $ref: "#/components/schemas/hrefType"
        startAuthorisation:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithPsuIdentification:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithEncryptedPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithAuthenticationMethodSelection:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithTransactionAuthorisation:
          $ref: "#/components/schemas/hrefType"
        self:
          $ref: "#/components/schemas/hrefType"
        status:
          $ref: "#/components/schemas/hrefType"
        scaStatus:
          $ref: "#/components/schemas/hrefType"
      example:
        {
          "scaRedirect": { "href": "https://www.testbank.com/asdfasdfasdf" },
          "self": { "href": "/v2/payments/sepa-credit-transfers/1234-wertiq-983" }
        }


    linksPaymentInitiationStatus:
      description: |
        Should refer to next steps if the problem can be resolved via the interface e.g. for re-submission of 
        credentials.
      type: object
      additionalProperties:
        $ref: "#/components/schemas/hrefType"
      example:
        {
          "scaRedirect": { "href": "https://www.testbank.com/asdfasdfasdf" },
          "self": { "href": "/v2/payments/sepa-credit-transfers/1234-wertiq-983" }
        }


    linksPaymentInitiationCancel:
      description: |
        A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the response depend on the
        dynamical decisions of the ASPSP when processing the request.

        Remark: All links can be relative or full links, to be decided by the ASPSP.

        Type of links admitted in this response, (further links might be added for ASPSP defined extensions):

          * 'startAuthorisation':
            In case, where just the authorisation process of the cancellation needs to be started,
            but no additional data needs to be updated for time being (no authentication method to be selected,
            no PSU identification nor PSU authentication data to be uploaded).
          * 'startAuthorisationWithPsuIdentification':
            In case where a PSU identification needs to be updated when starting the cancellation authorisation:
            The link to the cancellation-authorisations end-point, where the cancellation sub-resource has to be
            generated while uploading the PSU identification data.
          * 'startAuthorisationWithPsuAuthentication':
            In case of a yet to be created authorisation sub-resource: The link to the cancelation authorisation 
            end-point, where the authorisation sub-resource has to be generated while uploading the PSU authentication
            data.
          * 'startAuthorisationWithEncryptedPsuAuthentication':
            Same as startAuthorisactionWithPsuAuthentication where the authentication data need to be encrypted on
            application layer in uploading.
          * 'startAuthorisationWithAuthenticationMethodSelection':
            The link to the authorisation end-point, where the cancellation-authorisation sub-resource has to be
            generated while selecting the authentication method. This link is contained under exactly the same
            conditions as the data element 'scaMethods'

      type: object
      additionalProperties:
        $ref: "#/components/schemas/hrefType"
      properties:
        startAuthorisation:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithPsuIdentification:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithEncryptedPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithAuthenticationMethodSelection:
          $ref: "#/components/schemas/hrefType"


    linksUpdatePsuIdentification:
      description: |
        A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the response depend on the 
        dynamical decisions of the ASPSP when processing the request.
        Remark: All links can be relative or full links, to be decided by the ASPSP.
        Type of links admitted in this response, (further links might be added for ASPSP defined extensions):
        * "scaStatus": The link to retrieve the scaStatus of the corresponding authorisation sub-resource.
        * "transactionFees": The link is to the status resource. This link is only added in case fee information is 
        available via the status resource. 
        * "selectAuthenticationMethod": This is a link to a resource, where the TPP can select the applicable second 
        factor authentication methods for the PSU, if there are several available authentication methods and if the PSU 
        is already sufficiently authenticated.. If this link is contained, then there is also the data element 
        "scaMethods" contained in the response body
      type: object
      properties:
        scaStatus:
          $ref: "#/components/schemas/hrefType"
        transactionFees:
          $ref: "#/components/schemas/hrefType"
        selectAuthenticationMethod:
          $ref: "#/components/schemas/hrefType"


    linksUpdatePsuAuthentication:
      description: |
        A list of hyperlinks to be recognised by the TPP. Might be contained, if several authentication methods are 
        available for the PSU.
        Type of links admitted in this response:
        * "updateAdditionalPsuAuthentication"
        The link to the payment initiation or account information resource, which needs to be updated by an additional 
        PSU password. This link is only contained in rare cases, where such additional passwords are needed for PSU 
        authentications.
        * "updateAdditionalEncryptedPsuAuthentication"
        The link to the payment initiation or account information resource, which needs to be updated by an additional 
        encrypted PSU password. This link is only contained in rare cases, where such additional passwords are needed 
        for PSU authentications.
        * "selectAuthenticationMethod": This is a link to a resource, where the TPP can select the applicable second 
        factor authentication methods for the PSU, if there were several available authentication methods. This link is 
        only contained, if the PSU is already identified or authenticated with the first relevant factor or 
        alternatively an access token, if SCA is required and if the PSU has a choice between different authentication 
        methods. If this link is contained, then there is also the data element "scaMethods" contained in the response 
        body
        * "authoriseTransaction": The link to the
        resource, where the "Transaction Authorisation Request" is sent to. This is the link to the resource which will 
        authorise the transaction by checking the SCA authentication data within the Embedded
        SCA approach.
        * "scaStatus": The link to retrieve the scaStatus of the corresponding authorisation sub-resource.
        * "transactionFees": The link is to the status resource. This link is only added in case fee information is 
        available via the status resource.
      type: object
      properties:
        updateAdditionalPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        updateAdditionalEncryptedPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        selectAuthenticationMethod:
          $ref: "#/components/schemas/hrefType"
        authoriseTransaction:
          $ref: "#/components/schemas/hrefType"
        scaStatus:
          $ref: "#/components/schemas/hrefType"
        transactionFees:
          $ref: "#/components/schemas/hrefType"


    linksSelectPsuAuthenticationMethod:
      description: |
        A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the response depend on the 
        dynamical decisions of the ASPSP when processing the request.
        Remark: All links can be relative or full links, to be decided by the ASPSP.
        Remark: This method can be applied before or after PSU identification. This leads to many possible hyperlink 
        responses.
        Type of links admitted in this response, (further links might be added for ASPSP defined extensions):
        * "scaRedirect": In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to redirect 
          the PSU browser.
        * "scaOAuth": In case of a SCA OAuth2 Approach, the ASPSP is transmitting the URI where the configuration of the
          Authorisation Server can be retrieved. The configuration follows the OAuth 2.0 Authorisation Server Metadata 
          specification.
        * "confirmation": Might be added by the ASPSP if either the "scaRedirect" or "scaOAuth" hyperlink is returned 
          in the same response message. This hyperlink defines the URL to the resource which needs to be updated with
          • a confirmation code as retrieved after the plain redirect authentication process with the ASPSP 
            authentication server or
          • an access token as retrieved by submitting an  code after the integrated OAuth based authentication process 
            with the ASPSP authentication server.
        * "updatePsuIdentification":
        The link to the authorisation or cancellation authorisation sub-resource, where PSU identification data needs 
        to be uploaded.
        * "updatePsuAuthentication":
        The link to the authorisation or cancellation authorisation sub-resource, where PSU authentication data needs 
        to be uploaded.
        * "updateEncryptedPsuAuthentication":
        The link to the authorisation or cancellation authorisation sub-resource, where encrypted PSU authentication 
        data needs to be uploaded.
        * "authoriseTransaction":
        The link to the authorisation or cancellation authorisation sub-resource, where the authorisation data has to be
        uploaded, e.g. the TOP received by SMS.
        * "scaStatus": The link to retrieve the scaStatus of the corresponding authorisation sub-resource.
        * "transactionFees": The link is to the status resource. This link is only added in case fee information is 
        available via the status resource.
      type: object
      properties:
        scaRedirect:
          $ref: "#/components/schemas/hrefType"
        scaOAuth:
          $ref: "#/components/schemas/hrefType"
        confirmation:
          $ref: "#/components/schemas/hrefType"
        updatePsuIdentification:
          $ref: "#/components/schemas/hrefType"
        updatePsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        updateEncryptedPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        authoriseTransaction:
          $ref: "#/components/schemas/hrefType"
        scaStatus:
          $ref: "#/components/schemas/hrefType"
        transactionFees:
          $ref: "#/components/schemas/hrefType"


    linksTransactionAuthorisation:
      description: |
        A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the response depend on the 
        dynamical decisions of the ASPSP when processing the request.
        Remark: All links can be relative or full links, to be decided by the ASPSP.
        * "transactionFees": The link is to the status resource. This link is only added in case fee information is 
        available via the status resource.
      type: object
      properties:
        transactionFees:
          $ref: "#/components/schemas/hrefType"


    linksStartScaProcess:
      description: |
        A list of hyperlinks to be recognised by the API Client. The actual hyperlinks used in the
        response depend on the dynamical decisions of the ASPSP when processing the request.

        **Remark:** All links can be relative or full links, to be decided by the ASPSP.

        Type of links admitted in this response, (further links might be added for ASPSP defined
        extensions):

        - 'scaRedirect':
          In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to
          redirect the PSU browser.
        - 'scaOAuth':
          In case of a SCA OAuth2 Approach, the ASPSP is transmitting the URI where the configuration of the 
          Authorisation Server can be retrieved. The configuration follows the OAuth 2.0 Authorisation Server 
          Metadata specification.
        - 'confirmation':
          Might be added by the ASPSP if either the "scaRedirect" or "scaOAuth" hyperlink is returned
          in the same response message.
          This hyperlink defines the URL to the resource which needs to be updated with
            * a confirmation code as retrieved after the plain redirect authentication process with the ASPSP 
            authentication server or
            * an access token as retrieved by submitting an  code after the integrated OAuth based authentication 
            process with the ASPSP authentication server.
        - 'updatePsuIdentification':
          The link to the authorisation or cancellation authorisation sub-resource,
          where PSU identification data needs to be uploaded.
        - 'udpatePsuAuthentication':
          The link to the authorisation or cancellation authorisation sub-resource, where PSU authentication data needs 
          to be uploaded.
        - 'udpateEncryptedPsuAuthentication':
          The link to the authorisation or cancellation authorisation sub-resource, where encrypted PSU authentication 
          data needs to be uploaded.
        - 'selectAuthenticationMethod':
          The link to the authorisation or cancellation authorisation sub-resource,
          where the selected authentication method needs to be uploaded.
          This link is contained under exactly the same conditions as the data element 'scaMethods'.
        - 'authoriseTransaction':
          The link to the authorisation or cancellation authorisation sub-resource,
          where the authorisation data has to be uploaded, e.g. the TOP received by SMS.
        - 'scaStatus':
          The link to retrieve the scaStatus of the corresponding authorisation sub-resource.
        - 'transactionFees':
          The link is to the status resource. This link is only added in case fee information is available via the 
          status resource.

      type: object
      additionalProperties:
        $ref: "#/components/schemas/hrefType"
      properties:
        scaRedirect:
          $ref: "#/components/schemas/hrefType"
        scaOAuth:
          $ref: "#/components/schemas/hrefType"
        confirmation:
          $ref: "#/components/schemas/hrefType"
        updatePsuIdentification:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithEncryptedPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        selectAuthenticationMethod:
          $ref: "#/components/schemas/hrefType"
        authoriseTransaction:
          $ref: "#/components/schemas/hrefType"
        scaStatus:
          $ref: "#/components/schemas/hrefType"


    linksDownload:
      description: |
        A list of hyperlinks to be recognised by the TPP.
        Type of links admitted in this response:
          - "download": a link to a resource, where the transaction report might be downloaded from in
          case where transaction reports have a huge size.

        Remark: This feature shall only be used where camt-data is requested which has a huge size.

      type: object
      additionalProperties:
        $ref: "#/components/schemas/hrefType"
      required:
        - download
      properties:
        download:
          $ref: "#/components/schemas/hrefType"


    linksConsents:
      description: |
        A list of hyperlinks to be recognised by the TPP.

        Type of links admitted in this response (which might be extended by single ASPSPs as indicated in its XS2A
        documentation):
          * 'scaRedirect':
            In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to redirect the
            PSU browser.
          * 'scaOAuth':
            In case of an OAuth2 based Redirect Approach, the ASPSP is transmitting the link where the configuration
            of the OAuth2 Server is defined.
            The configuration follows the OAuth 2.0 Authorisation Server Metadata specification.
        * 'confirmation':
          Might be added by the ASPSP if either the "scaRedirect" or "scaOAuth" hyperlink is returned
          in the same response message.
          This hyperlink defines the URL to the resource which needs to be updated with
            * a confirmation code as retrieved after the plain redirect authentication process with the ASPSP 
            authentication server or
            * an access token as retrieved by submitting an  code after the integrated OAuth based authentication 
            process with the ASPSP authentication server.
          * 'startAuthorisation':
            In case, where an explicit start of the transaction authorisation is needed,
            but no more data needs to be updated (no authentication method to be selected,
            no PSU identification nor PSU authentication data to be uploaded).
          * 'startAuthorisationWithPsuIdentification':
            The link to the authorisation end-point, where the authorisation sub-resource has to be generated
            while uploading the PSU identification data.
          * 'startAuthorisationWithPsuAuthentication':
            The link to the authorisation end-point, where the authorisation sub-resource has to be generated
            while uploading the PSU authentication data.
          * 'startAuthorisationWithEncryptedPsuAuthentication':
            Same as startAuthorisactionWithPsuAuthentication where the authentication data need to be encrypted on
            application layer in uploading.
          * 'startAuthorisationWithAuthenticationMethodSelection':
            The link to the authorisation end-point, where the authorisation sub-resource has to be generated
            while selecting the authentication method. This link is contained under exactly the same conditions
            as the data element 'scaMethods'
          * 'startAuthorisationWithTransactionAuthorisation':
            The link to the authorisation end-point, where the authorisation sub-resource has to be generated
            while authorising the transaction e.g. by uploading an OTP received by SMS.
          * 'self':
            The link to the Establish Account Information Consent resource created by this request.
            This link can be used to retrieve the resource data.
          * 'status':
            The link to retrieve the status of the account information consent.
          * 'scaStatus': The link to retrieve the scaStatus of the corresponding authorisation sub-resource.
            This link is only contained, if an authorisation sub-resource has been already created.

      type: object
      additionalProperties:
        $ref: "#/components/schemas/hrefType"
      properties:
        scaRedirect:
          $ref: "#/components/schemas/hrefType"
        scaOAuth:
          $ref: "#/components/schemas/hrefType"
        confirmation:
          $ref: "#/components/schemas/hrefType"
        startAuthorisation:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithPsuIdentification:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithEncryptedPsuAuthentication:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithAuthenticationMethodSelection:
          $ref: "#/components/schemas/hrefType"
        startAuthorisationWithTransactionAuthorisation:
          $ref: "#/components/schemas/hrefType"
        self:
          $ref: "#/components/schemas/hrefType"
        status:
          $ref: "#/components/schemas/hrefType"
        scaStatus:
          $ref: "#/components/schemas/hrefType"


    linksGetConsent:
      description: |
        A list of hyperlinks to be recognised by the TPP.
        Links of type "account" and/or "cardAccount", depending on the nature of the consent.
      type: object
      additionalProperties:
        $ref: "#/components/schemas/hrefType"
      properties:
        account:
          $ref: "#/components/schemas/hrefType"
        card-account:
          $ref: "#/components/schemas/hrefType"


    linksAccountReport:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/hrefType"
      required:
        - account
      properties:
        account:
          $ref: "#/components/schemas/hrefType"
        first:
          $ref: "#/components/schemas/hrefType"
        next:
          $ref: "#/components/schemas/hrefType"
        previous:
          $ref: "#/components/schemas/hrefType"
        last:
          $ref: "#/components/schemas/hrefType"


    linksTransactionDetails:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/hrefType"
      required:
        - transactionDetails
      properties:
        transactionDetails:
          $ref: "#/components/schemas/hrefType"


    linksAccountDetails:
      description: |
        Links to the account, which can be directly used for retrieving account information from this dedicated account.
        Links to "balances" and/or "transactions"
        These links are only supported, when the corresponding consent has been already granted.
      type: object
      additionalProperties:
        $ref: "#/components/schemas/hrefType"
      properties:
        balances:
          $ref: "#/components/schemas/hrefType"
        transactions:
          $ref: "#/components/schemas/hrefType"


    linksAuthorisationConfirmation:
      description: |
        A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the response depend on the 
        dynamical decisions of the ASPSP when processing the request.

        **Remark:** All links can be relative or full links, to be decided by the ASPSP.

        Type of links admitted in this response, (further links might be added for ASPSP
        defined extensions):
        - 'scaStatus': The link to retrieve the status of the corresponding transaction resource.
      type: object
      additionalProperties:
        $ref: "#/components/schemas/hrefType"
      properties:
        scaStatus:
          $ref: "#/components/schemas/hrefType"


######################################################
## Tpp-Messages to Communicate Error Information
######################################################
#
#
  #####################################################
  # Generic Elements
  #####################################################

    clientMessageInformation:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/messageCode"
        path:
          description: |
            Path of the element of the request message which provoked the error message, if applicable
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"


    clientMessageCategory:
      description: Only "ERROR" or "WARNING" permitted.
      type: string
      enum:
        - "ERROR"
        - "WARNING"


    clientMessageText:
      description: Additional explaining text.
      type: string
      maxLength: 500


    messageCode:
      description: Code of the TPP message category.
      type: string
      #Currently, no restriction to enums is defined


    MessageCode200InitiationStatus:
      description: Message codes for HTTP codes 200 to a Payment Initiation Status Request.
      type: string
      enum:
        - "FUNDS_NOT_AVAILABLE"


    MessageCode201PaymentInitiation:
      description: Message codes for HTTP Codes 201 to a Payment Initiation Request.
      type: string
      enum:
        - "WARNING"
        - "BENEFICIARY_WHITELISTING_REQUIRED"


    MessageCode400_AIS:
      description: Message codes defined for AIS for HTTP Error code 400 (BAD_REQUEST).
      type: string
      enum:
        - "FORMAT_ERROR"                       #gen
        - "PARAMETER_NOT_CONSISTENT"           #gen
        - "PARAMETER_NOT_SUPPORTED"            #gen
        - "SERVICE_INVALID"                    #gen
        - "CONSENT_UNKNOWN"                    #gen
        - "RESOURCE_UNKNOWN"                   #gen
        - "RESOURCE_EXPIRED"                   #gen
        - "RESOURCE_BLOCKED"                   #gen
        - "TIMESTAMP_INVALID"                  #gen
        - "PERIOD_INVALID"                     #gen
        - "SCA_METHOD_UNKNOWN"                 #gen
        - "SCA_INVALID"                        #gen
        - "CONSENT_TYPE_NOT_SUPPORTED"    #AIS
        - "SESSIONS_NOT_SUPPORTED"             #AIS



    MessageCode400_PIS:
      description: Message codes defined for PIS for HTTP Error code 400 (BAD_REQUEST).
      type: string
      enum:
        - "FORMAT_ERROR"              #gen
        - "PARAMETER_NOT_CONSISTENT"  #gen
        - "PARAMETER_NOT_SUPPORTED"   #gen
        - "SERVICE_INVALID"           #gen
        - "CONSENT_UNKNOWN"           #gen
        - "RESOURCE_UNKNOWN"          #gen
        - "RESOURCE_EXPIRED"          #gen
        - "RESOURCE_BLOCKED"          #gen
        - "TIMESTAMP_INVALID"         #gen
        - "PERIOD_INVALID"            #gen
        - "SCA_METHOD_UNKNOWN"        #gen
        - "SCA_INVALID"               #gen
        - "PAYMENT_FAILED"            #PIS
        - "EXECUTION_DATE_INVALID"    #PIS


    MessageCode400_PIIS:
      description: Message codes defined for PIIS for HTTP Error code 400 (BAD_REQUEST).
      type: string
      enum:
        - "FORMAT_ERROR"              #gen
        - "PARAMETER_NOT_CONSISTENT"  #gen
        - "PARAMETER_NOT_SUPPORTED"   #gen
        - "SERVICE_INVALID"           #gen
        - "CONSENT_UNKNOWN"           #gen
        - "RESOURCE_UNKNOWN"          #gen
        - "RESOURCE_EXPIRED"          #gen
        - "RESOURCE_BLOCKED"          #gen
        - "TIMESTAMP_INVALID"         #gen
        - "PERIOD_INVALID"            #gen
        - "SCA_METHOD_UNKNOWN"        #gen
        - "SCA_INVALID"               #gen
        - "CARD_INVALID"              #PIIS
        - "NO_PIIS_ACTIVATION"        #PIIS


    MessageCode401_PIS:
      description: Message codes defined for PIS for HTTP Error code 401 (UNAUTHORIZED).
      type: string
      enum:
        - "CERTIFICATE_INVALID"       #gen
        - "ROLE_INVALID"              #gen
        - "CERTIFICATE_EXPIRED"       #gen
        - "CERTIFICATE_BLOCKED"       #gen
        - "CERTIFICATE_REVOKED"       #gen
        - "CERTIFICATE_MISSING"       #gen
        - "SIGNATURE_INVALID"         #gen
        - "SIGNATURE_MISSING"         #gen
        - "PSU_CREDENTIALS_INVALID"   #gen
        - "CORPORATE_ID_INVALID"      #gen
        - "CONSENT_INVALID"           #gen
        - "CONSENT_EXPIRED"           #gen
        - "TOKEN_UNKNOWN"             #gen
        - "TOKEN_INVALID"             #gen
        - "TOKEN_EXPIRED"             #gen
        - "KID_MISSING"               #PIS


    MessageCode401_AIS:
      description: Message codes defined for AIS for HTTP Error code 401 (UNAUTHORIZED).
      type: string
      enum:
        - "CERTIFICATE_INVALID"       #gen
        - "ROLE_INVALID"              #gen
        - "CERTIFICATE_EXPIRED"       #gen
        - "CERTIFICATE_BLOCKED"       #gen
        - "CERTIFICATE_REVOKED"       #gen
        - "CERTIFICATE_MISSING"       #gen
        - "SIGNATURE_INVALID"         #gen
        - "SIGNATURE_MISSING"         #gen
        - "PSU_CREDENTIALS_INVALID"   #gen
        - "CORPORATE_ID_INVALID"      #gen
        - "CONSENT_INVALID"           #gen, AIS
        - "CONSENT_EXPIRED"           #gen
        - "TOKEN_UNKNOWN"             #gen
        - "TOKEN_INVALID"             #gen
        - "TOKEN_EXPIRED"             #gen


    MessageCode401_PIIS:
      description: Message codes defined for PIIS for HTTP Error code 401 (UNAUTHORIZED).
      type: string
      enum:
        - "CERTIFICATE_INVALID"       #gen
        - "ROLE_INVALID"              #gen
        - "CERTIFICATE_EXPIRED"       #gen
        - "CERTIFICATE_BLOCKED"       #gen
        - "CERTIFICATE_REVOKED"       #gen
        - "CERTIFICATE_MISSING"       #gen
        - "SIGNATURE_INVALID"         #gen
        - "SIGNATURE_MISSING"         #gen
        - "PSU_CREDENTIALS_INVALID"   #gen
        - "CORPORATE_ID_INVALID"      #gen
        - "CONSENT_INVALID"           #gen
        - "CONSENT_EXPIRED"           #gen
        - "TOKEN_UNKNOWN"             #gen
        - "TOKEN_INVALID"             #gen
        - "TOKEN_EXPIRED"             #gen


    MessageCode403_PIS:
      description: Message codes defined defined for PIS for PIS for HTTP Error code 403 (FORBIDDEN).
      type: string
      enum:
        - "SERVICE_BLOCKED"           #gen
        - "CONSENT_UNKNOWN"           #gen
        - "RESOURCE_UNKNOWN"          #gen
        - "RESOURCE_EXPIRED"          #gen
        - "PRODUCT_INVALID"           #PIS

    MessageCode403_AIS:
      description: Message codes defined for AIS for HTTP Error code 403 (FORBIDDEN).
      type: string
      enum:
        - "SERVICE_BLOCKED"           #gen
        - "CONSENT_UNKNOWN"           #gen
        - "RESOURCE_UNKNOWN"          #gen
        - "RESOURCE_EXPIRED"          #gen


    MessageCode403_PIIS:
      description: Message codes defined for PIIS for HTTP Error code 403 (FORBIDDEN).
      type: string
      enum:
        - "SERVICE_BLOCKED"           #gen
        - "CONSENT_UNKNOWN"           #gen
        - "RESOURCE_UNKNOWN"          #gen
        - "RESOURCE_EXPIRED"          #gen


    MessageCode404_PIS:
      description: Message codes defined for PIS for HTTP Error code 404 (NOT FOUND).
      type: string
      enum:
        - "RESOURCE_UNKNOWN"          #gens
        - "PRODUCT_UNKNOWN"           #PIS


    MessageCode404_AIS:
      description: Message codes defined for AIS for HTTP Error code 404 (NOT FOUND).
      type: string
      enum:
        - "RESOURCE_UNKNOWN"          #gens


    MessageCode404_PIIS:
      description: Message codes defined for PIIS for HTTP Error code 404 (NOT FOUND).
      type: string
      enum:
        - "RESOURCE_UNKNOWN"          #gens


    MessageCode405_PIS:
      description: Message codes defined for payment cancellations PIS for HTTP Error code 405 (METHOD NOT ALLOWED).
      type: string
      enum:
        - "SERVICE_INVALID"           #gens


    MessageCode405_PIS_CANC:
      description: Message codes defined for payment cancellations PIS for HTTP Error code 405 (METHOD NOT ALLOWED).
      type: string
      enum:
        - "SERVICE_INVALID"           #gens
        - "CANCELLATION_INVALID"      #PIS


    MessageCode405_AIS:
      description: Message codes defined for AIS for HTTP Error code 405 (METHOD NOT ALLOWED).
      type: string
      enum:
        - "SERVICE_INVALID"           #gens


    MessageCode405_PIIS:
      description: Message codes defined for PIIS for HTTP Error code 405 (METHOD NOT ALLOWED).
      type: string
      enum:
        - "SERVICE_INVALID"           #gens


    MessageCode406_AIS:
      description: Message codes defined for AIS for HTTP Error code 406 (NOT ACCEPTABLE).
      type: string
      enum:
        - "REQUESTED_FORMATS_INVALID"  #AIS


    MessageCode409_AIS:
      description: Message codes defined for AIS for HTTP Error code 409 (CONFLICT).
      type: string
      enum:
        - "STATUS_INVALID"            #gen


    MessageCode409_PIS:
      description: Message codes defined for PIS for HTTP Error code 409 (CONFLICT).
      type: string
      enum:
        - "STATUS_INVALID"            #gen


    MessageCode409_PIIS:
      description: Message codes defined for PIIS for HTTP Error code 409 (CONFLICT).
      type: string
      enum:
        - "STATUS_INVALID"            #gen


    MessageCode429_AIS:
      description: Message codes for HTTP Error code 429 (TOO MANY REQUESTS).
      type: string
      enum:
        - "ACCESS_EXCEEDED"           #AIS


  #####################################################
  # Next Gen proprietary TPP-messages
  #####################################################

    clientMessageInitiationStatusResponse-200:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode200InitiationStatus"
        path:
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"


    clientMessage201PaymentInitiation:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode201PaymentInitiation"
        path:
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"


    clientMessage400_AIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode400_AIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"


    clientMessage400_PIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode400_PIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"


    clientMessage400_PIIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode400_PIIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"


    clientMessage401_PIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode401_PIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"

    
    clientMessage401_AIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode401_AIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"


    clientMessage401_PIIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode401_PIIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"


    clientMessage403_PIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode403_PIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"


    clientMessage403_AIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode403_AIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"


    clientMessage403_PIIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode403_PIIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"


    clientMessage404_PIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode404_PIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"


    clientMessage404_AIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode404_AIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"


    clientMessage404_PIIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode404_PIIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"


    clientMessage405_PIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode405_PIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"


    clientMessage405_PIS_CANC:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode405_PIS_CANC"
        path:
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"


    clientMessage405_AIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode405_AIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"


    clientMessage405_PIIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode405_PIIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"


    clientMessage409_PIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode409_PIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"


    clientMessage406_AIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode406_AIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"


    clientMessage409_AIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode409_AIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"


    clientMessage409_PIIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode409_PIIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"


    clientMessage429_AIS:
      type: object
      required:
        - category
        - code
      properties:
        category:
          $ref: "#/components/schemas/clientMessageCategory"
        code:
          $ref: "#/components/schemas/MessageCode429_AIS"
        path:
          type: string
        text:
          $ref: "#/components/schemas/clientMessageText"


  #####################################################
  # RFC7807 Messages
  #####################################################

    clientErrorTitle:
      description: |
        Short human-readable description of error type.
        Could be in local language.
        To be provided by ASPSPs.
      type: string
      maxLength: 70


    clientErrorDetail:
      description: |
        Detailed human-readable text specific to this instance of the error.
        XPath might be used to point to the issue generating the error in addition.
        Remark for Future: In the future, a dedicated field might be introduced for the XPath.
      type: string
      maxLength: 500


    errorInformation:
      description: |
        This is a data element to support the declaration of additional errors in the context of [RFC7807].
      type: object
      required:
        - code
      properties:
        title:
          $ref: "#/components/schemas/clientErrorTitle"
        detail:
          $ref: "#/components/schemas/clientErrorDetail"
        code:
          $ref: "#/components/schemas/messageCode"


    Error400_PIS:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 400 for PIS.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human-readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human-readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In the future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode400_PIS"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context 
              of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/clientErrorTitle"
              detail:
                $ref: "#/components/schemas/clientErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode400_PIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error400_AIS:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 400 for AIS.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human-readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human-readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In the future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode400_AIS"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context
              of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/clientErrorTitle"
              detail:
                $ref: "#/components/schemas/clientErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode400_AIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error400_PIIS:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 400 for PIIS.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human-readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human-readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In the future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode400_PIIS"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context 
              of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/clientErrorTitle"
              detail:
                $ref: "#/components/schemas/clientErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode400_PIIS"
        _links:
          $ref: "#/components/schemas/linksAll"



    Error401_PIS:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 401 for PIS.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human-readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human-readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In the future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode401_PIS"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context
              of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/clientErrorTitle"
              detail:
                $ref: "#/components/schemas/clientErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode401_PIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error401_AIS:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 401 for AIS.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human-readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human-readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In the future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode401_AIS"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context
              of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/clientErrorTitle"
              detail:
                $ref: "#/components/schemas/clientErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode401_AIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error401_PIIS:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 401 for PIIS.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human-readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human-readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In the future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode401_PIS"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context
              of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/clientErrorTitle"
              detail:
                $ref: "#/components/schemas/clientErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode401_PIIS"
        _links:
          $ref: "#/components/schemas/linksAll"



    Error403_PIS:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 403 for PIS.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human-readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human-readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In the future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode403_PIS"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context
              of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/clientErrorTitle"
              detail:
                $ref: "#/components/schemas/clientErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode403_PIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error403_AIS:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 403 for AIS.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human-readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human-readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In the future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode403_AIS"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context
              of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/clientErrorTitle"
              detail:
                $ref: "#/components/schemas/clientErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode403_AIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error403_PIIS:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 403 for PIIS.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human-readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human-readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In the future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode403_PIIS"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context
              of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/clientErrorTitle"
              detail:
                $ref: "#/components/schemas/clientErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode403_PIIS"
        _links:
          $ref: "#/components/schemas/linksAll"



    Error404_PIS:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 404 for PIS.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human-readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human-readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In the future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode404_PIS"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context
              of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/clientErrorTitle"
              detail:
                $ref: "#/components/schemas/clientErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode404_PIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error404_AIS:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 404 for AIS.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human-readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human-readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In the future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode404_AIS"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context
              of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/clientErrorTitle"
              detail:
                $ref: "#/components/schemas/clientErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode404_AIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error404_PIIS:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 404 for PIIS.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human-readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human-readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In the future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode404_PIIS"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context
              of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/clientErrorTitle"
              detail:
                $ref: "#/components/schemas/clientErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode404_PIIS"
        _links:
          $ref: "#/components/schemas/linksAll"



    Error405_PIS:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 405 for PIS.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human-readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human-readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In the future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode405_PIS"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context
              of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/clientErrorTitle"
              detail:
                $ref: "#/components/schemas/clientErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode405_PIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error405_PIS_CANC:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 405 for a payment cancelation (PIS).
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human-readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human-readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In the future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode405_PIS_CANC"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context
              of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/clientErrorTitle"
              detail:
                $ref: "#/components/schemas/clientErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode405_PIS_CANC"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error405_AIS:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 405 for AIS.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human-readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human-readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In the future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode405_AIS"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context
              of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/clientErrorTitle"
              detail:
                $ref: "#/components/schemas/clientErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode405_AIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error405_PIIS:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 405 for PIIS.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human-readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human-readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In the future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode405_PIIS"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context
              of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/clientErrorTitle"
              detail:
                $ref: "#/components/schemas/clientErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode405_PIIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error406_AIS:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 406 for AIS.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human-readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human-readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In the future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode406_AIS"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context
              of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/clientErrorTitle"
              detail:
                $ref: "#/components/schemas/clientErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode406_AIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error409_PIS:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 409 for PIS.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human-readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human-readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In the future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode409_PIS"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context
              of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/clientErrorTitle"
              detail:
                $ref: "#/components/schemas/clientErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode409_PIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error409_AIS:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 409 for AIS.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human-readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human-readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In the future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode409_AIS"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context
              of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/clientErrorTitle"
              detail:
                $ref: "#/components/schemas/clientErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode409_AIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error409_PIIS:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 409 for PIIS.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human-readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human-readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In the future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode409_PIIS"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: This is a data element to support the declaration of additional errors in the context
              of [RFC7807].
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/clientErrorTitle"
              detail:
                $ref: "#/components/schemas/clientErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode409_PIIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error429_AIS:
      description: |
        Standardised definition of reporting error information according to [RFC7807]
        in case of a HTTP error code 429 for AIS.
      type: object
      required:
        - type
        - code
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type.
            Remark For Future: These URI will be provided by NextGenPSD2 in future.
          type: string
          format: uri
          maxLength: 70
        title:
          description: |
            Short human-readable description of error type.
            Could be in local language.
            To be provided by ASPSPs.
          type: string
          maxLength: 70
        detail:
          description: |
            Detailed human-readable text specific to this instance of the error.
            XPath might be used to point to the issue generating the error in addition.
            Remark for Future: In the future, a dedicated field might be introduced for the XPath.
          type: string
          maxLength: 500
        code:
          $ref: "#/components/schemas/MessageCode429_AIS"
        additionalErrors:
          description: |
            Array of Error Information Blocks.

            Might be used if more than one error is to be communicated
          type: array
          items: #ErrorInformation
            description: |
              This is a data element to support the declaration of additional errors in the context of [RFC7807]
              in case of a HTTP error code 429 for.
            type: object
            required:
              - code
            properties:
              title:
                $ref: "#/components/schemas/clientErrorTitle"
              detail:
                $ref: "#/components/schemas/clientErrorDetail"
              code:
                $ref: "#/components/schemas/MessageCode429_AIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error400_NG_PIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 400.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessage400_PIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error400_NG_AIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 400.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessage400_AIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error400_NG_PIIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 400.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessage400_PIIS"
        _links:
          $ref: "#/components/schemas/linksAll"



    Error401_NG_PIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessage401_PIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error401_NG_AIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessage401_AIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error401_NG_PIIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessage401_PIIS"
        _links:
          $ref: "#/components/schemas/linksAll"



    Error403_NG_PIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 403.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessage403_PIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error403_NG_AIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 403.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessage403_AIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error403_NG_PIIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 403.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessage403_PIIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error404_NG_PIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 404.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessage404_PIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error404_NG_AIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 404.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessage404_AIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error404_NG_PIIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 404.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessage404_PIIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error405_NG_PIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessage405_PIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error405_NG_PIS_CANC:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessage405_PIS_CANC"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error405_NG_AIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessage405_AIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error405_NG_PIIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessage405_PIIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error406_NG_AIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 406.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessage406_AIS"
        _links:
          $ref: "#/components/schemas/linksAll"


    Error409_NG_PIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 409.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessage409_PIS"
        _links:
          $ref: "#/components/schemas/linksAll"
      example:
        [{
          "category": "ERROR",
          "code": "STATUS_INVALID",
          "text": "additional text information of the ASPSP up to 500 characters"
        }]


    Error409_NG_AIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 409.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessage409_AIS"
        _links:
          $ref: "#/components/schemas/linksAll"
      example:
        [{
          "category": "ERROR",
          "code": "STATUS_INVALID",
          "text": "additional text information of the ASPSP up to 500 characters"
        }]


    Error409_NG_PIIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 409.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessage409_PIIS"
        _links:
          $ref: "#/components/schemas/linksAll"
      example:
        [{
          "category": "ERROR",
          "code": "STATUS_INVALID",
          "text": "additional text information of the ASPSP up to 500 characters"
        }]


    Error429_NG_AIS:
      description: |
        NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 429.
      type: object
      properties:
        tppMessages:
          type: array
          items:
            $ref: "#/components/schemas/clientMessage429_AIS"
        _links:
          $ref: "#/components/schemas/linksAll"
      example:
        [{
          "category": "ERROR",
          "code": "ACCESS_EXCEEDED",
          "text": "additional text information of the ASPSP up to 500 characters"
        }]


  parameters:
  #####################################################
  # Request headers
  #####################################################

    consentId_HEADER_optional:
      name: Consent-ID
      in: header
      description: |
        This data element may be contained, if the payment initiation transaction is part of a session, i.e. combined
        AIS/PIS service. This then contains the consentId of the related AIS consent, which was performed prior to 
        this payment initiation.
      required: false
      schema:
        $ref: "#/components/schemas/consentId"


    consentId_HEADER_mandatory:
      name: Consent-ID
      in: header
      description: |
        This then contains the consentId of the related AIS consent, which was performed prior to this 
        payment initiation.
      required: true
      schema:
        $ref: "#/components/schemas/consentId"


    X-Request-ID:
      name: X-Request-ID
      in: header
      description: ID of the request, unique to the call, as determined by the initiating party.
      required: true
      example: "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
      schema:
        type: string
        format: uuid


    Digest:
      name: Digest
      in: header
      description: Is contained if and only if the "Signature" element is contained in the header of the request.
      schema:
        type: string
      required: false # conditional
      example: "SHA-256=hl1/Eps8BEQW58FJhDApwJXjGY4nr1ArGDHIT25vq6A="


    Signature:
      name: x-jws-signature
      in: header
      description: |
        A signature of the request by the TPP on application level. This might be mandated by ASPSP.
      schema:
        type: string
      required: false # conditional
      example: >
        keyId="SN=9FA1,CA=CN=D-TRUST%20CA%202-1%202015,O=D-Trust%20GmbH,C=DE",algorithm="rsa-sha256",
        headers="Digest X-Request-ID PSU-ID TPP-Redirect-URI Date",
        signature="Base64(RSA-SHA256(signing string))"


    Client-Signature-Certificate:
      name: Client-Signature-Certificate
      in: header
      description: |
        The certificate used for signing the request, in base64 encoding.
        Must be contained if a signature is contained.
      schema:
        type: string
        format: byte
      required: false # conditional


    TPP-SCA-Approach-Preference:
      name: TPP-SCA-Approach-Preference
      in: header
      description: |
        A comma separated list of attributes, where the first entry will have a higher priority than the next or
        to every SCA Approach which is not indicated at all, e.g.
        "decoupled, redirect, embedded"
        or
        "decoupled".
        
        This attribute may be ignored by the ASPSP.
      schema:
        type: string
      required: false


    TPP-Redirect-URI:
      name: TPP-Redirect-URI
      in: header
      description: |
        URI of the TPP, where the transaction flow shall be redirected to after a Redirect.
        
        Mandated for the Redirect SCA Approach, specifically
        when TPP-Redirect-Preferred equals "true".
        It is recommended to always use this header field.
        
        **Remark for Future:**
        This field might be changed to mandatory in the next version of the specification.
      schema:
        type: string
        format: uri
      required: false # conditional


    TPP-Nok-Redirect-URI:
      name: TPP-Nok-Redirect-URI
      in: header
      description: |
        If this URI is contained, the TPP is asking to redirect the transaction flow to this address instead of the 
        TPP-Redirect-URI in case of a negative result of the redirect SCA method. This might be ignored by the ASPSP.
      schema:
        type: string
        format: uri
      required: false


    TPP-Explicit-Authorisation-Preferred:
      name: TPP-Explicit-Authorisation-Preferred
      in: header
      description: |
        If it equals "true", the TPP prefers to start the authorisation process separately,
        e.g. because of the usage of a signing basket.
        This preference might be ignored by the ASPSP, if a signing basket is not supported as functionality.
        
        If it equals "false" or if the parameter is not used, there is no preference of the TPP.
        This especially indicates that the TPP assumes a direct authorisation of the transaction in the next step,
        without using a signing basket.
      schema:
        type: boolean
      required: false


    TPP-Rejection-NoFunds-Preferred:
      name: TPP-Rejection-NoFunds-Preferred
      in: header
      description: |
        If it equals "true" then the TPP prefers a rejection of the payment initiation in case the ASPSP is
        providing an integrated confirmation of funds request an the result of this is that not sufficient
        funds are available.

        If it equals "false" then the TPP prefers that the ASPSP is dealing with the payment initiation like
        in the ASPSPs online channel, potentially waiting for a certain time period for funds to arrive to initiate 
        the payment. This parameter might be ignored by the ASPSP.
      schema:
        type: boolean
      required: false


    Client-Notification-URI:
      name: Client-Notification-URI
      in: header
      description: |
        URI for the Endpoint of the TPP-API to which the status of the payment initiation should be sent.
        This header field may by ignored by the ASPSP.
        For security reasons, it shall be ensured that the TPP-Notification-URI as introduced above is secured by the 
        TPP eIDAS QWAC used for identification of the TPP. The following applies:
        URIs which are provided by TPPs in TPP-Notification-URI shall comply with the domain secured by the 
        eIDAS QWAC certificate of the TPP in the field CN or SubjectAltName of the certificate. Please note that in 
        case of example-TPP.com as certificate entry TPP- Notification-URI like 
        www.example-TPP.com/xs2a-client/v2/ASPSPidentifcation/mytransaction-id/notifications or 
        notifications.example-TPP.com/xs2a-client/v2/ASPSPidentifcation/mytransaction-id/notifications 
        would be compliant.
        Wildcard definitions shall be taken into account for compliance checks by the ASPSP.
         ASPSPs may respond with ASPSP-Notification-Support set to false, if the provided URIs do not comply.
      schema:
        type: string
      required: false


    Client-Notification-Content-Preferred:
      name: Client-Notification-Content-Preferred
      in: header
      description: |
        The string has the form
        
        status=X1, ..., Xn
        
        where Xi is one of the constants SCA, PROCESS, LAST and where constants are not
        repeated.
        The usage of the constants supports the of following semantics:
        
          * SCA: A notification on every change of the scaStatus attribute for all related authorisation processes is 
          preferred by the TPP.
          * PROCESS: A notification on all changes of consentStatus or transactionStatus attributes is preferred by 
          the TPP.
          * LAST: Only a notification on the last consentStatus or transactionStatus as available in the XS2A interface 
          is preferred by the TPP.
        
        This header field may be ignored, if the ASPSP does not support resource notification services for the related 
        TPP.
      schema:
        type: string
      required: false


    PSU-ID:
      name: PSU-ID
      in: header
      description: |
        Client ID of the PSU in the ASPSP client interface.
        Might be mandated in the ASPSP's documentation.
        It might be contained even if an OAuth2 based authentication was performed in a pre-step or an OAuth2 based SCA 
        was performed in an preceding AIS service in the same session.
        In this case the ASPSP might check whether PSU-ID and token match, according to ASPSP documentation.
      schema:
        type: string
      required: false
      example: "PSU-1234"


    PSU-ID-Type:
      name: PSU-ID-Type
      in: header
      description: |
        Type of the PSU-ID, needed in scenarios where PSUs have several PSU-IDs as access possibility.
        In this case, the mean and use are then defined in the ASPSP’s documentation.
      schema:
        type: string
      required: false


    PSU-Corporate-ID:
      name: PSU-Corporate-ID
      in: header
      description: |
        Might be mandated in the ASPSP's documentation. Only used in a corporate context.
      schema:
        type: string
      required: false


    PSU-Corporate-ID-Type:
      name: PSU-Corporate-ID-Type
      in: header
      description: |
        Might be mandated in the ASPSP's documentation. Only used in a corporate context.
      schema:
        type: string
      required: false


    PSU-IP-Address_mandatory:
      name: PSU-IP-Address
      in: header
      description: |
        The forwarded IP Address header field consists of the corresponding http request IP Address field between 
        PSU and TPP. If not available, the TPP shall use the IP Address used by the TPP when submitting this request.
      schema:
        type: string
        format: ipv4
      required: true
      example: 192.168.8.78


    PSU-IP-Address_optional:
      name: PSU-IP-Address
      in: header
      description: |
        The forwarded IP Address header field consists of the corresponding http request IP Address field between 
        PSU and TPP.
      schema:
        type: string
        format: ipv4
      required: false
      example: 192.168.8.78


    PSU-IP-Address_conditionalForAis:
      name: PSU-IP-Address
      in: header
      description: |
        The forwarded IP Address header field consists of the corresponding HTTP request
        IP Address field between PSU and TPP.
        It shall be contained if and only if this request was actively initiated by the PSU.
      schema:
        type: string
        format: ipv4
      required: false
      example: 192.168.8.78


    PSU-IP-Port:
      name: PSU-IP-Port
      in: header
      description: |
        The forwarded IP Port header field consists of the corresponding HTTP request IP Port field between PSU and TPP,
        if available.
      schema:
        type: string
      required: false
      example: "1234"


    PSU-Accept:
      name: PSU-Accept
      in: header
      description: |
        The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between 
        PSU and TPP, if available.
      schema:
        type: string
      required: false


    PSU-Accept-Charset:
      name: PSU-Accept-Charset
      in: header
      description: |
        The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between 
        PSU and TPP, if available.
      schema:
        type: string
      required: false


    PSU-Accept-Encoding:
      name: PSU-Accept-Encoding
      in: header
      description: |
        The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between 
        PSU and TPP, if available.
      schema:
        type: string
      required: false


    PSU-Accept-Language:
      name: PSU-Accept-Language
      in: header
      description: |
        The forwarded IP Accept header fields consist of the corresponding HTTP request Accept header fields between 
        PSU and TPP, if available.
      schema:
        type: string
      required: false


    PSU-User-Agent:
      name: PSU-User-Agent
      in: header
      description: |
        The forwarded Agent header field of the HTTP request between PSU and TPP, if available.
      schema:
        type: string
      required: false


    PSU-Http-Method:
      name: PSU-Http-Method
      in: header
      description: |
        HTTP method used at the PSU ? TPP interface, if available.
        Valid values are:
        * GET
        * POST
        * PUT
        * PATCH
        * DELETE
      schema:
        type: string
        enum:
          - "GET"
          - "POST"
          - "PUT"
          - "PATCH"
          - "DELETE"
      required: false


    PSU-Device-ID:
      name: PSU-Device-ID
      in: header
      description: |
        UUID (Universally Unique Identifier) for a device, which is used by the PSU, if available.
        UUID identifies either a device or a device dependant application installation.
        In case of an installation identification this ID needs to be unaltered until removal from device.
      schema:
        type: string
        format: uuid
      required: false
      example: "99435c7e-ad88-49ec-a2ad-99ddcb1f5555"

    PSU-Geo-Location:
      name: PSU-Geo-Location
      in: header
      description: |
        The forwarded Geo Location of the corresponding http request between PSU and TPP if available.
      schema:
        type: string
        pattern: 'GEO:-?[0-9]{1,2}\.[0-9]{6};-?[0-9]{1,3}\.[0-9]{6}'
      required: false
      example: GEO:52.506931;13.144558

    Client-Brand-Logging-Information:
      name: Client-Brand-Logging-Information
      in: header
      description: |
        This header might be used by API Clients to inform the ASPSP about the brand used by the API Client towards 
        the PSU. This information is meant for logging entries to enhance communication between ASPSP and PSU or ASPSP 
        and API Client. The ASPSP might ignore this field.
      schema:
        type: string
      required: false


    #####################################################
  # Path Parameters
  #####################################################

    consentCategory:
      name: consent-category
      in: path
      description: |
        Consent category:
        - account-access: consent for AIS access to addressed accounts (Service Type CONS-AIS).
        - user-parameters-access: consent for user data access for addressed accounts (Service Type CONS-USP).
        - document-services: explicit consent to submit RTPs (service type CONS-RTP).
        Possible values are:
          * account-access
          * user-parameters-access
          * rtps
      required: true
      schema:
        type: string
        enum:
          - "account-access"
          - "user-parameters-access"
          - "document-services"


    paymentService:
      name: payment-service
      in: path
      description: |
        Payment service.
        Possible values are:
        * payments
        * bulk-payments
        * periodic-payments
      required: true
      schema:
        type: string
        enum:
          - "payments"
          - "bulk-payments"
          - "periodic-payments"


    paymentProduct:
      name: payment-product
      in: path
      description: |
        The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).
        The default list of products supported in this standard is:
          - sepa-credit-transfers
          - instant-sepa-credit-transfers
          - target-2-payments
          - cross-border-credit-transfers
        The ASPSP will publish which of the payment products/endpoints will be supported.
      required: true
      schema:
        type: string
        enum:
          - "sepa-credit-transfers"
          - "instant-sepa-credit-transfers"
          - "target-2-payments"
          - "cross-border-credit-transfers"


    paymentId:
      name: paymentId
      in: path
      description: Resource identification of the generated payment initiation resource.
      required: true
      schema:
        $ref: "#/components/schemas/paymentId"


    authorisationId:
      name: authorisationId
      in: path
      description: Resource identification of the related SCA.
      required: true
      schema:
        $ref: "#/components/schemas/authorisationId"


    accountId:
      name: account-id
      in: path
      description: |
        This identification is denoting the addressed (card) account.
        The account-id is retrieved by using a "Read Account List" or "Read Card Account list" call.
        The account-id is the "resourceId" attribute of the account structure.
        Its value is constant at least throughout the lifecycle of a given consent.
      required: true
      schema:
        $ref: "#/components/schemas/accountId"


    transactionId:
      name: transactionId
      in: path
      description: |
        This identification is given by the attribute transactionId of the corresponding entry of a transaction list.
      required: true
      schema:
        $ref: "#/components/schemas/transactionId"


    consentId_PATH:
      name: consentId
      in: path
      description: |
        ID of the corresponding consent object as returned by an account information consent request.
      required: true
      schema:
        $ref: "#/components/schemas/consentId"


  #####################################################
  # Query Parameters
  #####################################################

    withBalanceQuery:
      name: withBalance
      in: query
      description: |
        If contained, this function reads the list of accessible payment accounts including the booking balance,
        if granted by the PSU in the related consent and available by the ASPSP.
        This parameter might be ignored by the ASPSP.
      required: false
      schema:
        type: boolean


    dateFrom:
      name: dateFrom
      in: query
      description: |
        Conditional: Starting date (inclusive the date dateFrom) of the transaction list, mandated if no delta access 
        is required and if bookingStatus does not equal "information". Might be ignored if a delta function is used 
        or if bookingStatus equals "information".
        For booked transactions, the relevant date is the booking date.
        For pending transactions, the relevant date is the entry date, which may not be transparent
        neither in this API nor other channels of the ASPSP.
        If the bookingStatus equals "all", this date might be ignored for all transactions referred to by bookingStatus 
        "information".
      required: false
      schema:
        type: string
        format: date


    dateTo:
      name: dateTo
      in: query
      description: |
        End date (inclusive the data dateTo) of the transaction list, default is "now" if not given. Might be ignored 
        if a delta function is used.

        For booked transactions, the relevant date is the booking date.

        For pending transactions, the relevant date is the entry date, which may not be transparent
        neither in this API nor other channels of the ASPSP.
        
        If the bookingStatus equals "all", this date might be ignored for all transactions referred to by 
        bookingStatus "information".
      required: false
      schema:
        type: string
        format: date


    entryReferenceFrom:
      name: entryReferenceFrom
      in: query
      description: |
        This data attribute is indicating that the AISP is in favour to get all transactions after
        the transaction with identification entryReferenceFrom alternatively to the above defined period.
        This is a implementation of a delta access.
        If this data element is contained, the entries "dateFrom" and "dateTo" might be ignored by the ASPSP
        if a delta report is supported.

        Optional if supported by API provider.
      required: false
      schema:
        type: string


    bookingStatusGeneric:
      name: bookingStatus
      in: query
      description: |
        Permitted codes are
          * "booked",
          * "pending",
          * "both",
          * "information"
          * "all"
        "booked" shall be supported by the ASPSP.
        
        To support the "pending" feature is conditional for the ASPSP. It is mandated if the ASPSP online channels 
        provide pending transactions to the PSU. Error code if not supported.
        
        To support the "both" feature is optional for the ASPSP, Error code if not supported. If supported, 
        "both" means to request lists of transactions of bookingStatus either "pending" or "booked".
        
        To support the "information" feature is optional for the ASPSP. Currently the booking status "information"
        only covers standing orders. Error code if not supported.

        To support the "all" feature is optional for the ASPSP, Error code if not supported. If supported, "all"
        means to request lists of transaction of any bookingStatus ("pending", "booked" or "information").

      required: true
      schema:
        type: string
        enum:
          - "information"
          - "booked"
          - "pending"
          - "both"
          - "all"


    deltaList:
      name: deltaList
      in: query
      description:
        This data attribute is indicating that the AISP is in favour to get all transactions after the last report 
        access for this PSU on the addressed account.
        This is another implementation of a delta access-report.

        This delta indicator might be rejected by the ASPSP if this function is not supported.
  
        If this data element is contained, the entries "dateFrom" and "dateTo" might be ignored by the ASPSP if 
        a delta report is supported.
        
        Optional if supported by API provider.
      schema:
        type: boolean


  requestBodies:
  #####################################################
  # Reusable Request Bodies
  #####################################################
  
    paymentInitiation:
      description: |
        JSON request body for a payment initiaton request message.

        There are the following payment-products supported:
          * "sepa-credit-transfers" with JSON-Body
          * "instant-sepa-credit-transfers" with JSON-Body
          * "target-2-payments" with JSON-Body
          * "cross-border-credit-transfers" with JSON-Body

        There are the following payment-services supported:
          * "payments"
          * "periodic-payments"
          * "bulk-payments"

        All optional, conditional and predefined but not yet used fields are defined.
      required: true
      content:
        application/json:
          schema:
            oneOf: #Different Payment products in JSON
              - $ref: "#/components/schemas/paymentInitiation_json"
              - $ref: "#/components/schemas/periodicPaymentInitiation_json"
              - $ref: "#/components/schemas/bulkPaymentInitiation_json"
          examples:
            "Example 1: 'payments' - 'sepa-credit-transfers'":
              $ref: "#/components/examples/paymentInitiationSctBody_payments_json"
            "Example 2: 'periodic-payments' - 'sepa-credit-transfers'":
              $ref: "#/components/examples/paymentInitiationSctBody_periodic-payments_json"
            "Example 3: 'bulk-payments' - 'sepa-credit-transfers'":
              $ref: "#/components/examples/paymentInitiationSctBody_bulk-payments_json"


    accountAccessConsent:
      description: |
        Request body for an Account Access consent establishing request.

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/accountAccessConsent"


    fundsConfirmationsConsent:
      description: |
        Request body for a Funds Confirmation consent establishing request.

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/fundsConfirmationsConsent"


    userParametersAccessConsent:
      description: |
        Request body for a User Parameters Access consent establishing request.

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/userParametersAccessConsent"


    documentServicesConsent:
      description: |
        Request body for a RTPs consent establishing request.

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/documentServicesConsent"


    confirmationOfFunds:
      description: |
        Request body for a Confirmation of Funds request.

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/confirmationOfFunds_json"


  headers:
#####################################################
# Response Header Elements
#####################################################
    X-Request-ID:
      description: ID of the request, unique to the call, as determined by the initiating party.
      required: true
      example: "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
      schema:
        type: string
        format: uuid

    ASPSP-SCA-Approach:
      description: |
        This data element must be contained, if the SCA Approach is already fixed.
        Possible values are
          * EMBEDDED
          * DECOUPLED
          * REDIRECT
        The OAuth SCA approach will be subsumed by REDIRECT.
      schema:
        type: string
        enum:
          - "EMBEDDED"
          - "DECOUPLED"
          - "REDIRECT"
        example: "EMBEDDED"
      required: false


    Location:
      description: |
        Location of the created resource.
      schema:
        type: string
        format: url
      required: true


    #conditional for extended service multiple Consent
    ASPSP-Multiple-Consent-Support:
      description: |
        true if the ASPSP supports the Multiple Consent Service.
        false if the ASPSP does not support the Multiple Consent Service.
        If not provided, this also implies that the ASPSP does not support the Multiple Consent Service.
      schema:
        type: boolean
      required: false


  responses:
  #####################################################
  # Reusable Responses
  #####################################################
    #####################################################
    # Positive Responses
    #####################################################

    OK_200_PaymentInitiationInformation:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            oneOf:  #Different Payment Products with status
              - $ref: "#/components/schemas/paymentInitiationWithStatusResponse"
              - $ref: "#/components/schemas/periodicPaymentInitiationWithStatusResponse"
              - $ref: "#/components/schemas/bulkPaymentInitiationWithStatusResponse"


    OK_200_PaymentInitiationStatus:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/paymentInitiationStatusResponse-200_json"
          examples:
            simple:
              $ref: "#/components/examples/paymentInitiationStatusResponse_json_Simple"
            extended:
              $ref: "#/components/examples/paymentInitiationStatusResponse_json_Extended"


    OK_200_Authorisations:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/authorisations"
          examples:
            Example:
              $ref: "#/components/examples/authorisationListExample"


    OK_200_ScaStatus:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/scaStatusResponse"


    OK_200_AccountList:
      description: OK. In case, no account is accessible, the ASPSP shall return an empty array. As this is also 
        considered a positive response, the Response code must still be 200.

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/accountList"
          examples:
            "Example 1":
              $ref: "#/components/examples/accountListExample1"
            "Example 2":
              $ref: "#/components/examples/accountListExample2"
            "Example 3":
              $ref: "#/components/examples/accountListExample3"


    OK_200_AccountDetails:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            type: object
            required:
              - account
            properties:
              account:
                $ref: "#/components/schemas/accountDetails"
          examples:
            "Regular Account":
              $ref: "#/components/examples/accountDetailsRegularAccount"
            "Multicurrency Account":
              $ref: "#/components/examples/accountDetailsMulticurrencyAccount"


    OK_200_TransactionDetails:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            type: object
            properties:
              transactionsDetails:
                $ref: "#/components/schemas/transactionDetailsBody"
          examples:
            Example:
              $ref: "#/components/examples/transactionDetailsExample"


    OK_200_Balances:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/readAccountBalanceResponse-200"
          examples:
            "Example 1: Regular Account":
              $ref: "#/components/examples/balancesExample1_RegularAccount"
            "Example 2: Multicurrency Account":
              $ref: "#/components/examples/balancesExample2_MulticurrencyAccount"
            "Example 3:":
              $ref: "#/components/examples/balancesExample3_RegularAccount"


    OK_200_AccountsTransactions:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/transactionsResponse-200_json"
          examples:
            "Example 1":
              $ref: "#/components/examples/transactionsExample1_RegularAccount_json"
            "Example 2":
              $ref: "#/components/examples/transactionsExample2_Download_json"
            "Example 3":
              $ref: "#/components/examples/transactionsExample3_MulticurrencyAccount_json"


    OK_200_AccountAccessConsentInformation:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/accountAccessConsentInformationResponse-200_json"


    OK_200_FundsConfirmationsConsentInformation:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/fundsConfirmationsConsentInformationResponse-200_json"


    OK_200_UserParametersAccessConsentInformation:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/userParametersAccessConsentInformationResponse-200_json"


    OK_200_DocumentServicesConsentInformation:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/documentServicesConsentInformationResponse-200_json"


    OK_200_ConsentStatus:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/consentStatusResponse-200"
          examples:
            Example:
              $ref: "#/components/examples/consentStatusResponseExample1"


    OK_200_UpdatePsuData:
      description: OK

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
        ASPSP-SCA-Approach:
          $ref: "#/components/headers/ASPSP-SCA-Approach"

      content:
        application/json:
          schema:
            oneOf: #Different Authorisation Bodies
              - $ref: "#/components/schemas/updatePsuIdentificationResponse" #Update PSU identification
              - $ref: "#/components/schemas/updatePsuAuthenticationResponse" #Update PSU authentication
              - $ref: "#/components/schemas/updatePsuSelectAuthenticationMethodResponse" #Select authentication method
              - $ref: "#/components/schemas/transactionAuthorisationResponse" #Transaction Authorisation
              - $ref: "#/components/schemas/authorisationConfirmationResponse" #Authorisation Confirmation


    OK_200_ConfirmationOfFunds:
      description: OK

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            description: |
              Equals "true" if sufficient funds are available at the time of the request,
              "false" otherwise.
            type: object
            required:
              - fundsAvailable
            properties:
              fundsAvailable:
                $ref: "#/components/schemas/fundsAvailable"
          examples:
            "Example":
              $ref: "#/components/examples/confirmationOfFundsResponseExample"


    CREATED_201_PaymentInitiation:
      description: CREATED

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
        Location:
          $ref: "#/components/headers/Location"
        ASPSP-SCA-Approach:
          $ref: "#/components/headers/ASPSP-SCA-Approach"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/paymentInitiationRequestResponse-201"
          examples:
            "Response in case of a redirect with an implicitly created authorisation sub-resource":
              $ref: "#/components/examples/paymentInitiationExample_json_Redirect"
            "Response in case of a redirect where an explicit authorisation start is needed":
              $ref: "#/components/examples/paymentInitiationExample_json__RedirectExplicitAuthorisation"
            "Response in case of an OAuth2 SCA approach approach with implicitly creating an authorisation sub-resource":
              $ref: "#/components/examples/paymentInitiationExample_json_OAuth2"
            "Response in case of the decoupled approach with explicit start of authorisation needed (will be done with the update PSU identification function)":
              $ref: "#/components/examples/paymentInitiationExample_json_Decoupled"
            "Response in case of the embedded approach with explicit start of authorisation":
              $ref: "#/components/examples/paymentInitiationExample_json_Embedded"


    CREATED_201_StartScaProcess:
      description: Created

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
        ASPSP-SCA-Approach:
          $ref: "#/components/headers/ASPSP-SCA-Approach"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/startScaProcessResponse"
          examples:
            "Example 1: payments - Decoupled Approach":
              $ref: "#/components/examples/startScaProcessResponseExample1"


    #Should be used if no changes will be done in responses for different consents establishing
    CREATED_201_CommonsConsent:
      description: Created
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
        ASPSP-SCA-Approach:
          $ref: "#/components/headers/ASPSP-SCA-Approach"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/commonConsentResponse-201"
          examples:
            "Response in case of a redirect":
              $ref: "#/components/examples/consentResponseExample1a_Redirect"
            "Response in case of a redirect with a dedicated start of the authorisation process":
              $ref: "#/components/examples/consentResponseExample1b_Redirect"
            "Response in case of the OAuth2 approach with an implicit generated authorisation resource":
              $ref: "#/components/examples/consentResponseExample2_OAuth2"
            "Response in case of the decoupled approach":
              $ref: "#/components/examples/consentResponseExample3_Decoupled"
            "Response in case of the embedded approach":
              $ref: "#/components/examples/consentResponseExample4_Embedded"


    CREATED_201_AccountAccessConsent:
      description: Created

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
        ASPSP-SCA-Approach:
          $ref: "#/components/headers/ASPSP-SCA-Approach"
        #conditional for Multiple Consents
        ASPSP-Multiple-Consent-Support:
          $ref: "#/components/headers/ASPSP-Multiple-Consent-Support"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/accountAccessConsentResponse-201"


    CREATED_201_FundsConfirmationsConsent:
      description: Created

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
        ASPSP-SCA-Approach:
          $ref: "#/components/headers/ASPSP-SCA-Approach"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/fundsConfirmationsConsentResponse-201"


    CREATED_201_UserParametersAccessConsent:
      description: Created

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
        ASPSP-SCA-Approach:
          $ref: "#/components/headers/ASPSP-SCA-Approach"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/userParametersAccessConsentResponse-201"


    CREATED_201_DocumentServicesConsent:
      description: Created

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
        ASPSP-SCA-Approach:
          $ref: "#/components/headers/ASPSP-SCA-Approach"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/documentServicesConsentResponse-201"


    RECEIVED_202_PaymentInitiationCancel:
      description: Received

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/paymentInitiationCancelResponse-202"


    NO_CONTENT_204_PaymentInitiationCancel:
      description:  No Content

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #NO RESPONSE BODY


    NO_CONTENT_204_Consents:
      description: No Content

      headers:
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #NO RESPONSE BODY


    #####################################################
    # Negative Responses
    #####################################################

    BAD_REQUEST_400_AIS:
      description: Bad Request

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error400_NG_AIS"

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error400_AIS"


    BAD_REQUEST_400_PIS:
      description: Bad Request

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error400_NG_PIS"

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error400_PIS"


    BAD_REQUEST_400_PIIS:
      description: Bad Request

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error400_NG_AIS"

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error400_AIS"



    UNAUTHORIZED_401_PIS:
      description: Unauthorized

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error401_NG_PIS"

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error401_PIS"

  
    UNAUTHORIZED_401_AIS:
      description: Unauthorized
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error401_NG_AIS"

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error401_AIS"

  
    UNAUTHORIZED_401_PIIS:
      description: Unauthorized

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error401_NG_PIIS"

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error401_PIIS"


    FORBIDDEN_403_PIS:
      description: Forbidden

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error403_NG_PIS"

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error403_PIS"


    FORBIDDEN_403_AIS:
      description: Forbidden

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error403_NG_AIS"

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error403_AIS"


    FORBIDDEN_403_PIIS:
      description: Forbidden

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error403_NG_PIIS"

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error403_PIIS"



    NOT_FOUND_404_PIS:
      description: Not found

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error404_NG_PIS"

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error404_PIS"


    NOT_FOUND_404_AIS:
      description: Not found

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error404_NG_AIS"

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error404_AIS"


    NOT_FOUND_404_PIIS:
      description: Not found

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error404_NG_PIIS"

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error404_PIIS"


    METHOD_NOT_ALLOWED_405_PIS:
      description: Method Not Allowed

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error405_NG_PIS"

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error405_PIS"


    METHOD_NOT_ALLOWED_405_PIS_CANC:
      description: Method Not Allowed

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error405_NG_PIS_CANC"

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error405_PIS_CANC"


    METHOD_NOT_ALLOWED_405_AIS:
      description: Method Not Allowed

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error405_NG_AIS"

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error405_AIS"


    METHOD_NOT_ALLOWED_405_PIIS:
      description: Method Not Allowed

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error405_NG_PIIS"

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error405_PIIS"



    NOT_ACCEPTABLE_406_PIS:
      description: Not Acceptable

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for PIS in case of HTTP code 406


    NOT_ACCEPTABLE_406_AIS:
      description: Not Acceptable

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error406_NG_AIS"
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error406_AIS"


    NOT_ACCEPTABLE_406_PIIS:
      description: Not Acceptable

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for PIIS in case of HTTP code 406



    REQUEST_TIMEOUT_408_PIS:
      description: Request Timeout

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for PIS in case of HTTP code 408


    REQUEST_TIMEOUT_408_AIS:
      description: Request Timeout

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for AIS in case of HTTP code 408


    REQUEST_TIMEOUT_408_PIIS:
      description: Request Timeout

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for PIIS in case of HTTP code 408



    CONFLICT_409_PIS:
      description: Conflict

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error409_NG_PIS"
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error409_PIS"


    CONFLICT_409_AIS:
      description: Conflict
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error409_NG_AIS"
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error409_AIS"


    CONFLICT_409_PIIS:
      description: Conflict

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error409_NG_PIIS"
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error409_PIIS"


    UNSUPPORTED_MEDIA_TYPE_415_AIS:
      description: Unsupported Media Type

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for AIS in case of HTTP code 415


    UNSUPPORTED_MEDIA_TYPE_415_PIS:
      description: Unsupported Media Type

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for AIS in case of HTTP code 415


    UNSUPPORTED_MEDIA_TYPE_415_PIIS:
      description: Unsupported Media Type

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for PIIS in case of HTTP code 415


    TOO_MANY_REQUESTS_429_PIS:
      description: Too Many Requests

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for PIS in case of HTTP code 429


    TOO_MANY_REQUESTS_429_AIS:
      description: Too Many Requests

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"

      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error429_NG_AIS"
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Error429_AIS"


    TOO_MANY_REQUESTS_429_PIIS:
      description: Too Many Requests

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for PIIS in case of HTTP code 429


    INTERNAL_SERVER_ERROR_500_PIS:
      description: Internal Server Error

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for PIS in case of HTTP code 500


    INTERNAL_SERVER_ERROR_500_AIS:
      description: Internal Server Error

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for AIS in case of HTTP code 500


    INTERNAL_SERVER_ERROR_500_PIIS:
      description: Internal Server Error

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for PIIS in case of HTTP code 500


    SERVICE_UNAVAILABLE_503_PIS:
      description: Service Unavailable

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for PIS in case of HTTP code 503


    SERVICE_UNAVAILABLE_503_AIS:
      description: Service Unavailable

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for AIS in case of HTTP code 503


    SERVICE_UNAVAILABLE_503_PIIS:
      description: Service Unavailable

      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/X-Request-ID"
      #No Response body because there are no valid message codes for PIIS in case of HTTP code 503


  examples:
  #####################################################
  # Predefined Examples
  #####################################################

    ibanExampleDe_01:
      value: "DE02100100109307118603"


    ibanExampleDe_02:
      value: "DE23100120020123456789"


    ibanExampleDe_03:
      value: "DE40100100103307118608"


    ibanExampleDe_04:
      value: "DE67100100101306118605"


    ibanExampleDe_05:
      value: "DE87200500001234567890"


    ibanExampleFr_01:
      value: "FR7612345987650123456789014"


    ibanExampleNl_01:
      value: "NL76RABO0359400371"


    ibanExampleSe_01:
      value: "SE9412309876543211234567"


    maskedPanExample:
      value: "123456xxxxxx1234"


    uuidExample:
      value: "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"


    paymentInitiationSctBody_payments_json:
      value:
        {
          "instructedAmount": {"currency": "EUR", "amount": "123.50"},
          "debtorAccount": {"iban": "DE40100100103307118608"},
          "creditorName": "Merchant123",
          "creditorAccount": {"iban": "DE02100100109307118603"},
          "remittanceInformationUnstructured": "Ref Number Merchant"
        }


    paymentInitiationSctBody_periodic-payments_json:
      value:
        {
          "instructedAmount": {
            "currency": "EUR",
            "amount": "123"
          },
          "debtorAccount": {"iban": "DE40100100103307118608"},
          "creditor": {
            "name": "Merchant123"
          },
          "creditorAccount": {"iban": "DE23100120020123456789"},
          "remittanceInformationUnstructured": ["Ref Number Abonnement"],
          "startDate": "2018-03-01",
          "executionRule": "preceding",
          "frequency": "Monthly",
          "dayOfExecution": "01"
        }


    paymentInitiationSctBody_bulk-payments_json:
      value:
        {
          "paymentInformationId": "bulk-payment 123",
          "batchBooking": "true",
          "numberOfTransactions": 2,
          "controlSum": "12345.01",
          "debtorAccount": {"iban": "DE40100100103307118608"},
          "requestedExecutionDate": "2018-08-01",
          "creditTransfers":
            [
              { JSON based payment initiation 1 },
              { JSON based payment initiation 2 }
            ]
        }


    accountDetailsRegularAccount:
      description: Account details for a regular Account.
      value:
        {
          "account":
            {
              "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80f",
              "iban": "FR7612345987650123456789014", 
              "currency": "EUR",
              "ownerName": "Heike Mustermann",
              "product": "Girokonto",
              "cashAccountType": "CACC",
              "name": "Main Account",
              "_links":
                {
                  "balances": {"href": "/v2/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/balances"},
                  "transactions": {"href": "/v2/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/transactions"}
                 }
            }
        }


    accountDetailsMulticurrencyAccount:
      description: Account details for a multicurrency account.
      value:
        {
          "account":
            {
              "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80f",
              "iban": "FR7612345987650123456789014", 
              "currency": "XXX",
              "ownerName": "Heike Mustermann",
              "product": "Multicurrency Account",
              "cashAccountType": "CACC",
              "name": "Aggregation Account",
              "_links":
                {
                  "balances": {"href": "/v2/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/balances"},
                  "transactions": {"href": "/v2/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/transactions"}
                }
            }
        }


    accountListExample1:
      summary: Account list Example 1
      description: Response in case of an example, where the consent has been given on two different IBANs.
      value:
        { "accounts": [
          { "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80f",
            "iban": "DE2310010010123456789",
            "currency": "EUR",
            "product": "Girokonto",
            "cashAccountType": "CACC",
            "name": "Main Account",
            "_links": {
              "balances": { "href": "/v2/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/balances"},
              "transactions": { "href": "/v2/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/transactions"}
            }
          },
          { "resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e81e",
            "iban": "DE2310010010123456788",
            "currency": "USD",
            "product": "Foreign Currency Account",
            "cashAccountType": "CACC",
            "name": "US Dollar Account",
            "_links": {
              "balances": { "href": "/v2/accounts/3dc3d5b3-7023-4848-9853-f5400a64e81e/balances" }
            }
          }
        ]
        }


    accountListExample2:
      summary: Account list Example 2
      description: |
        Response in case of an example where consent on transactions and balances has been given to a multicurrency 
        account which has two sub-accounts with currencies EUR and USD, and where the ASPSP is giving the data access 
        only on sub-account level.
      value:
        {"accounts":
           [
              {"resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80f",
               "iban": "DE2310010010123456788", 
               "currency": "EUR",
               "product": "Girokonto",
               "cashAccountType": "CACC",
               "name": "Main Account",
               "_links": {
            "balances": {"href": "/v2/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/balances"},
            "transactions": {"href": "/v2/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f/transactions"}}
              },
              {"resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e81e",
               "iban": "DE2310010010123456788",
               "currency": "USD",
               "product": "Foreign Currency Account",
               "cashAccountType": "CACC",
               "name": "US Dollar Account",
               "_links": {
                 "balances": {"href": "/v2/accounts/3dc3d5b3-7023-4848-9853-f5400a64e81e/balances"},
                 "transactions": {"href": "/v2/accounts/3dc3d5b3-7023-4848-9853-f5400a64e81e/transactions"} }
               } 
        ]}


    accountListExample3:
      summary: Account list Example 3
      description: |
        Account list response in case of an example where consent on balances and transactions has been given to 
        a multicurrency account which has two sub-accounts with currencies EUR and USD and where the ASPSP is giving 
        the data access on aggregation level and on sub-account level.
      value:
        {"accounts":
           [
              {"resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80f",
               "iban": "DE2310010010123456788", 
               "currency": "XXX",
               "product": "Multi currency account",
               "cashAccountType": "CACC",
               "name": "Aggregation Account",
               "_links": {
            "balances": {"href": "/v2/accounts/3dc3d5b3-7023-4848-9853-f5400a64e333/balances"},
            "transactions": {"href": "/v2/accounts/3dc3d5b3-7023-4848-9853-f5400a64e333/transactions"}}
              },
        {"resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e80e",
               "iban": "DE2310010010123456788", 
               "currency": "EUR",
               "product": "Girokonto",
               "cashAccountType": "CACC",
               "name": "Main Account",
               "_links": {
            "balances": {"href": "/v2/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80e/balances"},
            "transactions": {"href": "/v2/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80e/transactions"}}
              },
              {"resourceId": "3dc3d5b3-7023-4848-9853-f5400a64e81d",
               "iban": "DE2310010010123456788",
               "currency": "USD",
               "product": "US Dollar Account",
               "cashAccountType": "CACC",
               "name": "US Dollar Account",
               "_links": {
            "balances": {"href": "/v2/accounts/3dc3d5b3-7023-4848-9853-f5400a64e81d/balances"},
            "transactions": {"href": "/v2/accounts/3dc3d5b3-7023-4848-9853-f5400a64e81d/transactions"} }
               } 
        ]}


    startScaProcessResponseExample1:
      value:
        { 
           "scaStatus": "received",
           "authorisationId": "3d9a81b3-a47d-4130-9999-a9c0ff861100",
           "psuMessage": "Please use your BankApp for transaction authorisation.",
           "_links":
            {
              "scaStatus": {
                "href": "/v2/payments/sepa-credit-transfers/3d9a81b3-a47d-4130-8765-a9c0ff861100/authorisations/3d9a81b3-a47d-4130-9999-a9c0ff861100"}
            }
        }


    consentsExample_DedicatedAccounts:
      description: Consent request on dedicated accounts.
      value:
        {
        "access": 
          {
            "balances": [
                { "iban": "DE40100100103307118608" },
                { "iban": "DE02100100109307118603",
          "currency": "USD"
                },
                { "iban": "DE67100100101306118605" }
              ],
            "transactions": [
                { "iban": "DE40100100103307118608" },
                { "maskedPan": "123456xxxxxx1234" }
              ]
           },
        "recurringIndicator": "true",
        "validTo": "2017-11-01",
        "frequencyPerDay": 4
       }


    consentsExample_AccountList:
      description: Consent on account list of available accounts.
      value:
        {"access": 
          {"availableAccounts": "allAccounts"},
         "recurringIndicator": "false",
         "validTo": "2017-08-06",
         "frequencyPerDay": 1
        }


    consentsExample_without_Accounts:
      description: Consent request on account list or without indication of accounts.
      value:
        {"access": 
        {
          "balances": [],
          "transactions": []
        },
        "recurringIndicator": "true",
        "validTo": "2017-11-01",
        "frequencyPerDay": 4
        }


    updatePsuAuthenticationExample_Embedded:
      description: Update PSU authentication request body for the embedded approach.
      value:
        {
          "psuData": {"password": "start12"}
        }


    selectPsuAuthenticationMethodExample_Embedded:
      description: Select PSU authentication method request body for the embedded approach.
      value:
        {
          authenticationMethodId: "myAuthenticationID"
        }


    transactionAuthorisationExample_Embedded:
      description: Transaction authorisation request body for the embedded approach.
      value:
        {
          "scaAuthenticationData": "123456"
        }


    authorisationConfirmationExample_Redirect:
      description: Authorisation confirmation request body for the redirect approach.
      value:
        { 
          "confirmationCode": "2256ffgh"
        }


    consentsInformationResponseExample:
      description: Consent request on account list or without indication of accounts.
      value:
        {
          "access": {
            "payments": [
              {
                "account": "account ref1",
                "rights": [
                  "accountDetails",
                  "balances",
                  "transactions",
                  "ownerName",
                  "trustedBeneficiaries"
                ],
                "_links": {
                  "account": {
                    "href": "/v2/accounts/resourceId1"
                  }
                }
              },
              {
                "account": "account ref2",
                "rights": [
                  "accountDetails",
                  "balances",
                  "transactions",
                  "ownerName"
                ],
                "_links": {
                  "account": {
                    "href": "/v2/accounts/resourceId2"
                  }
                }
              }
            ],
            "cards": [
              {
                "account": "account ref3",
                "rights": [
                  "accountDetails",
                  "balances",
                  "transactions"
                ],
                "_links": {
                  "card": {
                    "href": "/oFA/v2/cards/resourceId3"
                  }
                }
              },
              {
                "account": "account ref4",
                "rights": [
                  "accountDetails",
                  "transactions"
                ],
                "_links": {
                  "card": {
                    "href": "/oFA/v2/cards/resourceId4"
                  }
                }
              }
            ],
            "savings": [
              {
                "account": "account ref5",
                "rights": [
                  "accountDetails",
                  "balance"
                ],
                "_links": {
                  "savingsAccount": {
                    "href": "/oFA/v2/savings-accounts/resourceId5"
                  }
                }
              }
            ],
            "loans": [
              {
                "account": "account ref6",
                "rights": [
                  "accountDetails",
                  "balance",
                  "transactions"
                ],
                "_links": {
                  "loanAccount": {
                    "href": "/oFA/v2/loan-accounts/resourceId6"
                  }
                }
              },
              {
                "account": "account ref7",
                "rights": [
                  "accountDetails",
                  "balance"
                ],
                "_links": {
                  "loanAccount": {
                    "href": "/oFA/v2/loan-accounts/resourceId7"
                  }
                }
              }
            ],
            "securities": [
              {
                "account": "account ref8",
                "rights": [
                  "accountDetails",
                  "balance",
                  "orders",
                  "transactions"
                ],
                "_links": {
                  "securitiesAccount": {
                    "href": "/oFA/v2/securities-accounts/resourceId8"
                  }
                }
              }
            ],
            "consentType": "aspspManaged",
            "recurringIndicator": true,
            "validTo": "2017-11-01",
            "frequencyPerDay": 4,
            "consentStatus": "valid"
          }
        }


    fundsConfirmationConsentsInformationResponseExample:
      value:
        {
          "access":
            {
              "payments": [
                "account": {
                  "iban": "DE40100100103307118608"
                },
                "accessRights": {
                  "fundsConfirmations"
                }
              ]
            },
          "consentType": "detailed",
          "cardNumber": "1234567891234",
          "cardExpiryDate": "2020-12-31",
          "cardInformation": "MyMerchant Loyalty Card",
          "consentStatus": "valid"
        }


    consentResponseExample1a_Redirect:
      description: Consent request response in case of a redirect.
      value: 
        { 
          "consentStatus": "received",
          "consentId": "1234-wertiq-983",
          "_links": 
            {
            "scaRedirect": {"href": "https://www.testbank.com/authentication/1234-wertiq-983"},
            "status": {"href": "/v2/consents/1234-wertiq-983/status"},
            "scaStatus": {"href": "/v2/consents/1234-wertiq-983/authorisations/123auth567"}
            }
        }


    consentResponseExample1b_Redirect:
      description: Consent request response in case of a redirect with a dedicated start of the authorisation process.
      value: 
        { 
          "consentStatus": "received",
          "consentId": "1234-wertiq-983",
          "_links": 
            {
            "startAuthorisation": {"href": "/v2/consents/1234-wertiq-983/authorisations"}
            }
        }


    consentResponseExample2_OAuth2:
      description: Response in case of the OAuth2 approach with an implicit generated authorisation resource.
      value: 
        { 
        "consentStatus": "received",
        "consentId": "1234-wertiq-983",
        "_links": 
          {
            "self": {"href": "/v2/consents/1234-wertiq-983"},
            "scaStatus": {"href": "/v2/consents/1234-wertiq-983/authorisations/123auth567"},
            "scaOAuth": {"href": "https://www.testbank.com/oauth/.well-known/oauth--server"}
          }
        } 


    consentResponseExample3_Decoupled:
      description: Response in case of the decoupled approach.
      value: 
        { 
          "consentStatus": "received",
          "consentId": "1234-wertiq-983",
          "_links": 
            {
            "startAuthorisationWithPsuIdentification": {"href": "/v2/consents/1234-wertiq-983/authorisations"}
            }
        } 


    consentResponseExample4_Embedded:
      description: Response in case of the embedded approach.
      value: 
        { 
          "consentStatus": "received",
          "consentId": "1234-wertiq-983",
          "_links": 
            {
            "startAuthorisationWithPsuAuthentication": {"href": "/v2/consents/1234-wertiq-983/authorisations"}
            }
        }


    consentStatusResponseExample1:
      description: Response for a consent status request.
      value:
        { 
          "consentStatus": "valid",
        }


    paymentInitiationExample_json_Redirect:
      description: "Response in case of a redirect with an implicitly created authorisation sub-resource"
      value:
        {
          "transactionStatus": "RCVD",
          "paymentId": "1234-wertiq-983",
          "_links": 
            {
            "scaRedirect": {"href": "https://www.testbank.com/asdfasdfasdf"},
            "self": {"href": "/v2/payments/sepa-credit-transfers/1234-wertiq-983"},
            "status": {"href": "/v2/payments/1234-wertiq-983/status"},
            "scaStatus": {"href": "/v2/payments/1234-wertiq-983/authorisations/123auth456"}
            }
        }


    paymentInitiationExample_json__RedirectExplicitAuthorisation:
      description: "Response in case of a redirect with an explicit authorisation start"
      value:
        {
          "transactionStatus": "RCVD",
          "paymentId": "1234-wertiq-983",
          "_links": 
            {
            "self": {"href": "/v2/payments/1234-wertiq-983"},
            "status": {"href": "/v2/payments/1234-wertiq-983/status"},
            "startAuthorisation": {"href": "/v2/payments1234-wertiq-983/authorisations"}
            }
        }


    paymentInitiationExample_json_OAuth2:
      description:
        "Response in case of an OAuth2 SCA approach approach with implicitly creating an authorisation sub-resource"
      value:
        { 
          "transactionStatus": "RCVD",
          "paymentId": "1234-wertiq-983",
          "_links": 
            {
            "scaOAuth": {"href": "https://www.testbank.com/oauth/.well-known/oauth--server"},
            "self": {"href": "/v2/payments/1234-wertiq-983"},
            "status": {"href": "/v2/payments/1234-wertiq-983/status"},
            "scaStatus": {"href": "/v2/payments/1234-wertiq-983/authorisations/123auth456"}
            }
        }


    paymentInitiationExample_json_Decoupled:
      description: "Response in case of the decoupled approach with explicit start of authorisation needed"
      value:
        { 
          "transactionStatus": "RCVD",
          "paymentId": "1234-wertiq-983",
          "_links": 
            {
            "startAuthorisationWithPsuIdentification": {"href":"/v2/payments/1234-wertiq-983/authorisations"},
            "self": {"href": "/v2/payments/1234-wertiq-983"}
            }
        } 


    paymentInitiationExample_json_Embedded:
      description: "Response in case of the embedded approach with explicit start of authorisation"
      value:
        { 
          "transactionStatus": "RCVD",
          "paymentId": "1234-wertiq-983",
          "_links": 
            {
            "startAuthorisationWithPsuAuthentication": {"href": "/v2/payments/1234-wertiq-983/authorisations"},
            "self": {"href": "/v2/payments/1234-wertiq-983"}
            }
        }


    paymentInitiationStatusResponse_json_Simple:
      value:
        { 
        "transactionStatus": "ACCP"
        }


    paymentInitiationCancelResponse-202:
      value:
        {
          "transactionStatus": "ACTC",
          "_links": 
            {
            "self": {"href": "/v2/payments/123456scheduled789"},
            "status": {"href": "/v2/payments/123456scheduled789/status"},
            "startAuthorisation": {"href": "/v2/payments/123456scheduled789/cancellation-authorisations"}
            }
        }


    paymentInitiationStatusResponse_json_Extended:
      value: |
        { 
          "transactionStatus": "ACCP",
          "scaStatus": "received"
        }


    updatePsuIdentificationResponseExample_Decoupled_payments:
      description: Response of an update PSU identification for a payment initiation request for the decoupled approach.
      value:
        {
          "scatransactionStatus": "psuIdentified",
          "psuMessage": "Please use your BankApp for transaction Authorisation.",
          "_links":
            {
              "scaStatus": { "href": "/v2/payments/qwer3456tzui7890/authorisations/123auth456" }
            }
        }


    updatePsuAuthenticationResponseExample_Embedded_payments:
      description: Response of an update PSU authentication for a consent request for the embedded approach.
      value:
        { 
          "scaStatus": "psuAuthenticated",
          _links: {
            "authoriseTransaction": { "href": "/v2/payments/1234-wertiq-983/authorisations/123auth456" }
          }
        }


    selectPsuAuthenticationMethodResponseExample_Embedded_payments:
      description: Response of a select PSU authentication method payment initiation request for the embedded approach
      value:
        {
          "scaStatus": "scaMethodSelected",
          "chosenScaMethod": {
            "authenticationType": "SMS_OTP",
            "authenticationMethodId": "myAuthenticationID"},
          "challengeData": {
            "otpMaxLength": "6",
            "otpFormat": "integer"},
          "_links": {
            "authoriseTransaction": {"href": "/v2/payments/1234-wertiq-983/authorisations/123auth456"}
          }
        }


    transactionAuthorisationResponseExample:
      description: Response of a Transaction Authorisation request for the embedded approach.
      value:
        { 
          "scaStatus": "finalised"
        }


    authorisationConfirmationResponseExample:
      description: Response of an authorisation confirmation request.
      value:
        { 
          "scaStatus": "finalised",
          "_links":{
            "status":  {"href":"/v2/payments/sepa-credit-transfers/qwer3456tzui7890/status"}
          }
        }


    confirmationOfFundsExample:
      description: Request body for a confirmation of funds.
      value:
        {  
          "cardNumber": "12345678901234", 
          "account": {"iban": "DE23100120020123456789"},
          "instructedAmount": {"currency": "EUR", "amount": "123"}
        }


    confirmationOfFundsResponseExample:
      description: Response for a confirmation of funds request.
      value:
        {
          "fundsAvailable": "true"
        }


    balancesExample1_RegularAccount:
      description: Response for a read balance request in case of a regular account.
      value: 
        {
          "account": {"iban": "FR7612345987650123456789014"},
          "balances":
              [{
                "balanceAmount": {"currency": "EUR", "amount": "500.00"},
                "balanceType": "closingBooked",
                "referenceDate": "2017-10-25"
                   },
               {
               "balanceAmount": {"currency": "EUR","amount": "900.00"},
               "balanceType": "expected", 
                "lastChangeDateTime": "2017-10-25T15:30:35.035Z"
               }]
        }


    balancesExample2_MulticurrencyAccount:
      description: |
        Response in case of a multicurrency account with one account in EUR, 
        one in USD, where the ASPSP has delivered a link to the balance endpoint relative to the aggregated 
        multicurrency account (aggregation level).
      value: 
        {
          "balances":
              [{"balanceAmount": {"currency": "EUR", "amount": "500.00"},
            "balanceType": "closingBooked",        
                "referenceDate": "2017-10-25"
               },
               {"balanceAmount": {"currency": "EUR", "amount": "900.00"},
            "balanceType": "expected",      
                "lastChangeDateTime": "2017-10-25T15:30:35.035Z"
               },
           {"balanceAmount": {"currency": "USD", "amount": "350.00"},
                "balanceType": "closingBooked", 
                "referenceDate": "2017-10-25"
               },
               {"balanceAmount": {"currency": "USD", "amount": "350.00"},
                "balanceType": "expected",
                "lastChangeDateTime": "2017-10-24T14:30:21Z"
                   }]
        }


    balancesExample3_RegularAccount:
      description: Response in case of a regular account where the corresponding balances in the online channel is 
        reported independently from account statements with fixed dates, i.e. always displaying running balance for 
        current time.
      value: 
        {
           "balances":[      
              {
               "balanceAmount":{"currency":"EUR", "amount": "1000.00"},
               "balanceType":"interimBooked"
                 },     
              {
                 "balanceAmount":{"currency": "EUR", "amount": "300.00"},
                 "balanceType":"interimAvailable"
              },
              {
                 "balanceAmount":{"currency":"EUR", "amount": "5300.00"},
                 "balanceType": "interimAvailable",
                 "creditLimitIncluded": true
              }
           ]
        }


    transactionsExample1_RegularAccount_json:
      description: Response in JSON format for an access on a regular account.
      value:
        {
          "account": {"iban": "DE2310010010123456788" },
          "transactions":
            {
            "booked":
              [{
              "transactionId": "1234567",
              "creditor": {"name": "John Miles"},
              "creditorAccount": {"iban": "DE67100100101306118605"},
              "transactionAmount": {"currency": "EUR", "amount": "256.67"},
              "bookingDate": "2017-10-25",
              "valueDate": "2017-10-26",
              "remittanceInformationUnstructured": ["Example 1"]
                },{
                "debtor": {"name": "Paul Simpson"},
                 "debtorAccount": {"iban": "NL76RABO0359400371"},
                 "transactionAmount": {"currency": "EUR", "amount": "343.01"},
                 "bookingDate": "2017-10-25",
                 "valueDate": "2017-10-26",
                "remittanceInformationUnstructured": ["Example 2"]
                }],
            "pending":
              [{
                 "transactionId": "1234569",
                 "creditor": {"name": "Claude Renault"},
                 "creditorAccount": {"iban": "FR7612345987650123456789014"},
                 "transactionAmount": {"currency": "EUR", "amount": "-100.03"},
                 "valueDate": "2017-10-26",
                 "remittanceInformationUnstructured": ["Example 3"]
                }],
            "_links": {"account": {"href": "/v2/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f"}}
             }
        }


    transactionsExample2_Download_json:
      description: Response in case of huge data amount as a download.
      value:
        { 
          "_links": {"download": {"href": "www.test-api.com/xs2a/v2/accounts/12345678999/transactions/download/"}}
        }


    transactionsExample3_MulticurrencyAccount_json:
      description: Response in JSON format for an access on a multicurrency account on aggregation level
      value:
        {
        "account": {"iban": "DE40100100103307118608"},
         "transactions":
           {"booked": 
             [{
               "transactionId": "1234567",
               "creditor": {"name": "John Miles"},
               "creditorAccount": {"iban": "DE67100100101306118605"},
               "transactionAmount": {"currency": "EUR", "amount": "-256.67"},
               "bookingDate": "2017-10-25",
               "valueDate": "2017-10-26",
               "remittanceInformationUnstructured": ["Example 1"]
              },{
               "transactionId": "1234568",
               "debtor": {"name": "Paul Simpson"},
               "debtorAccount": {"iban": "NL76RABO0359400371"},
               "transactionAmount": {"currency": "EUR", "amount": "343.01"},
               "bookingDate": "2017-10-25",
               "valueDate": "2017-10-26",
               "remittanceInformationUnstructured": ["Example 2"]
              },{
               "transactionId": "1234569",
               "debtor": {"name": "Pepe Martin"},
               "debtorAccount": {"iban": "SE9412309876543211234567"},
               "transactionAmount": {"currency": "USD", "amount": "100"},
               "bookingDate": "2017-10-25",
               "valueDate": "2017-10-26",
               "remittanceInformationUnstructured": ["Example 3"]
              }],
           "pending":
             [{
               "transactionId": "1234570",
               "creditor": {"name": "Claude Renault"},
               "creditorAccount": {"iban": "FR7612345987650123456789014"},
               "transactionAmount": {"currency": "EUR", "amount": "-100.03"},
               "valueDate": "2017-10-26",
               "remittanceInformationUnstructured": ["Example 4"]
              }],
           "_links": {"account": {"href": "/v2/accounts/3dc3d5b3-7023-4848-9853-f5400a64e80f"}}
           }
        }


    transactionDetailsExample:
      description: |
        Example for transaction details. 
        
        Remark: As shown by this example, a very typical additional details of a transaction is a SEPA Mandate ID.
      value:
        {
          "transactionsDetails":
            {
              "transactionId": "1234567",
              "creditor": {"name": "John Miles"},
              "creditorAccount": {"iban": "DE67100100101306118605"},
              "mandateId": "Mandate-2018-04-20-1234",
              "transactionAmount": {"currency": "EUR", "amount": "-256.67"},
              "bookingDate": "2017-10-25",
              "valueDate": "2017-10-26",
              "remittanceInformationUnstructured": ["Example 1"],
              "bankTransactionCode": "PMNT-RDDT-ESDD",
            }
        }


    authorisationListExample:
      value:
        {
          "authorisationIds": ["3d9a81b3-a47d-4130-9999-a9c0ff861100"]
        }


security:
  #####################################################
  # Global security options
  #####################################################
  - {}


tags:
  #####################################################
  # Predefined Tags to Group Methods
  #####################################################

  - name: Payment Initiation Service (PIS)
    description: |
      The component for Payment Initiation Service (PIS) offers the following services:
        * Initiation and update of a payment request
        * Status information of a payment
  - name: Confirmation of Funds Service (PIIS)
    description: |
      Confirmation of Funds Service (PIIS) returns a confirmation of funds request at the ASPSP.
  - name: Account Information Service (AIS)
    description: |
      The Account Information Service (AIS) offers the following services:
        * Transaction reports for a given account or card account including balances if applicable
        * Balances of a given account or card account
        * A list of available accounts or card account
        * Account details of a given account or card account or of the list of all accessible accounts or card account  
          relative to a granted consent
